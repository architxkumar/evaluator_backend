NTING KNOWLEDGE USING RULES Ta be useful, a system has to do more than just correctly perform some task, John Mc Dermott, Al Researcher In this chapter, we discuss the use of rules to encode knowledge. This is a particularly important issue since rule-based reasoning systems have played a very important role in the evolution of AI from a purely laboratory science into a commercially significant one, as we see later in Chapter 20. We have already talked about rules as the basis for a search program. But we gave little consideration to the way knowledge about the world was represented in the rules (although we can see a simple example of this in Section 4.2). In particular, we have been assuming that search control knowledge was maintained completely separately from the rules themselves. We will now relax that assumption and consider a set of rules to represent both knowledge about relationships in the world, as well as knowledge about how to solve problems using the content of the rules. 6.1 PROCEDURAL VERSUS DECLARATIVE KNOWLEDGE Since our discussion of knowledge representation has concentrated so far on the use of logical assertions, we use Jogic as a starting point in our discussion of rule-based systems. In the previous chapter, we viewed logical assertions as declarative representations of knowledge. A declarative representation is one in which knowledge is specified, but the use to which that knowledge is to be put is not given. To use a declarative representation, we must augment it with a program that specifies what is to be done to the knowledge and how. For example, a set of logical assertions can be combined with a resolution theorem prover to give a complete program for solving problems. There is a different way, though, in which logical assertions can be viewed, namely as a program, rather than as data to a program. In this view, the implication statements define the legitimate reasoning paths and the atomic assertions provide the starting points (or, if