ke a prediction about individual friendships. But if we had the fact (Friend(aditi, shubhgata) in KBj as well, then the extension would be different. That is given, KB' (Friend(aditi, shubhgata) v Friend(aditi, jennifer)), Friend(aditi, shubhgata) we would have, KB' (Friend(aditi, shubhgata) Friend(aditi, jennifer)), Friend(aditi, shubhgata), Friend(aditi, jennifer) There is one small point one needs to make about reasoning with the closed world assumption. Suppose the knowledge base KB , has a student Divya for whom there is no known friend in the class. How should a system answer the query below? dx Chat(x, divya) ? Should the system answer yes or no? On the face of it, the answer should be no because that is what the knowledge base suggests. However, to answer with a definitive no, the system will have to make a domain closure assumption. The domain closure assumption says that the only people in the domain are those that have been explicitly mentioned. For the KB,, this assumption is expressed as, V x(x aditi V x divya V x jennifer V x shubhagata V x subun V x vinayak) Given this assumption along with the closed world assumption, the knowledge base KB, and the new statement about Divya, the answer to the query is no. Domain closure can have problems of its own. Suppose we further add the following statement to the knowledge base. Ax (NewStudent(x) x divya) Then this unnamed student does not make it into the domain closure statement. Yet as we can see, our conclusion is not longer justified. For all we know the new student might be a friend of Divya. To infer now that Divya has no friend, we would also have a closure statement saying that we have said all that can be said about the Friend relation. This is a little easier in the second form of default reasoning we shall see in the next section. 17.1.2 Circumscription Circumscription, devised by John McCarthy, is an approach that aims to minimize the extent of only some predicates (McCarthy, 1980; 1986), (Lifschit