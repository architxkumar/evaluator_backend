 search done by B , as compared to a full tree search by variants of the Minimax algorithm. The reasoning in B is done on the basis of a series of small probe searches as shown by the smaller envelopes. Figure adapted from (Berliner, 1979). 8.3 Limitations of Search The game playing algorithms described above are constrained to search a limited part of a game tree. The constraints come from the limited time available to the program to find a move. Within this limited look-ahead, the search program has to rely on the evaluation function to decide the relative merits of the different moves. The evaluation function is basically some kind of perception function that looks at the board and returns a value that is indicative of how good the position is for MAX. However, there are often situations where the evaluation function is unable to discriminate between different options because they are materially similar, and the consequences of the different choices are beyond the horizon of the search. This happens more often towards the end game, when the choices are typically fewer but more critical. There are some situations that are a kind of deadlock, where the interest of each player is in maintaining status quo. Plays in such situations explicitly try to delay meaningful activity, because changing the situation involves some kind of loss. An example of such a situation in Chess is known as Zugzwang (Hooper and Whyld, 1992) in which the value of the board position critically depends upon who has to move. Figure 8.37 depicts two such positions from (Flear, 2004). FIGURE 8.37 Two Zugzwang positions from (Flear, 2004). In the left position, if Black is to move in then the King has to withdraw protection from one of the three pawns, but if White has to move, Black is safe. In the position on the right as well, Black would rather not move. If White is to move however, the White King can be moved in a triangle (right, downLeft, up) to come back to the same position putting Black