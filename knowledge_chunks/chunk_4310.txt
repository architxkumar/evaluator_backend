ngle agent performs the problem decomposition but then negotiates with the other agents to determine who will take on which subtasks. The contract net mechanism [Davis and Smith, 1983] supports this kind of interaction. In a contract net, there are two roles that the agents can assume: 1. Manager, whe decomposes a problem, looks for contractors to attack pieces of the problem, and monitors the problem s execution. 2. Contractor, who executes a subtask, possibly by actually doing the job and possibly by recursively becoming a manager and subcontracting subparts of the job to other contractors. Managers and contractors find each other through a process of bidding: 1. A manager announces a task. 2. Contractors evaluate the task with respect to their own abilities and the resource requirements necessary to accomplish it. 3. Contractors make bids to the manager. 4. The manager chooses a single contractor and waits for the result. Thus managers and contractors select each other by communicating in a completely distributed fashion. A node can be both a manager and a contractor simultaneously; rather than sit idle, waiting for results from its contractors, a manager can take on work in the meantime. Distributed Control and Communication So far, we have focused on systems in which there is a single agent who maintains control of the overall problem-solving process. In this section, we look at the problem of distributed planning, in which there is no such centralized controller. In the extreme form of such systems, we can make no assumptions about how the various agents will behave. But without any such assumptions, it is impossible to construct problem-solving algorithms. So we start by assuming that each agent is rational. We can define rationality as follows: An agent is rational if it behaves in a manner that is optimal with respect to its goals. Unfortunately, in a complex world, an agent may not have enough processing power to behave optimally. This leads to a slightly 