urrent node) as we did in the A* algorithm. It is not possible to compute a single such value since there may be many paths to the same state. And such a value is not necessary because of the top-down traversing of the best-known path, which guarantees that only nodes that are on the best path will ever be considered for expansion. So 4 will serve as the estimate of goodness of a node. Algorithm: AO* 1. Let GRAPH consist only of the node representing the initial state. (Call this node JN/T.) Compute A (INIT } 2. Until INIT is labeled SOLVED or until INIT s h value becomes greater than FUTILITY, repeat the following procedure: (a) Trace the labeled arcs from JNIT and select for expansion one of the as yet unexpanded nodes that occurs on this path. Call the selected node NODE. (b) Generate the successors of NODE. If there are none, then assign FUTILITY as the h value of NODE. This is equivalent to saying that NODE is not solvable. If there are successors, then for each one (called SUCCESSOR) that is not also an ancestor of NODE do the following: (i) Add SUCCESSOR to GRAPH. (ii) If SUCCESSOR is a terminal node, label it SOLVED and assign it an A value of 0. (iii) If SUCCESSOR is not a terminal node, compute its h value. (c) Propagate the newly discovered information up the graph by doing the following: Let S be a set of nodes that have been labeled SOLVED or whose h values have been changed and so need to have values propagated back to their parents. Initialize 5 to NODE. Until S is empty, repeat the, following procedure: (i) If possible, select from S a node none of whose descendants in GRAPH occurs in S. If there is no such node, select any node from S. Call this node CURRENT, and remove it from S. (ii) Compute the cost of each of the arcs emerging from CURRENT. The cost of each are is equal to the sum of the H values of each of the nodes at the end of the arc plus whatever the cost of the arc itself is. Assign as CURRENT S new h value the minimum of the costs just c