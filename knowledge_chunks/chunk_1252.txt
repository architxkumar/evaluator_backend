of the following, moving from one iteration to the next: 1. Assignments of data points to clusters, i.e., cluster(.) function 2. Choosing the centroid for a cluster, i.e., y(.) function. K-means adopts the simple approach of modifying these in sequence within each iteration. In particular, the cluster assignments, cluster(.), is modified keeping the p(.) fixed, following by modifying p(.) keeping the cluster assignments fixed. Modifying the Cluster Assignments We will now look at how the cluster assignments may be modified when the p(.) function, the representative point for each cluster, is specified. For every point x;,, the contribution to the objective function is directly related to the distance to the representative point for the corresponding cluster. The obvious way to minimize the contribution of x; to the objective function is by re-assigning x; to the cluster whose centroid is nearest to it. Thus, cluster (x; ) argmin d(x; , M(C;)) (18.48) J Modifying the Representative Points We now consider modifying the representative points for each cluster. The contribution of each cluster C;, to the objective function is the sum of the distance of each data point in C; to the representative point, p(C;). This sum is directly related to the average distance of points in C; to u(C;), which is intuitively minimized by setting p(C)) itself to the average (mean) of points in Cj. Thus, each attribute of y(C;) would be assigned to the mean value of the attribute among objects in C;. In particular, for the attribute, x ati) xeC, Cj aC Mi (18.49) Having described the basic steps that are performed in K-means clustering, we now outline the algorithm in Figure 18.14. It starts off with initializing p(.) randomly for each cluster (Line 1), followed by a sequence of iterations in which the cluster(.) and p(.) values are modified in sequence (lines 2-4). K-Means (Set of Objects X x,, 42, .., X, , clusters k) 1 Initialize u(C,) through p(C,) randomly in the Euclidean space of X 2 