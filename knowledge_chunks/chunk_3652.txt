ves from the state (1.3,4) each column element under this state corresponding to a valid move has been given an initial value of A . In a similar manner all other columns have been given uniform probability values con-csponding to all valid moves for the given column state. The CLA selects moves probabilistically using the probability values in each column. So, for example. if the CLA had the first move, any row intersecting with the first column not containing an asterisk would be chosen with probability 4. This choice then determines the new game state from which the opponent must select a move. The opponent might have a similar matrix to record game states and choose moves. A complete game is played before the CLA is given any feedback. at which time it is informed whether or not its responses were good or bad. This is the collective feature of the CLA. If the CLA wins a game, all moves made by the CLA during that game are rewarded by increasing the probability value in each column corresponding to the winning move. All nonwinning probabilities in those columns are reduced equally to keep the sum in each column equal to I. If the CLA loses a game, the moves leading to that loss ar penalized by reducing the probability values corresponding to each losing move. All other probabilities in the columns having a losing move are increased equally to keep the column totals equal to I. After a number of games have been played by the CLA. the matrix elements Current state NEENNEEN mmmmmmmm Figure 17.7 CLA internal represeniaion of game states. Sec. 17.5 Genetic Algorithms 375 which correspond to repeated wins will increase toward one, while all other elements in the column will decrease toward zero. Consequently, the CLA will choose the winning moves more frequently and thereby inprove its performance. Simulated games between a CLA and various types p1 opponents have been performed and the results plotted Bock. 1985). It was shown, for example. that two CLAs playing agains