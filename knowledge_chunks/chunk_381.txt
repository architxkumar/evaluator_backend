valuates nodes using a small fixed ply look-ahead search, called a probe search. It uses the results of these evaluations to selectively explore certain move combinations, before deciding on the move to make. It is as if it is arguing and counter-arguing about some lines of play, using the probe searches to decide its move. Algorithm B assigns bounds on the values of each node as it searches forward. The node representation in B has the following elements (Berliner, 1979): The RealVal, which is the best estimate of the true value of the node. The OptVal, which is the optimistic value of the node for the side-onmove. The PessVal, which is the optimistic value for the side-not-on-move, backed up from its subtree, and The OptPrb, which is the probability that a certain target value can be achieved by future searches of the subtree rooted at this node. The real values are determined by probe searches, using the minimax backup rule. Optimistic values are the best values ? of leaves of the same type (MAX or MIN). Pessimistic values are optimistic values for the opponent nodes. Optimistic values and pessimistic values are inherited by children from their parents during B search. The OptPrb values represent the probability that the target value can be achieved in that subtree. Probability distributions collect the information needed to make good decisions about what to explore and when to stop. The target value for a node, which has been determined empirically, is computed as, Target Value (OptVal 2ndBest) RealVal(Best)) 2 where the Best and the 2ndBest refer to the children of a node with the best real value and the second-best optimistic value. The probability of a target value being reached from a given node is computed by linear interpolation between the real value, assumed to have probability 1, and the optimistic value, considered to have probability 0, of that node. If the former is 20 and the latter 250, then the probability of a target value of 100 is given by, Pro