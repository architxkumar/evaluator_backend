heuristicisthe effective branchingfactorb . Ifthe
BRANCHINGFACTOR totalnumberofnodesgeneratedby A foraparticularproblemis N andthesolutiondepthis d, then b is the branching factor that a uniform tree of depth d would have to have in order
tocontain N 1nodes. Thus,
N 1 1 b (b )2 (b )d . For example, if A finds a solution at depth 5 using 52 nodes, then the effective branching
factor is 1.92. Theeffective branching factor can vary across problem instances, but usually
it is fairly constant for sufficiently hard problems. (The existence of an effective branching factor follows from the result, mentioned earlier, that the number of nodes expanded by A grows exponentially withsolution depth.) Therefore, experimental measurements of b on a
smallsetofproblems canprovide agood guide tothe heuristic s overall usefulness. Awell- designed heuristic would have a value of b close to 1, allowing fairly large problems to be
solvedatreasonable computational cost.
104 Chapter 3. Solving Problemsby Searching
To test the heuristic functions h and h , we generated 1200 random problems with
1 2
solution lengths from 2 to 24 (100 for each even number) and solved them with iterative deepeningsearchandwith A treesearchusingbothh andh . Figure3.29givestheaverage
1 2
number of nodes generated by each strategy and the effective branching factor. The results
suggestthath isbetterthanh ,andisfarbetterthanusingiterativedeepening search. Even
2 1
for small problems with d 12, A with h is 50,000 times more efficient than uninformed
2
iterativedeepening search.
Search Cost(nodes generated) Effective Branching Factor d IDS A(h 1 ) A(h 2 ) IDS A(h 1 ) A(h 2 )
2 10 6 6 2.45 1.79 1.79
4 112 13 12 2.87 1.48 1.45
6 680 20 18 2.73 1.34 1.30
8 6384 39 25 2.80 1.33 1.24
10 47127 93 39 2.79 1.38 1.22
12 3644035 227 73 2.78 1.42 1.24
14 539 113 1.44 1.23
16 1301 211 1.45 1.25
18 3056 363 1.46 1.26
20 7276 676 1.47 1.27
22 18094 1219 1.48 1.28
24 39135 1641 1.48 1.26
Figure 3.29 Comparison of the search costs 