ciated preconditions hold. An action (or move in the state transition view) is an instance generated from an operator. The first program to use this formalism was STRIPS (Fikes, 1971). The program was designed to plan in the domain of blocks world. In this domain, a set of labelled blocks are in some configuration to start with. A block can be on another block, or a block can be on the table, and the table has unlimited capacity. The objective of the planner is to rearrange the blocks into a desired (goal) configuration. The output of the planner is the set of moves that brings about this desired rearrangement. Figure 7.2 illustrates the domain with an example problem. Ta K F L A pb a N P G B E I J Oo Q A J The given state The goal on(G, A) A on(B, J) Figure 7.2 The blocks world domain. Observe that the goal state is incompletely specified. The given state has to be specified completely. The world, in the blocks world domain, is described by a set of statements that conform to the following predicate schema: on(X, Y) : block Xis on block Y ontable(X) : block X is on the table clear(X) : no block is on block X holding(X) : the robot arm is holding X armempty : the robot arm is not holding anything One can make the following observations about the description. There are no metrics involved. A block can have only one block on it, and there is no notion of size, weight or location co-ordinates. We assume an arbitrarily large table with no space constraints. For all purposes, the blocks are all of the same size and shape. They can be handled identically, and only one can rest on another. The one-armed robot can hold one block. The description is essentially qualitative in nature and does not involve numbers in any form. The representation borrows from logic, specifically first order logic. Unlike in classical logic, however, predicates in planning such as on(C, D) can be true at one time instance, and false at another. Such predicates are also known as fluents. It was na