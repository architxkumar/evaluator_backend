s is used to induce activation from one node to another. The E nodes that match the query are assigned an activation value 1 to start with. The other kind of arc is the relevance arc that links an IE node to a case node. It signifies the relevance of the E node for the case and is a function p:E x C 0,1 stored in the adjacency matrix Rel. The following figure illustrates a CRN for a meal classification task. Only the arcs with nonzero weights are shown. The weights of the relevance arcs are assumed to be one. The weights of the similarity arcs Oj, represent the author's perception of similarity. In the above figure, each meal type is assumed to be made up for four'2 components that represent a typical meal. A north Indian meal, for example, is defined as the following case (Pulav, Phulka, Daal, Lassi). A query case containing all these elements will match the case (class) perfectly. But even a meal (Pulav, Parantha, Daal, Curd) will get a high score. The process of retrieval in CRN is more like the process of reconstruction of a structure from its components or the process of case completion by spreading activation. The high level retrieval algorithm CRN-T for finding cases above a threshold, is given in Figure 15.31. First, the JE nodes matching the query are activated. The propagation of activation happens in two stages. In the first stage, activation is spread to other E nodes in proportion to the local similarities. Note that this happens in only one step in the algorithm below. This means only nodes directly connected to the initial E nodes will receive activation. In the above example, a query containing Lassi will not activate the node Buttermilk . One could extend activation spreading to happen in a loop till the values stabilize, like in a Hopfield net. Or one might look for a mechanism to fill in the arc weights accurately by consulting an external source like the Wordnet (see Chapter 16). Buttermilk FIGURE 15.30 A sample CRN for a meal classification task