E 8.6 The minimax rule backs up values from the children of a node. For a MAX node, it backs up the maximum of the values of the children, and for a MIN node, the minimum. The rationale of the rules is that given a set of choices with known outcomes, MAX will choose a move that yields the value 1 (or win) if available, else 0 if available, and will have to choose a 1 (or oss), only if all its children are labelled with 1. The backup rule for MIN is exactly the opposite, given that MIN is also trying to win the game. For MIN to win the game, the node must be labelled with 1 or loss. The minimax value of the game is the backed-up value of the root from all the leaves, and represents the outcome when both the players play perfectly. Figure 8.7 shows the above game tree with backed-up values. Observe that MAX wins this game when both players play their best. FIGURE 8.7 The game tree with backed-up values. Arrows show the values backed up. They identify the best move for each player. Where more than one move is best, all are marked. MAX wins the game because the backed-up value is W. A game playing program is required to produce the moves for a player, traditionally MAX. Since the minimax value determines the best that MAX can do against a perfect opponent, this involves computing the minimax value, and the choice of moves that leads to it. The choices of a player can be represented as a strategy. A strategy is a subtree of the game tree that freezes the choices for the player. A strategy can be constructed by the following procedure. ConstructStravegy (MAX) 1 Traverse the tree starting at che root if level is MAX then Chocse cne branch below it if level is MIN then Chocse all branches belew it return the subtree constructed mH Om Ww bd FIGURE 8.8 A Strategy for MAX. The idea is that the strategy freezes the choices for the player, in our case MAX. That is, MAX has already decided the strategy, or the set of choices. The following figure shows two strategies for MAX in t