e is returned. The object, car, will retain these properties until they are replaced with new ones or until removed with the remprop function which takes two arguments, 1 the object and its attribute, in other wot1s, properties are global assignments. To retrieve a property value, such as the dolor of car, we use the function get, hich also takes the two arguments object and attribute. ->(get car 'color) RED ->(get 'car 'make) FORD .>(pprop 'car 'blue 'color) BLUE .>(get 'car color) BLUE ->(r,mprop 'car 'color) BLUE .>(get 'car 'color) NIL LISP and Other Al Programming Languages Chap. 3 36 The property value may be an atom or a list. For example. if Danny has pets named Schultz. Penny. and Etoile, they can be assigned as ->(putpr Op 'danny '(schultz penny etoile) 'pets) (SCHULTZ PENNY ETOILE3 .>(gbt danny 'pets) (SCHULTZ PENNY ETOILE) To add a new pet named Heidi without knowing the existing pets one can do the following: .>(putpr Op 'danny (cons 'heidi (get '4ienny 'pets)) 'pets) (HEIDI SCHULTZ PENNY ETOILE) Items can be removed from a list of values in a similar manner. Since some versions of Common LISP do not provide the putprop function, it may be necessary to define your own. This can be done with the following code. .>tdetun putprop (object value property) Isetf (get object property) value)). PUTPROP The new function self used in the above definition is like setq except it is more general. It is an assignment function which also takes two arguments, the first of which' may be either an atom or an access function (like car. cdr. and get) and the second, the value to be assigned. When the first argument is an atom. setf behaves the same as setq. It simply binds the evaluated second argument to the first. When the first argument is an access function. self places the second argument, (a b C) the value, at the location accessed by the access function For example. if has been bound to x. the expression (self (car x) 'd) will replace the a in (a b c) Likewise, self