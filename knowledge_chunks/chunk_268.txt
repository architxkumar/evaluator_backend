thm uses the Rete network. It accepts changes in the Working Memory, and generates changes in the Conflict Set. The working memory changes are input in the form of tokens of the form WME and -WME . The positive sign means that a new WME has been created, and a negative one means that a WME has been removed. Remember that these are the two kinds of changes the RHS of a rule can make. The tokens traverse the net and eventually may combine with existing tokens to satisfy the LHS of a rule. The rule will then get added to the Conflict Set. Negative tokens may go and cancel some existing token, and result in the removal of a rule from the Conflict Set. The effect of the tokens is reversed for patterns with the negative sign. For such patterns, a positive token may remove a rule from the CS, while a negative token may insert a rule into it. The function implemented by the Rete algorithm is depicted in Figure 6.19. Changes in WM Changes in CS Figure 6.19 The Rete match algorithm compiles the rules into a network. It accepts changes in the Working Memory as input, and computes the resulting changes in an existing possibly empty Conflict Set. The positive or negative tokens are input at the top of the net and the traverse downwards towards the rules. The net is made up of two kinds of nodes. The top half of the network is a discrimination net that switches a token towards the rules that it matches. It is made up of nodes call a pha nodes. Each alpha node tests the value of one attribute and accepts tokens that satisfy its conditions. The token in question resides at the predecessor node before the test. The predecessor may itself be an alpha node or it may be the root node. Different aloha successors of a given node, test for different conditions. Figure 6.20 below illustrates the notion of an alpha node. In this figure, there are three alpha nodes and two example tokens. token in class card-rank ve 4 (card-rank player north . Player south Player north Figure 6.20 Alpha node