 SS o FIGURE 14.35 The concept lattice for the context given in Table 14.2. Observe that there is a property history that does not hold for any object. To find the common properties shared by two objects, one has to find the join or the lowest common subsumer. In our example, to find what properties (subjects) are shared (liked) by Arnav and Amrita, we traverse upwards from their respective nodes C2 and C3, to concept C4 which has the intension science . Likewise, to find objects that share two properties, one has to traverse downward from the nodes labelled by the two properties to the highest common subsumee (or meet) of the two nodes. In Figure 14.35, to find the students who like both English and Games, we inspect their meet, the node C,which is the extension aarti . Observe that, int( ,) english, science int(C,) science, games and their union is english, science, games which is smaller than the intension of their infimum C, math, english, science, games, music . This means that the union of the intensions of two concepts may be smaller than the intension of their infimum. Likewise, ext(C2) U ext(C3) S ext(C4) It is also the case that the union of the extensions of two concepts may be smaller than the extension of their supremum. However, the intersection of intensions is equal to the intension of the supremum, and the intersection of extensions is equal to the extension of the infimum. 14.8.1 From Context to Concept Lattice Given a set of objects O G, a concept can be formed by (possibly) extending the set to include other objects that share the corresponding properties. That is, the concept is computed as (obj(att(O)), att(O)). But to find all concepts, one would have to wade through all the subsets of G, which are exponentially many. We sketch an algorithm to find the concepts and construct the concept lattice at the same time. The input to the procedure is the context K. The task is both to discover the formal concepts and structure them into a lattice. We h