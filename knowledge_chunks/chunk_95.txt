ds our algorithms with unimaginably large numbers. Our weapon will be Knowledge. Knowledge will enable our algorithms to cut through the otherwise intractable search spaces to arrive at solutions in time to be of use to us. In the next chapter, we look at search methods that use some domain knowledge to impart a sense of direction to search, so that it can decide where to look in the solution space in a more informed manner. Exercises 1. The n-queens problem is to place n queens on an n-by-n chessboard, such that no queen attacks another, as per chess rules. Pose the problem as a search problem. . Another interesting problem posed on the chessboard is the knight s tour. Starting at any arbitrary starting point on the board, the task is to move the knight such that it visits every square on the chessboard exactly once. Write an algorithm to accept a starting location on a chessboard and generate a knight's tour. Nh FIGURE 2.30 A 5-queens solution. Box 2.6: Self Similarity An interesting observation has been made about chessboards that have sides that are powers of 5. The adjoining figure displays one solution for 6. the 5-queens problem. If we want to solve the 25 queens problem, then we can think of the 25 x 25 board as twenty five 5 x 5 boards. Then, in the five 5 x 5 boards that correspond to the queens in the above solution, we simply place the 5 x 5 solution board as shown in Figure 2.31. Thus, the 25 x 25 board solution is similar to the 5 x 5 board solution. Such similarity to a part of itself is known as self similarity and is a key property of fractals (see for example (Barnsley, 1988)). Clouds, coastlines, plants and many artifacts in nature have this property. Observe that with this knowledge, arbitrarily large n-queen problems that are powers of five can be solved quite easily, whereas the search would have taken very long. FIGURE 2.31 A 25-queens solution constructed from a 5-queens solution. 3. In the rabbit leap problem, three east-bound rabbits stand 