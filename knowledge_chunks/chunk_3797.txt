nction indicates a relatively good position (as shown for chess and tic-tactoe), while at other times a low value indicates an advantageous situation (as shown for the traveling salesman). It does not matter. in general, which way the function is stated. The program that uses the values of the function can attempt to minimize it or to maximize it as appropriate. 6 For arguments in support of this, see Simon [1981]. 36 Artificial Intelligence DOMES b E ERRNO OR BY RGAE SOTTO NEUTER Chess the material advantage of our side over the opponent Traveling Salesman the suin of the distances so far Tic-Tac-Toe 1 for each row in which we could win and in which we already have one piece plus 2 for each such row in which we have two pieces Fig. 2.8 Some Simple Heuristic Functions The purpose of a heuristic function is to guide the search process in the most profitable direction by suggesting which path to follow first when more than one is available. The more accurately the heuristic function estimates the true merits of each node in the search tree (or graph), the more direct the solution process. In the extreme, the heuristic function would be so good that essentially no search would be required. The system would move directly to a solution. But for many problems, the cost of computing the value of such a function would outweigh the effort saved in the search process, After all, it would be possible to compute a perfect heuristic function by doing a complete search from the node in question and determining whether it leads to a good solution. In general, there is a trade-off between the cost of evaluating a heuristic function and the savings in search time that the function provides. In the previous section, the solutions to AI problems were described as centering on a search process. From the discussion in this section, it should be clear that it can more precisely be described as a process of heuristic search. Some heuristics will be used to define the control structure tha