e able to terminate with failure. STAN maintains a queue of goal sets to be considered at the fixed point layer, and a buffer in which new goal sets are considered. The new goal sets are the ones that would have been generated if the planning graph had been extended beyond the fixed point. When the graph is (notionally) extended, STAN adds new subgoal sets to the queue. When it cannot solve a (new) subgoal set in this queue, it propagates forward the goal set into the buffer, leading to new goal sets to be added to the queue, which it now recedes back to try solving them. This forward and backward movement from the fixed point is characterized by the name wavefront. For more details on STAN and on the proofs of soundness, completeness and termination of the wavefront mechanism, the reader is referred to (Long and Fox, 1999). 10.1.6 Conditional Effects Another direction of development is to extend the planning graph methods to richer domains. One of the first extensions reported was on ADL set. The Action Description Language (ADL) was a richer alternative to STRIPS domains and was later subsumed in PDDL2.1. The ADL language can be described as (Fox and Long, 2003), adl istrips :typing tnegative-preccnditions :disjunctive-preconditions requality :quantified-preconditicns :conditional-effects t eet Negative preconditions can be handled by introducing a separate proposition to represent a negated one. Consider the proposition HaveBook(Wren Martin). Consider an action that says that if HaveBook(Wren Martin) is true then one must buy the book. Instead of expressing the negated fact, one can introduce the new proposition NotHaveBook(Wren Martin) and maintain it permanently mutex with HaveBook(Wren Martin). Then instead of just deleting a proposition in an action, one can also add its negation. Observe that this approach requires us to abandon the negation by failure closed world assumption and takes us into an open world formulation. Consider the Unstack(A, B) action in t