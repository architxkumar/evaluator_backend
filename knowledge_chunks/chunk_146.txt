provement in the strategy, through a process of natural selection. Genetic Algorithms (GA) are a class of algorithms that try and build solutions by introducing evolution and selection of the best in a population of candidate solutions. The first thing one must do is to encode the problem by devising a schema for candidate solutions. One can think of this as an artificial chromosome, or the DNA sequence that is the blueprint of the solution. The chromosome is made up of the different components that make up the solution. Starting with a population of strings, GAs involve churning of the genes in search of better combinations. There are three basic operations in Genetic Algorithms (Goldberg, 1989): 1. Selection The selection operator allows the fitter candidates to be chosen for reproduction, and thus propagation of the genes (components). While in nature, the phenotype is out in the world competing for survival, such an approach is not suitable because the purpose of writing the GA is to produce a good design (solution). It would be too time consuming to build the phenotypes and test them in the real world, though such an approach has been used where simulation is possible (Sims, 94). In practice, GAs employ a user specified function to decide which designs solutions are good or not. This function is called the fitness function, and gives a fitness value to each candidate. In optimization, we called this function the evaluation function. The selection operator takes a population of candidates and reproduces (clones) them in proportion to their fitness values. Fitter candidates will have more copies made, and the worst ones may not get replicated. 2. Recombination The recombination operator takes the output of the selection operator, and randomly mates pairs of candidates in the population, producing offspring that inherit components (genes) from both parents. The new population thus contains a totally different set of solutions. In order to preserve the best candida