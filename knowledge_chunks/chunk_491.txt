d a set of goal predicates that a solution plan is required to satisfy. The task of planning is to find a solution plan. The simplest plans are sequences of actions, and the most direct approaches to planning are search algorithms to find those action sequences. In Chapter 7, we studied some of the search based planning algorithms for the simplest domains. The simplest domains described in PDDL1.0 have instantaneous deterministic actions making the only changes in a completely observable domain, and the goal predicates specify conditions on the final state. One of the reasons why planning research confined itself to the STRIPS domain is that even for these domains, the basic search algorithms were bogged down by combinatorial explosion. In this chapter, we look at some of the techniques that increased the length of plans that could be found by an order of magnitude. Included amongst these are methods to adopt a two stage approach in which the problem is transformed into a structure that circumscribes the space of search, and domain-independent, heuristic estimation methods. We also look at the planning in richer domains. In particular, we look at planning with durative actions, and look at approaches for problems with trajectory and soft constraints. We begin with the algorithm Graphplan that probably heralded these advanced planning methods. 10.1 GraphPlan The algorithm Graphplan presented by Avrim Blum and Merrick Furst (1995; 1997) takes a very different view of the planning problem. Instead of searching for a solution either in the state space or the plan space (see Chapter 7), it first constructs a structure called a planning graph that captures all possible solutions and then proceeds to search for a solution in the planning graph. The Graphplan algorithm, as described by Blum and Furst, works in the STRIPS domain. An action is applicable in a state if its preconditions are true in the state. Negative preconditions cannot be handled . The action may have both 