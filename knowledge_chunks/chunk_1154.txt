child might figure that her dad is likely to be in a good mood, and therefore might decide that that would be a good time when he is likely to order her favourite paneer butter masala from the neighbouring restaurant. However, when predictive and abductive rules are mixed up, there could be problems in chaining rules to make sequences of inferences. Let us look at the example used by Pearl (1988). Consider the following two rules, with some measure of probability assigned to each inference. If (the sprinkler was on last night) then (the grass is wet). If (the grass is wet) then (it rained last night). The two rules by themselves are fine, and may be used with some benefit. The first one is predictive and the second abductive. But when we try to chain them together, we end up with a rule that says that, If (the sprinkler was on last night) then (it rained last night). Clearly there is a problem lurking here. Since one can have both abductive and predictive relations thrown together in a network (see the following section), there could be a danger if two nodes reinforcing themselves in a cyclic fashion (Lowrance, 1982). A hypothesis would make the evidence appear more likely and vice versa and a belief propagation system could run into trouble. The key to addressing this problem is to keep track of the source of propagation. Every node maintains a support list of other nodes in addition to a belief measure. This is reminiscent of storing justifications in the ATMS (see Section 17.4). An alternative approach called conditioning, relies on modifying the underlying connectivity of the network to eliminate loops (Pearl, 1985). If one implements a rule like system in which there is a predictive (malaria implies high fever) abductive (high fever suggests malaria) cycle, it could go into loops amplifying a small bit of evidence. Systems like MYCIN that operate in a modular rule baselike fashion, restrict themselves to abductive reasoning only. In doing so, however, one has t