e explore building systems that store and reuse problem solving experiences. Very often, the problem solver has a dynamic memory which stores experiences in an explicit form to be used for future problem solving. We will refer to this approach as a memory based approach, in which the agent uses information stored in its memory in some form to solve a given problem. Learning systems also capitalize on experience, but they use the experiences to build and refine an implicit representation of what is known as a target function. Neural networks and decision trees are examples of learning systems. Rule based systems can also be thought of distilling experience into modular if-then chunks of knowledge. The first principles approach to problem solving too does not operate in a vacuum. It does need to represent knowledge of the domain, the relations between them, and the knowledge of effects of agent choices in the domain. We refer to such an approach as a model based approach, because the simulation is done over some model of the problem domain. One could say that the model based approach uses deep knowledge (Struss, 2008) because it involves the representation of a model of the domain, and then experiential or heuristic knowledge can be thought of as shallow knowledge. Figure 15.1 highlights the broad difference between the model based and memory based approaches. The popular puzzle known as the Rubik s cube (Figure 15.2) is a well known problem that illustrates the use of two techniques, and also the efficacy of the knowledge based approach. A Rubik s cube is a cube with the six faces coloured with six colours. The cube is sliced in nine squares on each of its faces, and each face of nine cubelets can rotate around an axis perpendicular to the face. Repeated rotations can jumble up the colours of the cube, and the goal is to get the faces back into one colour again. In the seventies, when the Hungarian architect Erno Rubik invented the puzzle, it became a rage and many p