izing the G integrand to either poly(x) * f2(x) dx or to f1(x) * tran(x) dx with corresponding bindings U = poly(x) and u = fi(x) dv = f2(x) dx dv = tran(x) dx both of which exclude the negative instance. After the Problem Solver attempts to solve the second integral. 5 2x * cos(x) dr. the Critic labels the binding a = 2.x. dv = cos(x) dx as positive. However, this example is not yet included in the version space. Consequently, S must be generalized to include this instance. The bound S is generalized by finding the least general function in the description hierarchy which includes both sin and cos (Figure 19.4). This generalization produces the new version space G: 5f1(x) * tran(x) dx S: f Zx * trig(x) dx Through repeated attempts at solving such well organized problems. LEX is able to create and refine heuristics for each operator which designate when that operator should be applied. Thus, the refined heuristics reduce the class of problems to those producing acceptable solutions. 19.4 THE INDUCE SYSTEM Several versions of the INDUCE system were developed beginning in the late 1970S (Larson and Michalski, 1977. and Dietterich and Michalski, 1981). INDUCE is a system which discovers similar patterns among positive examples of objects and formulates generalized descriptions which characterize the class patterns. The description language and the internal representation used in the system are an extension of first order predicate calculus. This is one of the unique features of INDUCE. Before outlining how the system operates, we introduce a few new terms: Selector. A relational statement defined by either a predicate or a function together with the values it assumes. Typical selectors used to describe objects or events in INDUCE are (shape = square V rectangular]. [color = green]. (size < 41, [number spots = 3 . . 81. .Iontop(a,b)], and so on. Complex. A logical product of selectors. A complex is a conjunctive description of some object (each selector in brackets is r