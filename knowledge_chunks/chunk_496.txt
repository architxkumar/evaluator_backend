me clear when we define the mutex relation formally as follows. PraDn(A) OnT(A) OnT(C) PutDn(C) On(C.A) A Stack(C,A) Ont.) Bic , Hold(C) Clear(B) yal Ne 7 Hold(A) - Hold(A) OnT(B) fi OnT (BY f- - OnT(B) Clear(C) -- -----7-- --- Clear(C) 4 ----------- - Clear(C) OnT (CQ) 3 - - -F 5-- 7 ) A - 5 s-- Fe OnT(C) ArmE : ArmE On(A,B) - 7 A 455 ON(A,B) 2TY- F- ----- On(A,B) Clear (A)- - 29555-5255" Cleat(A) 4 5 5 HSas ese 5 Soe ese Clear(A) Py A Py Ay Py FIGURE 10.4 The planning graph for a simple blocks world problem. Only a few mutex edges are shown. Also, the edges linking some of the new actions in A are not shown. More interestingly, the proposition layers and action layers in a planning graph stabilize or level off after a while. Once the graph has levelled off, no new propositions or actions will appear. However, the number of mutexes may still change. In the starting layer, there are no mutexes. But as the graph is built, mutexes appear. However, these mutexes could disappear in future layers. Once they disappear, they can never appear again. Consider the blocks world problem in which two blocks, say A and B, that have to be unstacked from two blocks, say C and D respectively, and are to be put on the table. In the first action layer, there will be two actions, UnSt(A, C) and UnSt(B, D), with effects Hold(A) and Hold(B) in P;. These actions and their effects will naturally be mutex since only one block can be picked up by the one armed robot. In the next level Az there are two actions PtDn(A) and PtDn(B), resulting in propositions OnT(A) and On7(B) in layer Pz. Again, it is easy to see that these propositions are mutex in P . However, with two more layers of actions and propositions, the two propositions On7T(A) and OnT(B) are not mutex in the layer P4. 10.1.2 Mutex Relations The plans produced by Graphplan may have actions that occur in the same layer. This means that they could be done in parallel without affecting the outcome. Moreover, if one wants linear plans t