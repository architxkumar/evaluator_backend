ution can find a hem. rst problem says that given, Ontable(A) A Ontable(B) A (Green(A) V Green(B)) eed to show 3x (Ontable(x) A Green(x)). The negation of the goal is Vx(7Ontable(x) V7Greer are given below. .(Ontable A) premise ?.(Ontable B) premise 3.(GreenA) V (GreenB) premise negated goal 1. ( (Ontable ?x)) V ( (Green ?x)) (A(likes ?y Algebra)) v (-(likes ?y Physics)) v (goesTo ?y Coll ! es Alice stories)) v (likes Alice Physics) (likes Alice Physics) ; Alice stories) 2v Alice likes Alice Chemistry)) ( (likes Alice Algebra)) v (goesTo Alice College) es Alice History)) ces 2x Math)) v (likes ?x Algebra) s Alice Math) . y w Alice , (goesTo Alice College) (likes Alice Algebra) (-(goesTo Alice College)) nn 14 A resolution refutation directed graph for the Alice problem. The negated goal, the source of the contradiction is shown in the s yossible derivation is, 1,4,?x A 5.(7 (Green A)) 6.(Green B) 35 7.(3 (On A ?y)) V (7 (Green ?y)) 3,5, ?x A 8.(7 (Green B)) 1,7,?y B 9.(Green B) 2,6, ?x A 10.1 8,9 se problems it did not matter but ideally one should rename a variable every time a new clause i avoid resolving two clauses with different variables having the same name. eductive Retrieval existential goals can also result in generating specific answers. Thus theorem proving can also answers to queries. The inference making ability enables the system to dig out facts that are implic 20rem proving allows us to do more than just data base retrieval. We call this process as deductive r simplest example comes from the database Man(Socrates), x(Man(x) Mortal(x) and I(y). The goal literally reads there exists someone who is mortal . It may also be read as a query who is mortal? . The substitution, or instantiation, used in the theorem proving process will yield the at the process in the resolution refutation setting. remises yield the following clauses, lan Socrates) (Man ?x)) V (Mortal ?x) egated goal is 3 yMortal(y) which is the same as Vx Mortal(y), which gives us the clause 