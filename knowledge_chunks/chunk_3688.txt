, 0P6 can have 406 Examples of Other Inductive Learners Chap. 19 01,1 1 (lx)-. f(x) (fix) is any real function of xi ON Jr fix) -. r fox) ax Iris any real number) 01`3 Jsin(x)dx-. -cos(x)dx ON Jcos(x) dx-. sin(x) 0P5 J(f,(x) + 02)x)Jdx-.Jf,(x)dx * f12(x)dx 0P6 fudi -. u'-ftdu (integration by parts) Figure I9.3a Typical calculus operators. Jlsin(x) + cos(x)ldx lint((* sin cos) x)l Jcos2)xl dx (int( I cos 2) xi) fx e dx (int(( id) I e id)) xl) Figure I9.3b Typical calculus representation,. the result obtained from the opposite bindings. The choice of the result obtained with is bound tof and dv (of, or of an incorrect or poor operator at a given stage in the solution will lead to failure or possibly to a lengthy solution. The learning problem then is to create or refine heuristic rules which suggest when an operator should be used. All heuristics in LEX are of the form If: The integrand pattern is P Then: Apply ON with bindings B. For example, a typical heuristic for 0P6 would be ftw * trig(x) eli Apply OPfl with bindings it = fix). and dv = trig(x) dx Part of the refinement problem is the general) ation or specialt,.ation of the heuristics to apply to as many consistent Instances as possible. Generalization and specialization are achieved in LEX through the use of a hierarchical description tree. A segment of this tree is depicted in Figure 194. Thus, when a rule applies to more than a single trig function such as to both sin and cos, the more general term trig would be substituted in the rule. Likewise, when a rule is found sshich applies to both log and exp functions, the exp_log description would be used. LEX is comprised of four major components as illustrated in Figure 19.5. The Problem Generator selects and generates informative integration problems which are submitted to the Problem Solver for solution. The Generator was included as part of the system to provide well-ordered training examples and to make the system a fully automatic learner. The Problem Solver