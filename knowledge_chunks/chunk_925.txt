n. The first part contains a representation of the problem description that is used to access cases, and the second contains the key to constructing the solution. The four R s define the CBR methodology as follows: Given a new problem to solve, retrieve the best matching case or set of cases from the case base. Try and reuse the lesson stored in the retrieved case(s) to construction by adapting the retrieved lesson(s). If necessary, bring in more knowledge to revise the solution to suit the current problem. This knowledge may come from a different problem solving system or from a human expert. Retain the new revised solution, by adding it to the case base with appropriate indices for retrieval . The CBR system thus implements a simple form of dynamic memory that learns by adding new cases, as and when new problems are encountered and solved. Conceptually, we can describe the terms used in CBR as follows. Let p be a problem from some domain. Let d be a description of the problem constructed using some vocabulary. Let be a lesson expressed using some vocabulary. The vocabulary used for expressing lessons may be the same as the one used for descriptions, or it could be different. A case is a description-lesson pair d, . The utility u(p, !) of a lesson for a problem p is a value between 0 and 1, and signifies how good the lesson is for solving problem p. Given a problem to solve, one would ideally like to retrieve cases that have the highest utility amongst the cases in the case base. However, utility is difficult to define and measure. Utility could depend upon the ease with which a solution is constructed, or upon the quality of the solution found, and it could also depend upon the ease of implementing the solution. In any case, utility can only be determined after the solution constructed by the lesson is applied to the problem, which of course defeats the purpose of finding a good case to construct the solution. Thus, while we are interested in cases with high utili