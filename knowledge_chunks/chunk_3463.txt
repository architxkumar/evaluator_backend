me number p in the algorithm helps to insure that the resultant indices are soiiics hat uniformly distributed or hashed throughout the range 0 . - C - This type of organization is well suited for groups of items coresponding to C different categories. When two or more items belon g to the same category. the will have the same hashed values. These values are culled .cvnonv,ns. One \a to accommodate collisions (simultaneous attempts to access synonyms) is with data structures known as buckets. A bucket is a linked list of one or more Items, where each item is a record, block, list or other data structure. The first item in each bucket has an address corresponding to the hashed address Figure II .4 illustrates a form of hashed memory organization which uses buckets to hold all Items ith the same hashed key value. The address of each bucket in this case is the indexed location in an array. 218 Knowledge Organization and Management Chap. 11 Hashed address Figure 11.4 Flashed .memor) tile organization. Conceptual Indexing The indexing schemes described above are based on lexical ordering, where the collation order of a key value determines the relative location of the record Keys for these items are typically chosen as a coded field (employee number, name, part number, and so on) which uniquely identifies the item. A better approach to indexed retrieval is one which makes use of the content or meaning associated with the stored entities rather than some nonmeaningful key value. This suggests the use of indices which name and define or otherwise describe the entity being retrieved. Thus, if the entity is an object, its name and characteristic attributes WOU'd make meaningful indices. If the entity is an abstract object such as a concept. the name and other defining traits would be meaningful as indices. How are structures indexed by meaning, and how are they organized in mel11or for retrieval? One straightforward and popular approach uses associative networks (see Chapter 