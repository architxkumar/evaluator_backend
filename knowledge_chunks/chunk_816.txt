o the left and so on, and how it acquires more complex schemas to solve simple algebraic equations with one variable, to the method of bisecting an angle. In the second half of the twentieth century, artificial intelligence researchers had begun to write computer programs to do all kinds of interesting things. Writing programs also became a means of testing theories of cognition, and it became imperative to put down the ideas into a concrete enough form to be expressed as programs and data. We shall look at three significant threads in the development of the schema in the works of David Rumelhart, Marvin Minsky, and Roger Schank. Of the three, only Rumelhart continued to use the term schema, though his earlier work on story grammars tends to treat the schema as a somewhat vague concept in the background, focusing more on the set of rules to achieve the desired effect (Marshall, 1995). His later work along with Andrew Ortony (Rumelhart and Ortony, 1977) proposed the following characteristics of the schema, 1. Schemas are data structures for representing the generic concepts stored in memory. 2. Schemas are defined for objects, situations, events, actions, and sequences of events and actions. 3. Schemas are not atomic but composite structures, containing networks of constituents and specified relations among them. 4. Schemas are like stereotypes of the underlying concepts. 14.3 Frames The genesis of modern object-oriented programming is in the notion of frames elaborated by Marvin Minsky (1974). The central idea in both is to pull together data pertaining to a composite conceptual entity in a meaningful fashion into a structure, so that its relations with the different constituents become obvious. A frame system is a mechanism for chunking. Frames also provide a mechanism for relating the chunked data (frames) to other chunked data (frames). One can capture the relations between two frames that are at a different level of abstraction. And one can capture the relation 