n ATN for the parse tree of Problem 12.7. 12.11. Dense an ATN sraph to implement the parse tree of Problem 12 12.12. Determine it the following sentences "ill he accepted b N the grammar I Ii hk m 12.6. ta The green green grass of the home h The red ear drove in the last lane. 12.13. Write PROLOG rul' to implement the grammar used to (lcris' the parse t Oe Pnsrhlcnr 12.7 Omit rules for the individual word categories (like noun ([bail . .,\ Generate a syntas tree using one output parameter.. 12.13. Write a PROLOG program that will take grammar rules in the following format: 1NT (NT I T* where NT is any vonterminal. T is any terminal, and Kleene star signiltes arr number of repetitions, and generate the corresponding top-down parser: that i-j. sentence noun-phrase, verb-phrase determiner [the] will generate the following: serrtencell,O( :- no'jn.phrasell.Rl, verbphrase(A.0). determrner(llhe Xl,X -1. 12.15. Tvlodif N the program in Problem I 2. 12 to accept extra arguments used to return meaningful knowledge structures. sentencelsentence(NP,VP)( , noun. phrase(NP), verb phrase (VPI. 12.16. Write a LISP program which uses property lists to create the recursive transition network depicted in Figure 12.9. Each node should be given a nalno such as SI. NI. and P1 and :tssoci:ited with a list of arc and node pairs emanating from the node. 12.17. Write a recursive program in LISP which tests Input sentences br the F IN developed in the .previous problem. The program should return t if the sentence is acceptable. and nil if not 12.18. rviodifv the program of Problem 12. 15 to accept sentences of the type depicted in Figure 12.12 12.19. Write an KN type of program as depicted in Figure 12.12 which builds structures like those of Figure 12.13. 12.20. Describe in detail the differences between language understanding and Iatig Uae gcrier iron. Explain the problems in developing a program which is capable of carrying on a dialog with a group of people. 0 270 Natural Language Proces