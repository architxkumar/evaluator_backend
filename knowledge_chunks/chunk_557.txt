the high level plan, and working on those after removing v. This process of planning is basically refinement planning in which an abstract plan is refined into a more concrete one. In practice, however, the causal graph for a given planning problem is not likely to be acyclic. The Fast Downward algorithm works on segments of the complete causal graph to derive the causal graph heuristics to guide a state space search. It first eliminates variables which do not belong to the set of ancestor variables (in the causal graph) for any goal variable. Then, it prunes the resulting causal graph to make it acyclic. This is done as follows. First, the strongly connected components of the causal graph are identified. Each component is handled separately to remove cycles. The variables of each component are arranged in a total order V Sv' defined as follows. 1. Each variable v is assigned a weight n that counts the number of actions or axioms that induce v. The weight is an indicator of the importance of the variable. 2. A variable v with the lowest weight is fixed in the lowest position in the ordering. That is, for all other variables v , v v . 3. Variable v is removed along with all its incident edges. 4. The remaining variables are processed in the same fashion. When v v' holds, we say that v has a higher level than v. In the pruned causal graph, we retain only those edges (v, v ) where v v' holds. Next, in the domain transition graph, for each variable DTG(v) all conditions on v, where v v , are removed. After this, all the DTGs are simplified by removing dominated transitions. If t and ' are transitions on the same pair of values and the condition on is a subset of or equal to the condition on t' then the transition t is removed from the DTG (since it may be more expensive to compute). The basic idea behind computing the causal graph heuristic is understood by viewing it as a bottom up process, with the lowest level variables being considered first. Conceptually, the task 