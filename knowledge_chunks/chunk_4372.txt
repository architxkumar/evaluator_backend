derivational analogy (see Previously Solved Problem Old Derivation New Derivation Fig. 17.21). Carbonell [1986] claims that derivational Solution Solution analogy is a necessary component in the transfer to New to Old . : Problem Problem of skills in complex domains. For example, suppose you have coded an efficient sorting Fig. 17.21 Derivational Analogy routine in Pascal, and then you are asked to recode the routine in LISP. A line-by-line translation is not appropriate, but you will reuse the major structural and control decisions you made when you constructed the Pascal program. One way to model this behavior is to have a problem-solver replay the previous derivation and modify it when necessary. If the original reasons and assumptions for a step s existence still hold in the new problem, the step is copied over. If some assumption is no longer valid, another assumption must be found. If one cannot be found, then we can try to find justification for some alternative stored in the derivation of the original problem. Or perhaps we can try some step marked as leading to search failure in the original derivation, if the reasons to failure conditions are not valid in the current derivation. Analogy in problem solving is a very open area of research. For a survey of recent see Hall [1989]. 17.9 FORMAL LEARNING THEORY Like many other AI problems, learning has attracted the attention of mathematicians and theoretical computer scientists. Inductive learning in particular has received con-siderable attention. Valiant [1984] describes a theory of the leamable which classifies problems by how difficult they are to learn. Formally, a device leams a concept if it can, given positive and negative examples, produce an algorithm that will classify future Learning 373 ean examples correctly with probability 1/4. The complexity of learning a concept is a function of three factors: the error tolerance (#), the number of binary features present in the examples (f), and the size of th