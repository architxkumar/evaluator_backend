thful to the problem that is being modeled, then the final facts will probably not be the desired ones. The key role that is played by the nature of the representation mapping is apparent from this figure. If no good mapping can be defined for a problem, then no matter how good the program to solve the problem is, it will not be able to produce answers that correspond to real answers to the problem. 82 Artificial Intelligence It is interesting to note that Fig. 4.3 looks very much Initial desired real reasoning | Final like the sort of figure that might appear in a general facts facts programming book as a description of the relationship between an abstract data type (such as a set) and a . . - forward backward concrete implementation of that type (e.g., as a linked representation representation * list of elements). There are some differences, though, mapping mapping between this figure and the formulation usually used in programming texts (such as Aho et ai. [1983]). For le, in data t desi it is cted that the Internal Internal example, in data type design it is expecte representation Operation ) Fepresentation mapping that we are calling the backward of initial facts of program of initial facts representation mapping is a function (i.e., every representation corresponds to only one fact) and that it is onto (i.e., there is at least one representation for every fact). Unfortunately, in many AI domains, it may not be possible to come up with such a representation mapping, and we may have to live with one that gives less ideal results. But the main idea of what we are doing is the same as what programmers always do, namely to find concrete implementations of abstract concepts. Fig. 4.3. Representation of Facts 4.2 APPROACHES TO KNOWLEDGE REPRESENTATION A good system for the representation of knowledge in a particular domain should possess the following four properties: Representational Adequacy ~ the ability to represent all of the kinds of knowledge that are needed i