rules again in Chapter 6, in the context of rulebased knowledge representation. Single-Valued Attributes A specific but very useful kind of attribute is one that is guaranteed to take a unique value. For example, a baseball player can, at any one time, have only a single height and be a member of only one team. If there is already a value present for one of these attributes and a different value is asserted, then one of two things has happened. Either a change has occurred in the world or there is now a contradiction in the knowledge base that needs to be resolved. Knowledge-representation systems have taken several different approaches to providing support for single-valued attributes, including: Introduce an explicit notation for temporal interval. If two different values are ever asserted for the same temporal interval, signal a contradiction automatically. e Assume that the only temporal interval that is of interest is now. So if a new value is asserted, replace the old value. e Provide no explicit support. Logic-based systems are in this category. But in these systems, knowledgebase builders can add axioms that state that if an attribute has one value then it is known not to have all other values. Knowledge Representation Issues 89 4.3.3 Choosing the Granularity of Representation Regardless of the particular representation formalism we choose, it is necessary to answer the question At what level of detail should the world be represented? Another way this question is often phrased is Whai should be our primitives? Should there be a small number of low-level ones or should there be a larger number covering a range of granularities? A brief example illustrates the problem. Suppose we are interested in the following fact: John spotted Sue. We could represent this as! spotted(agent(John), object(Sue)) Such a representation would make it easy to answer questions such as: Who spotted Sue? But now suppose we want to know: Did John see Sue? The obvious answer is yes, bu