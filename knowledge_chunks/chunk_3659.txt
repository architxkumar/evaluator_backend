 permit a domain expert to interact directly with the system without the need for an intermediary to code the knowledge (Figure 17.9). The expert carries on a dialog with the editor in a restricted subset of English which includes a domain-specific vocabulary. The editor has direct access to the knowledge in the expert system and knows the structure of that knowledge. Through the editor. For additional details related to the overall pcoecss Of eliciting. coding. organizing, and refining knowledge from domain experts, see Chapter 13 which examines expert sy"emarchitectures and building tools. Chap. 17 Exerc Ises 379 Oemaln Int PIIgsnt F,H Eaprt sy,t I dsdftmootorr base Figure 17.9 Acquisition using an intelligent editor. an expert can create, modify, and delete rules without a knowledge of the internal structure of the rules. The editor assists the expert in building and refining a knowledge base by recalling rules related to some specific topic, and reviewing and modifying the rules, if necessary, to better fit the expert's meaning and intent. Through the editor, the expert can query the expert system for conclusions when given certain facts. If the expert is unhappy with the results, a trace can be obtained of the steps followed in the inference process. When faulty or deficit knowledge is found, the problem can then be corrected. Some editors have the ability to suggest reasonable alternatives and to prompt the expert for clarifications when required. Some editors also have the ability to make validity checks on newly entered knowledge and detect when inconsistencies occur. More recently, a few commercial editors have incorporated features which permit rules to be induced directly from examples of problem solutions. These editors have greatly simplified the acquisition process, but they still require much effort on the part of domain experts. 17.7 SUMMARY We have examined examples of early work done in machine learning including perceptrons which learn through par