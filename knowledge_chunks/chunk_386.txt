position on the right as well, Black would rather not move. If White is to move however, the White King can be moved in a triangle (right, downLeft, up) to come back to the same position putting Black on move in Zugzwang. In the first position on the left, the Black King is protecting the three pawns from being captured by the White King. If Black were to move then it would have to relinquish support for one of the pawns, clearing the way for White to win. If White were to move, on the other hand, the game would head towards a draw. Thus, the evaluation depends critically on who is to move next. In the second position on the right again, Black is in Zugzwang, and would rather not move, preferring it to be White s move. But in this position, even if White is to move, the White King can be moved in a triangle returning to the same position in three moves while Black is forced to oscillate and return to the same position in two moves. This manoeuvre, known as triangulation, has the effect of coming back to the same position, but now with Black to move in Zugzwang. Notice that it is difficult for an evaluation function to discriminate between these small but critical variations because neither the material nor positions change significantly. However, a more detailed knowledge based program could store such patterns to be acted upon in a specific manner. A more critical illustration of the limitation of search and evaluation functions is the following contrived situation from (Seymour and Norwood, 1993) depicted in Figure 8.38 below. Human chess players quickly realize that the Rook on offer to White is poisoned, and refrain from capturing it. However, it is difficult for an evaluation function to resist the material gain of capturing the Black Rook because the negative effects of this action are far down beyond the horizon. The best computer chess playing program at that time, Deep Thought II'4, grabbed the Rook when tested on the board position. Human players evade the