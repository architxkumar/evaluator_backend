 the two stages with an example. Let us say that first the following two nodes are added to the ATMS depicted in Figure 17.21. 7, (Ch, E, FY, (C , E, Fh U, B, C , B, G , B, C , B, G At this point, let the rule (T A U V) be fired by the reasoner and the node V, , T, U be added to the network as shown in Figure 17.22. Note that the justification gets filled in from the antecedents in the rule, while the environment is yet empty. B, C , B, OW Ao, ra G oo va ea, Hom 5 Pas YEE 14 , (B re "Poo mee ng ) Ci, XR a a C,D , ey L Tm nogood: F, G ) B,C, D , BB Figure 17.22 After nodes T, C , E, F and U, B, C , B, G have been added as shown, node Vis just about to be added. The high level algorithm LabelsATMS for determining the labels for the new nodes is given in Figure 17.23. Let there be K antecedents in the justification, and let L;, ..., L be the labels of the antecedents, and NoGs the set of nogoods stored. The algorithm begins with one label, and incrementally incorporates the labels from the rest of the antecedents. At each step, it replaces each environment by computing unions with each environment of the incoming label. From the resulting set of environments, it discards any that are subsumed by more general ones, and also discards any environments that subsume a nogood. LabelsATMS(K, L,, .., Lx , NoGs) 1 Lely 2 for i 2 to K 3 NewLabel 4 for each environment Ee L 5 for each environment E,, L,; 6 NewLabel -NewLabel U EU E;; 7 L NewLabel 8 for each E; EL 9 for each NG NoGs 10 if NGC E; 1l then L L E; 12 for each E; eL 13 for each F; L 14 if Eic E; 15 then L L E; 16 xreturn L Figure 17.23 The procedure LabelsATMS accepts a set of K antecedents of a node along with their labels L;, ..., Lx , and a set of nogoods NoGs, and computes the label L of the consequent node. In our example, when the node V is added the candidate set of labels generated, after the loop in lines 2 to 7 is executed is, B, C , B, C, G , B, C, E, F , B, E, F, G . Then in lines 8 to 11, the environment B