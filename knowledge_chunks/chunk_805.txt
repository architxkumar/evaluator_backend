 a proof involves search. Most inference engines have built in search strategies. A goal directed backward search engine, like Prolog, picks the clauses in the order in which the user has stated them. The clauses contain both the rules and the facts. A forward search engine like OPS5, uses a conflict resolution strategy (see Chapter 5) for choosing the rule to apply. Knowledge representation is concerned with what the problem solving agent knows about the world. The knowledge of an agent constitutes not only of the knowledge of the physical world, but also about happenings in the physical world. The world does exist, no doubt, because the knower is part of that world, but for the knower, or the agent, the world exists only as the agent knows it. One particular school of thought known as Phenomenalism, which is a kind of extreme Empiricism, holds the view that physical objects do not exist as things in themselves, but only as perceptual phenomena .' From a knowledge-representation perspective, the language of FOL is a mechanism to construct an ontological base for modelling the world as known by the agent. The semantics of FOL is defined with respect to a domain and a mapping from the language to the domain. Terms of the language are mapped to elements in the domain. The unary predicates of FOL define categories in the domain, and higher arity predicates define relations between elements of the domain. In this sense, FOL provides a mechanism for abstract representation (Charniak and McDermott, 1985). Any connections between elements are buried in the logical formulas, mainly categories and rules, and have to be ferreted out by the inference engine by a process of search. The formulas exist in an abstract pool, which may be thought of as a flat representation with no structural information, except in Prolog formulas (programs) where they have a predefined order in which the inference engine looks at them. Figure 12.15 depicts some connections based on parent-child rel