in a tour is one which picks the nearest unvisited neighbor. This policy gives no guarantee 01 an optimal solution, but its solutions are often good, and the time required is only 0012. Likewise, for the eight puzzle, using a heuristic function, which selects moves that produce the smallest number of tiles out of place from the goal configuraion. can result in a worthwhile time saving. In solving a problem in propositional logic, such as proving a theorem in the General Problem Solver, the time complexity can often be reduced from exponential to polynomial time through the application of a by simple heuristic strategy. In General Problem Solver this is accomplished first planning a solution by breaking the main problem down into several subproblems of lesser complexity. This often has the effect of reducing the oveiull complexity by several orders of ma,.'itude. Hill Climbing Methods Search methods based on hill climbing get their names from the way the nodes are selected for expansion. At each point in the search path, a successor node that appears to lead most quickly to the top of the hill (the goal) is selected for exploration. This method requires that some information be available with which to evaluate and order the most promising choices, Hill climbing is like depth-first searching where the most promising child is selected for expansion. When the children have been generated. alternative choices are evaluated using some type of heuristic function. The path that appears most promising is men chosen and no further reference to the parent or other children is retained. This process continues from node-to-node with previously expanded nodes by being discarded. Atypical path is illustrated in Figure 9.9 where the numbers a node correspond to the computed estimates of the goal distance for alternative paths Hill climbing can produce substantial savings over blind searches when an informative, reliable function is available to guide the search to a global goal. It