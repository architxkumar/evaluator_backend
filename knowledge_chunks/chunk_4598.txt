PUT AND STREAMS PROLOG can read and write terms from one or several files. These thus form the streams of data that are either input (input stream) or output (output stream). The use of some typical built-in predicates (BIPS) is described below. {i) see/1 and seen/0 see takes the input file name as its argument and opens the file for use. The terms within the file may be now read with other BIPS like read// that reads a term or get// that gets a character. The input file has to be closed after reading and this is done by the BIPS seen/0. Assume that the input file dikings.p/ contains facts about Who likes what food. likes(prakash,sandwiches). likes(priya,eggs). likes(shiva, cheese). A typical program that reads and writes onto the console is given below read_4rm_file:- see( likings.pl), redo, read(Likes), (Likes = end_of file, nl, write( Thats all folks! ),nl,!; likes(Name, Food), write(Name), write( likes ), write(Food),nl fail), Seen. redo. redo: - redo, The output on issue of the goal read_4rm_file. is shown below |? read_4rm_file. prakash likes sandwiches priya likes eggs shiva likes cheese Thats all folks! yes (ii) tell/1 and told/o These just perform the reverse operations as see and seen viz. writing to a file. 516 Artificial Intelligence SS write_2_file:- write( Enter term :>), tell likings.pl ), redo, read(Likes), (Likes = Over , told, ni, write( Thanks for the inputs! >)nl; write(Likes), put(46), nl, fail). redo. ee redo: . s The output fooks as shown below | ?- write_2_file. Enter term :I: likes(jane,eggs). |: likes(Gjack,burger) |: Over, Thanks for the inputs! yes 25.14.1 Consulting and Reconsulting Knowledge Bases The PROLOG system allows you to load and reload knowledge bases or programs. You can use consult/] to load a file to the system. Suppose you have written the clauses for read_4rm_file and write_2_file into a file named my_file_io.pl, then the program may be consulted (or loaded into the system) by { ?- consult( my_file_io.p I ). Now all clause