lution constructed by the lesson is applied to the problem, which of course defeats the purpose of finding a good case to construct the solution. Thus, while we are interested in cases with high utility lessons, we have to use other criteria for finding them. The utility value of a lesson becomes known only in the future, after the lesson is applied to the problem. A good case is one which has a lesson of high utility for the current problem. A knowledge-based approach retrieves a (good) case by inspecting its past, stored in the case base. The criterion for choosing the case is similarity. Case based reasoning is based on the following premise: Similar problems have similar solutions. Also, the problems we encounter are often similar. This is based on the fact that things change continuously and smoothly in the world, and that there are situations that often repeat themselves. The best case is then that whose description is most similar to the current problem description. To measure this, we use a similarity function sim(qj, dj) that returns a value between 0 and 1, where 1 stands of identity or total similarity, and 0 represents no similarity or total dissimilarity. Thus, case based reasoning works as follows, Given a problem p, construct a description d of the problem. Retrieve from the case base a case c; dj, , such that sim(d, dj) is highest amongst all cases in the case base (retrieve). Adapt the retrieved lesson ; to construct a solution for p (reuse). If the solution has low utility, construct a new solution and a lesson (revise). When a new problem solving experience occurs, add a lesson to form the case c d, and add it to the case base CB (retain). In practice, one may use more than one similar case to construct the solution. We often refer to this process of retrieving K most similar cases as K Nearest Neighbour (KNN) retrieval. When CBR is used for classification then the solution could be the majority class label amongst the K retrieved cases. When solv