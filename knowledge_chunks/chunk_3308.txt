tions for these facts might be n I IN type(aircraft) = 737 (SL () (n2)) n2 OUT type(aircraft) = L400 n3 IN class(crew) = A (SL (n8, n22) ) where the justifications for n is n2 (with OUT status) and for n3 is nodes n S, n22 which relate to the availability of a captain, copilot, and other crew members qualified as class A. Now suppose it is learned that a full class A crew is not available. To complete a schedule for the flight, the system must choose an Sec. 5.3 Default Reasoning and the Closed World Assumption 87 alternative aircraft, say an L400. To do this the IE changes the status of n2 to IN. But this results in a contradiction and, hence, creation of the node n4 IN contradiction (SL (0,0) )) The contradiction now initiates the DDB procedure in the TMS to locate the offending assumptions. Since there is only one such node. n I. its retraction is straightforward. For this, the TMS creates a 'nogood" node with a CP justification as n S IN nogood ni (CP n4 (nl,n3) 0) To correct the inconsistency, the TMS next makes n2 an IN node by justifying it with n5 as follows n2 IN type(aircraft) = L400 (SL (0) ( )) This in turn causes n I to become OUT (as an assumption n I has a nonempty outlist). Also, since n4 was justified by n I, it too must become OUT. This gives the following set of nodes n I OUT type(aircraft) 737 (SL () (n2)) n2 IN type(aircraft) = L400 (SL (n S) ( )) n3 IN class(crew) A (SL (n8.....n22) ()) n4 OUT contradiction (SL (nl.n3) ( )) n5 IN nogood n (CP n4 (nl.n3) ()) Note that a CP justification was needed for the 'nogood" node to prevent a circular retraction of n2 from occurring. Had an SL been used for n5 with an n4 node in-list justification, n5 would have become OUT after n4, again causing n2 to become OUT. The procedures for manipulating CPs are quite complicated, and, since they are usually converted into SIs anyway, we only mention their main functions here. For a more detailed account see Doyle (1979). We have briefly described the JTMS here sin