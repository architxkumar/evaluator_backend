border depict a tabu value 1. These cannot be flipped in that expansion. The tabu bits and their values are also shown alongside in the array M. The shaded rows are the candidates that the Tabu search moves to. a b e d Cl C2 C3 C4 C5 em) - M 0000 alb clafarja a cscs em ofofofita fifi ftifitah ofolifo i1fo iftirfto 3 ofifofofi i fofifo 3 i tfofofo i i fofilifa : i M 0002 M 2000 i a b c d cl C2 C3 c4 Cs eo) alble alae alcs cs em PyoToO Trt ttt yoyr yi 4 Ofotr t tto r olil 3 tyotifofifotifofilt3 -fofifolifala la fa a ss Ltifofofofifofijift3)? fafofoli tifa ha oli a 2 : M 1020 M 0201 al a b eo 4 fcr c2 c3 cs cs lem afb c d ci c2 c3 c4 cs ea) 1 o ;irfrfrfofyrjofry 3 PT dr op ry oyttt yt yt 4 ofifrfif afr fafa fads rfifarfofofiafaifafala Cy (0210) wren. M 0120 1 FIGURE 3.19 Two possible paths chosen by the Tabu search. Consider the left branch. Starting with 0000 it goes to 1000. Only the last three bits can be changed and the best choice is 1001. Now in the next move, only the second or third bits can be changed. That is, the state 0001 is also excluded in this path. The above example illustrates that barring certain moves in a Tabu search may also exclude some previously unexplored state. What if one such excluded state is a good one? One could set an aspiration criterion under which moves could overrule the tabu placed on them. The criteria could be that all non-tabu moves lead to worse nodes, and a tabu move yields a value better than all values found so far. Thus, while the tabu principle would try and distribute the search amongst different components equitably, the aspiration criteria would still allow potentially best moves to stay in the competition. Yet another way to diversify a search could be to keep track of the overall frequency of the different moves. Note that this can also be done with a finite memory. Moves that have been less frequently used could be given preference. Imposing a penalty proportional to the frequency on the evaluation value could do thi