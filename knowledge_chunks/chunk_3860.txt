 of each are is equal to the sum of the H values of each of the nodes at the end of the arc plus whatever the cost of the arc itself is. Assign as CURRENT S new h value the minimum of the costs just computed for the arcs emerging from it. ii) Mark the best path out of CURRENT by marking the arc that had the minimum cost as computed in the previous step. (iv) Mark CURRENT SOLVED if all of the nodes connected to it through the new labeled arc have been labeled SOLVED. (v) If CURRENT has been labeled SOLVED or if the cost of CURRENT was just changed, then its new status must be propagated back up the graph. So add all of the ancestors of CURRENT to S. It is worth noticing a couple of points about the operation of this algorithm. In step 2(c)yv, the ancestors of anode whose cost was altered are added to the set of nodes whose costs must also be revised. As stated, the algorithm will insert all the node s ancestors into the set, which may result in the propagation of the cost 68 Artificial Intelligence SENTRA CES AN ROOST RSTO NASON RST change back up through a large number of paths that are already known not to be [A\?) very good. For example, in Fig. 3.11, it is clear that the path through C will always be better than the path through B, so work expended on the path through B is wasted. But if the cost of E is revised and that change is not propagated up through B as well as through C, B may appear to be better. For example, if, as a result of expanding node E, we update its cost to 10, then the cost of C will be updated to 11. If this is all that is done, then when A is examined, the path through B will have a cost of only 11 compared to 12 for the path through C, and it willbe Fig. 3.11 An Unnecessary labeled erroneously as the most promising path. In this example, the mistake Backward might be detected at the next step, during which D will be expanded. If its cost Propagation changes and is propagated back to B, B s cost will be recomputed and the new cost of E will