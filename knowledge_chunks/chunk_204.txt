 desirable that the estimate be as high and as close to the actual cost as possible, because that will mean faster pruning of expensive candidates. We will look at this requirement more formally, later in this chapter. How does one get a lower bounding estimate of a partial solution? Consider a refinement space search to solve the TSP. Let the candidate solutions be permutations of the list of city names. The initial solution includes all permutations, when nothing is specified. We refine this solution by specifying specific segments in the tour. In the example below, we consider the TSP problem for five cities Chennai, Goa, Mumbai, Delhi, Bangalore . How do we get a lower bounding estimate for the candidate tours? Consider first the absolute lower bound for all tours, represented by the root node in the search space. We look at the cost matrix with costs in kilometres. Table 5.1 Distance matrix for five cities Chennai Goa Mumbai Delhi Bangalore Chennai 0 800 1280 2190 360 Goa 800 CY) 590 2080 570 Mumbai 1280 590 0 1540 1210 Delhi 2190 2080 1540 0 2434 Bangalore 360 70 1210 2434 0 An absolute lower bound for the TSP can be estimated as follows (Michalewicz and Fogel, 2004). For each row, add up the smallest two positive entries. In the above example, select 350 and 800 from row 1. The contribution of the two Chennai segments will be smallest when it lies between Goa and Bangalore in the tour. In this manner, pick the smallest two costs for each city, add them up and divide by two. For the above cost matrix, we get, (360 800) (570 590) (590 1210) (1540 2080) (360 570) 2 LB 8670 2 4335 Observe that the above lower bound may not actually be feasible. This is because for each city (each row), we consider the nearest two neighbours as ones in the estimate. In the example map shown below in Figure 5.5, there are two long edges that must be part of any tour, but neither will figure in the lower bound estimate. The two edges occur in all tours. Yet they do not figure in the