ent the bulbs cannot light up by themselves, or because a wire connecting them is broken. The behaviour model for the bulb is extended in Table 17.10 to one fault mode Broken below. The key feature in the table is that if the bulb is Broken then in all cases, the bulb stays in the Off state. Table 17.10 The broken bulb model Mode L R Bulb Broken - Off Broken - Of Broken Off Broken - - Off Broken 0 0 Off Broken 0 Off Broken 0 - Off Broken 0 Off Struss and Dressler extend the GDE to GDE by incorporating fault models in the following manner. Assuming that we represent Broken; (C) with OK; (C), the following statements are added for each fault model. ViSF (OK(C) OK(C)) and conversely, OK,(C) A OK2(C) A... A OKe(C) DOK(C) This is equivalent to saying that, Broken(C) Broken,(C) V Broken2(C)v ... vBrokeng(C) and conversely, VisF (Broken; (C) Broken(C)) In our example, F 1 and there is only one fault mode (which we have called Broken). When GDE looks at the task, it too arrives at the same set of conflicts. However, the set of candidate diagnoses it generates, does not have the spurious diagnoses. Consider the candidate S,B3 . This is not generated by GDE because Broken(B3) is not consistent with the observation B3 On, because no row in the fault model allows B3 On. For the same reason, all candidates containing B3 are rejected. That leaves the candidates with two broken wire segments. Table 17.11 below defines the broken wire model. While the label Disconnected does not play a role, the voltage values for the two ends do matter. Table 17.11 The broken wire model Mode L R Wire Broken - Disconnected Broken - Disconnected Broken 0 Disconnected Broken 0 Disconnected Broken - 0 Disconnected Broken 0 - Disconnected Consider the candidate W2, Ws found by GDE. Given that LW2 (since the battery is working) and the assumption that Broken (W2), there is no way that RW2 and consequently no way that BB3 , which in this example is a necessary condition for bulb B3 to be lit. By a simila