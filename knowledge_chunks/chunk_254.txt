heir knowledge. They needed only to express their knowledge in the pattern, inference form, and an inference engine would operationalize this knowledge in problem solving activity. Thus, the idea of Expert Systems was born. We look at one system XCON briefly before delving into the algorithms that go into implementing the inference engine, also called an expert system shell. 6.5 XCON Originally called R14, the XCON system was a forward-chaining rulebased system to help automatically configure computer systems (McDermott, 1980a, 1980b). XCON (for eXpert CONfigurer) was built for the computer company Digital Equipment Corporation, and helped choose components for their VAX machines. XCON was implemented in the rule based language OPS5 described below. By 1986, XCON had been used successfully at DEC processing over 80,000 orders with an accuracy over 95 . XCON is a forward-chaining rule based system that worked from requirements towards configurations, without backtracking. It needed two kinds of knowledge (Jackson, 1986): Knowledge about components, for example voltage, amperage, pinning-type and number of ports, and Knowledge about constraints, that is, rules for forming partial configurations of equipment and then extending them successfully. It stored the component knowledge in a separate database, and used its production system architecture to reason about the configuration. The following is an example of a record that describes a disk controller. RKE11 CLESS: UNIBUS MOCULE TYPE: DISK DRIVE SUPPORTER: YES FRIORITY LEVEL: BUFFERED NFR TRASFER RATE: 212 ... Constraints knowledge is specified in the form of rules. The LHS describes patterns in partial configurations that can be extended, and the RHS did those extensions. The following is an English translation of an XCON tule taken from (Jackson, 1986). DISTRIBUTE-MB-DEVICES-3 IF the mest current active ccntext is distributing massbus devices there is a single port disk drive that has not been assigned toa massbus th