t population consists of only the highest performing structures. Data structures which make up the population can represent rules or any other suitable types of knowledge structure. To illustrate the genetic aspects of the problem, assume for simplicity that the population of structures are fixed-length binary strings such as the eight bit string 11010001. An initial population of these eight-bit strings would be generated randomly or with the use of heuristics at time zero. These strings, which might be simple condition and action rules, would then be assigned some tasks to perform (like predicting the weather based on certain physical and geographic conditions or diagnosing a fault in a piece of equipment). After multiple attempts at executing the tasks, each of the participating structures would be rated and tagged with a utility value u commensurate with its performance. The next population would then be generated using the higher performing structures as parents and the process would be repeated with the newly produced generation. After.many generations the remaining population structures should perform the desired tasks well. Mating between two strings is accomplished with the crossover operation which randomly selects a bit position in the eight-bit string and concatenates the head of Generate initial population S. Strtctur,s p*,fo,nt given ta.k. cetidly P,,forrn.nc. utility Values au.gn.d to knowledge Steu Clum N.w population is gsn.eao,d teotn best Poiti ing ,tngtsa,s$ Peace., repeated until desired peefoenwac, reached Figure I7.3 Genetic algorithm. Sec. 17.5 Genetic Algorithms 377 one parent to the tail of the second parent to produce the offspring. Suppose the two parents are designated as xxxxxxxx and yyyyyyyy respectively, and suppose the third bit position has been selected as the crossover point (at the position of the colon in the structure xxx:xxxxx). After the crossover operation is applied, two offspring are then generated namely xxxyyyyy and yyyx