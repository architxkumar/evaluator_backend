 where n 1, it is also allowed that d; FILLS rc for any constant c If pj ALL r e then it is necessary that d; ALL r e where recursively ee If pj FILLS rc then d; FILLS rc If the algorithm can find corresponding elements then it returns (dsyp c super): Observe that we have used d; FILLS r c to identify a subsumed component for the special case p; EXISTS 1 r . This is because we know that when FILLS r c holds then we are talking about some element that is related by r to c, and therefore related at least to one element by r, which is what p; EXISTS 1 asserts. 14.7.5 Building Taxonomies The key difference between Frames and DL based systems is that subsumption is decided by the descriptions in DL systems, while it is encoded in an ad-hoc manner in Frame systems. Having decided upon the basis of subsumption, one can build an explicit taxonomy in which subconcepts are linked to super concepts by links, which stand for the Is-A relation. The taxonomy can be built automatically by a process known as classification, in which one adds new concepts one by one to the taxonomy, and an algorithm places them in the appropriate place. Let us assume that each concept description d; in the taxonomy has a name a; associated with it. That is, aj dj The nodes of the taxonomy are labelled with these atomic concepts (names). Given a taxonomy T and a (new) concept description d, the set S of the most specific subsumers of d is the set of all atomic concepts a that subsume d and there are no concepts a that subsume d and are subsumed by a. S a dta and there is no a s.t. dEa and aEa Likewise, we define the set G of most specific subsumees of d as, G a ad and there is no a s.t. aEd and ata Given a taxonomy T and a new concept anew with a description dney, it is placed in the taxonomy T by the following procedure adapted from (Brachman and Levesque, 2004). Classify (taxonomy, aNew) 1 d Desc (aNew) 2 s MostSpecificSubsumers (taxonomy, d) 3 g MostGeneralSubsumees (taxonomy, s, d) 3 if empty(s M