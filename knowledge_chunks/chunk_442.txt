le. The domains of the vertices are the (compound) labels as shown in Figure 9.13. Each edge in the diagram imposes a binary constraint on the two vertices it connects. The constraint is that the edge must be labelled identically from the set , -, , for the two vertices. The CSP formulation for a simple object is shown in Figure 9.15. The object is shown on the upper left. The six vertices are V, (a, b, c), Vo (c, d), V3 (e, a), V4 (6, f, g), Vs (h, f, e), and Vg (d, g, h). Each edge is represented as a constraint between two variables. The constraint is that a particular component of one label must match a particular component of the other label. We use notation V,(m) V (n) to say that the m'" label of V, must match the n'" label of V;. For example, we have V (2) V4(3), which says that the common edge g must get matching labels from both ends, V4 and Vg. GHsNoGtI(42) FIGURE 9.14 Constraints across vertices. Every edge connects two vertices and imposes a constraint that the labels on the two vertices must assign the same value for that edge. The matching diagram for three vertices V,, V2 and V3 is shown. Achieving arc consistency will remove unsupported labels. V1) V3) e V5(2) V1) s3) "30) (G39 ) MEIGS 4, Lvertex: V2 fit Lyertex: J V2) V,() FIGURE 9.15 A simple object and its constraint network. The reader is encouraged to enforce arc consistency on the above CSP. When we consider a larger variety of objects and also allow shadows from illumination and cracks, the number and types of vertices increases dramatically. David Waltz considered these objects and introduced several additional types of junctions with four or more incident edges. Allowing for additional labels to represent shadows, cracks, overlap of objects, the number of physically realizable vertex labels reduces to 1790 from several billion combinations (Winston, 1992). The algorithm developed by Waltz for propagating constraints is essentially an arcconsistency algorithm similar to AC-3 algorithm descri