he representation of knowledge in a particular domain should possess the following four properties: Representational Adequacy ~ the ability to represent all of the kinds of knowledge that are needed in that domain. Inferential Adequacy the ability to manipulate the representational structures in such a way as to derive new structures corresponding to new knowledge inferred from old. Inferential Efficiency the ability to incorporate into the knowledge structure additional information that can be used to focus the attention of the inference mechanisms in the most promising directions. Acquisitional Efficiency the ability to acquire new information easily. The simplest case involves direct insertion, by a person, of new knowledge into the database. Ideally, the program itself would be able to control knowledge acquisition. Unfortunately, no single system that optimizes all of the capabilities for all kinds of knowledge has yet been found. As a result, multiple techniques for knowledge representation exist. Many programs rely on more than one technique. In the chapters that follow, the most important of these techniques are described in detail. But in this section, we provide a simple, example-based introduction to the important ideas. Simple Relational Knowledge The simplest way to represent declarative facts is as a set of relations of the same sort used in database systems. Figure 4.4 shows an example of such a relational system. Player Height Weight Bats-Throws Hank Aaron 6-0 180 Right-Right Willie Mays |- 5-10 170 Right-Right Babe Ruth 6-2 215 Left-Left Ted Williams 6-3 205 Left-Right player_info( hank aaron , 6-0 , 180,right-right). Fig. 4.4 Simple Relational Knowledge and a sample fact in Prolog Knowledge Representation issues 83 SR TTS CE The reason that this representation is simple is that standing alone it provides very weak inferential capabilities But knowledge represented in this form may serve as the input to more powerful inference engines. For example, 