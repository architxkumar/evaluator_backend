uctures improve its ability to understand. MOPTRANS [Lytinen, 1984] uses a MOPbased memory to understand sentences in one language and translate them into another. 19.4 CASE-BASED REASONING We now turn to the role of memory in general problem solving. Most AI programs solve problems by reasoning * from first principles. They can explain their reasoning by reporting the string of deductions that led from the input data to the conclusion. With human experts, however, we often observe a different type of explanation. An expert encountering a new problem is usually reminded of similar cases seen in the past, remembering the results of those cases and perhaps the reasoning behind those results. New problems are solved by analogy with old ones and the explanations are often couched in terms of prior experiences. Medical expertise, for example, seems to follow this pattern, and legal education is also case-oriented. Computer systems that solve new problems by analogy with old ones are often called case-based reasoning (CBR) systems. A CBR system draws its power from a large case library, rather than from a set of first principles. In order to be successful, CBR systems must answer the following questions: 1. How are cases organized in memory? 2. How are relevant cases retrieved from memory? 3. How can previous cases be adapted to new problems? 4. How are cases originally acquired? The memory structures we discussed in the previous seetion are clearly relevant to CBR. Those structures were used primarily in text understanding applications, however. Now we look at general memory-based problem solving. To use a memory effectively, we must have a rich indexing mechanism. When we are presented with a problem, we should be reminded of relevant past, experiences, but not be inundated with a lot of useless memories. The obvious idea is to index past episodes by the features present in them. For example, any 420 Artificial Intelligence (ema AAR experience having to do with a car wo