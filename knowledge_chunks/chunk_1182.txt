our focus on planning, algorithms that explore the state space for reaching a goal state from a given start state, are of interest. We look at an algorithm LAO (Hansen and Zilberstein, 2001) that generalizes the heuristic search algorithm A (see Chapter 5) and AO (see Chapter 6) to solve planning problems formalized as MDPs. The main idea of heuristic search is to use a heuristic function that estimates the distance or cost to the goal state and drives the search towards those states that seem more promising. As in A and AO , if one employs a heuristic function that underestimates the actual optimal cost, even in LAO one is guaranteed to find the optimal solution without necessarily exploring the entire state space. The transition graph Gg of the domain can be viewed as an AND-OR (AO) graph. A stochastic action from any state s is connected by a hyperedge to a set of nodes, to one of which the system will move when the action is taken. Such actions are depicted by AND arcs or directed hyperedges emanating from a node and ending up in the set of nodes that the action can lead to. They are also known as k-connectors. Figure 17.37 shows the stochastic domain of Figure 17.29 as an AO graph. Each hyper-edge is formed by arrows linked together by arcs. The stay actions have not been depicted, except for the goal state sg where it is the only action. Figure 17.37 A stochastic planning domain can be seen as an AND-OR graph. Each stochastic action is seen as an AND edge, leading to (one of) a set of states. The AND edge is a hyperedge, depicted by a set of edges are connected together by an arc. The different actions available at each state are OR choices. Some actions have been drawn with dashed lines for clarity. The scope of exploration for the LAO algorithm is the subgraph Ggyart of the transition rooted at a given start state Start. Even for Gotan, the algorithm may explore only a small part depending upon how good the heuristic function it uses is. In our example, we w