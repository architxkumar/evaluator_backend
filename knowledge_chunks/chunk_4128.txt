 techniques that we can use to do that. When we think about constructing a model of some entity in the world, the issue of what we mean by a model soon arises. To what extent should the structure of the model mirror the structure of the object being modeled? Some representational techniques tend to support models whose structure is very different from the structure of the objects being modeled. For example, in predicate logic we write wff s such as Vx raven(x) black(x). In the real world, though, this single fact has no single realization; it is distributed across all known ravens. At the other extreme are representations, such as causal networks, in which the physical structure of the world is closely modeled in the structure of the representation. There are arguments in favor of both ends of this spectrum (and many points in the middle). For example, if the knowledge structure closely matches the problem structure, then the frame problem may be easier to solve. Suppose, for example, that we have a robot-planning program and we want to know if we move a table into another room, what other objects also change location. A model that closely matches the structure of the world (as shown in Fig. 11.1 (a)) will make answering this question easy, while alternative representations (such as the one shown in Fig. 11.1 (b)) will not. For more on this issue, see Johnson-Laird [1983]. There are, however, arguments for representations whose structures do not closely model the world. For example, such representations typically do a better job of capturing generalizations and thus of making predictions about some kinds of novel situations. (Livingroom? : contains : {Table 1: made-of : Wood has-on: (Vase? : made-of : Glass) (Lamp?: ...)) (Tabie2has-orr (Vase: ...))} (a) in{ Tablet, Livingroom) made-of (Tablet, Wood) on Vase, Tablet) made-of (Vase1, Glass) on( Vase2, Table2) on Lamp1, Table?) {b) Fig. 11.1 Capturing Structure in Models 11.3.3. Subsymbolic Systems So far, all of the 