ons are not
alwaysideal, asweshowin Chapter4.
Under these assumptions, the solution to any problem is a fixed sequence of actions. Ofcourse! onemightsay, Whatelsecoulditbe? Well,ingeneralitcouldbeabranching
strategy that recommends different actions in the future depending on what percepts arrive.
For example, under less than ideal conditions, the agent might plan to drive from Arad to
Sibiu and then to Rimnicu Vilcea but may also need to have a contingency plan in case it
arrivesbyaccidentin Zerindinstead of Sibiu. Fortunately, iftheagentknowstheinitialstate
and the environment is known and deterministic, it knows exactly where it will be after the
firstaction and whatitwillperceive. Sinceonlyonepercept ispossible afterthefirstaction,
thesolution canspecify onlyonepossible secondaction, andsoon.
Theprocess oflooking forasequence ofactions thatreaches thegoaliscalledsearch.
SEARCH
A search algorithm takes a problem as input and returns a solution in the form of an action
SOLUTION
sequence. Once a solution is found, the actions it recommends can be carried out. This
is called the execution phase. Thus, we have a simple formulate, search, execute design
EXECUTION
for the agent, as shown in Figure 3.1. After formulating a goal and a problem to solve,
the agent calls a search procedure to solve it. It then uses the solution to guide its actions,
doingwhateverthesolutionrecommendsasthenextthingtodo typically, thefirstactionof
the sequence and then removing that step from the sequence. Once the solution has been
executed, theagentwillformulate anewgoal.
Notice that while the agent is executing the solution sequence it ignores its percepts
when choosing an action because it knows in advance what they will be. An agent that
carries out its plans with its eyes closed, so to speak, must be quite certain of what is going
on. Controltheorists callthisan open-loopsystem,because ignoringthepercepts breaksthe
OPEN-LOOP
loopbetweenagentandenvironment.
We first describe the process 