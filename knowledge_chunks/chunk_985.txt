, 2001) first selects a subset based on similarity, and then from this subset chooses cases based on diversity. The algorithm is given in Figure 15.32. Diversity-BG(q : query, CB : case base, k : retrieval size, b : bound) 1 CBsubset Sequential-KNN(gq, CB, b k, n) most similar bk cases 2 R MaxD(List (First (CBsubset)), Rest (CBsubset), k) 3 return R MaxD(casesIN : cases in, setC : candidate cases, k : retrieval size) R casesin while RI k do Cyece GetBest(setc, R) R Cons (Cyesyr R) add at head of list setc Remove (c,..., setc) return Reverse (R) NU RWWE GetBest(setC : case set, R : retrieval set) Crece First (set) Guay - RelativeDiversity (Cress, R) setC Rest (setc) while setc () do nextCase First (setc) setc Rest (setC) relativeD RelativeDiversity (nextCase, R) if relativeD d,., then c,.., - nextCase Geax relativeD PoORIKRURWHE 11 return Cyece Remove(c : case, setC : set of cases) 1 aif First (setc) 2 then return Rest (setc) 3 else return Remove(c, Rest (setC)) FIGURE 15.32 The Bounded Greedy algorithm first selects B times the required number of cases based on similarity, and then from this set chooses the K required cases to maximize diversity. The function MaxD, takes the first element from the bigger set and augments the set, incrementally adding cases with the highest relative diversity. We assume the function relativediversity that computes the relative diversity of a case w.r.t. a set, as per the formula described in the text. The Diversity Conscious Retrieval (DCR) algorithm (McSherry, 2002) applies finer control on which diverse cases are considered. It employs a control parameter a that controls the loss of similarity for any retrieved case. It divides the similarity interval 0,1 into segments of length a and allows diversification of the retrieval set only in cases belonging to one such interval. Thus, the maximum loss of similarity for choosing a bad case is a. The interval is the one in which the Kt similar case in the SRS lies. Diversity-DCR(q : query,