gyart of the transition rooted at a given start state Start. Even for Gotan, the algorithm may explore only a small part depending upon how good the heuristic function it uses is. In our example, we will assume that the start node is s7 in the figure below. Observe that in this case, Ggtax G5, is the entire transition graph. The solution for a deterministic AO graph found by the AO algorithm is an acyclic subgraph, that represents how a problem is decomposed into smaller problems. However, for MDPs which may have cyclic policies, a different approach needs to be taken. Hansen and Zilberstein consider AO graphs with loops and present the LAO algorithm. Loops will be present in any indefinite horizon MDP, since cycling over them is what can delay the solution indefinitely. The AO algorithm, described in Section 6.3, maintains a subgraph at all times. This subgraph is initialized to the given (start) node and contains markers along the direction of the best solution found as judged by the heuristic function. A marker indicates the hyper-edge to be followed at that node. That is, for the SSP it specifies the action to be taken. The heuristic function h(n) for any node is an estimate of reaching the goal (solved) state starting from that node. It corresponds to the estimate of the value function for that node. The algorithm has two phases. In the forward phase, one travels down the marked path and expands one of the unsolved leaf nodes, and assigns the heuristic value to each new node added to the subgraph. In the backward phase, these new values are backed up to the root (start) node. The process continues till the leaf nodes are all solved nodes, and no unsolved nodes remain in the subgraph. The LAO algorithm maintains a subgraph G' made of a subset S' c CS of nodes from the state space, and on termination has actions prescribed for each node ne Gp . A partial solution graph G'p is a subgraph of G that contains exactly one action for each state in G". The algorithm mai