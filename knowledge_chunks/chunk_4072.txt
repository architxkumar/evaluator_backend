nd m is the victim. Mi Gs Dogs [Bite carrier Dogs | [Bite || cal {isa fisa fisa ical or isa isa isal S17 od +- -{ b }e _[m g >| b | [m assailant victim assailant victim {a) (b) SA SA Constables Dogs} | Bite | Mail-carrier ry isa i isa assailant victim (c) (d) Fig.9.4 Using Partitioned Semantic Nets To see how partitioning makes variable quantification explicit, consider next the similar sentence: Every dog in town has bitten the constable. The representation of this sentence is shown in Fig. 9.4(c). In this net, the node c representing the victim ties outside the form of the general statement. Thus it is not viewed as an existentially quantified variable whose value may depend on the value of d. Instead it is interpreted as standing for a specific entity (in this case, a particular constable), just as do other nodes in a standard, nonpartitioned net. Figure 9.4(d) shows how yet another similar sentence: Every dog has bitten every mail carrier. would be represented. In this case, g has two V links, one pointing to d, which represents any dog, and one pointing to m, representing any mail carrier. The spaces of a partitioned semantic net are related to each other by an inclusion hierarchy. For example, in Fig. 9.4(d), space $1 is included in space SA. Whenever a search process operates in a partitioned semantic net, it can explore nodes and arcs in the space from which it starts and in other spaces that contain the starting point, but it cannot go downward, except in special circumstances, such as when a form arc is being traversed. So, returning to Fig. 9.4(d), from node d it can be determined that d must be a dog. But if we were to start at the node Dogs and search for all known instances of dogs by traversing isa links, we would not find d since it and the link to it are in the space 51, which is at a lower level than space SA, which contains Dogs. This is important, since d does not stand for a particular dog; it is merely a variable that can be instantiated with a