ngly, as AI makes its way into the conventional programming world, AI systems are being written in general purpose programming languages such as C. One reason for this is that AI programs are ceasing to be standalone systems; instead, they are becoming components of larger systems, which may include conventional programs and databases of various forms. Real code does not form a big part of this book precisely because it is possible to implement the techniques we discuss in any of several languages and it is important not to confuse the ideas with their specific implementations. But you should keep in mind as you read the rest of this book that both the knowledge structures and the problem-solving strategies we discuss must ultimately be coded and integrated into a working program. This process will definitely throw more light into real world problems faced in the implementation of AJ techniques. It is for this reason we have introduced Prolog to ensure that you do not end up just reading and believing. Al is still a young discipline possibly in the sense that little has been achieved as compared to what was expected. However one must admit a lot more has been learnt about it. We have learnt many things, some of which are presented in this book. But it is still hard to know exactly the perspective from which those things should be viewed, We cannot resist quoting an observation made by Lady Lovelace more than 100 years ago: In considering any new subject, there is frequently a tendency, first, to overrate what we find to be already interesting or remarkable; and, secondly, by a sort of natural reaction, to vedervaiue the true state of the case, when we do discover that our notions have surpassed those that were really tenable. [Lovelace, 1961] She was talking.about Babbage s Analytical Engine. But she could have been describing artificial intelligence. While defining AI in terms of symbol processing it would only be right for us to inspect the problem of Symbol Groun