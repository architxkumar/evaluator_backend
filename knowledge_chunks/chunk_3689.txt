tted to the Problem Solver for solution. The Generator was included as part of the system to provide well-ordered training examples and to make the system a fully automatic learner. The Problem Solver attempts to find a solution to this problem using available heuristics and operators. (A solution has been found when an operator produces an expression not containing an integral. Sec. 19.3 The LEX System 407 fni.,g) porn comb If,52) /N /N trans POIYOni trig eitp_iog monom monom + poly tin cos tan In log Figure 19.4 A segment of the LEX generalization tree grammar. Output from the Problem Solver is some solution together with a complete trace of the solution search. This is presented to the Critic unit for evaluation. The Critic then analyzes the solution trace, comparing it to a least-cost path and passes related positive or negative training instances to the Generalizer. A positive instance is an operator which lies on the least-cost path, while a negative instance is one lying off the path. Given these examples, the Generalizer modifies heuristics to improve the selection of operators for best application during an attempted solution. During the learning process each operator is given a version space of heuristic rules associated with it. Rules in the version space give the conditions under which the operator applies as well as the domain of states that can be produced. The version space is actually stored as two bounding rules, a rule G which gives the most general conditions of application and a rule S which gives the most specific conditions. Between these two bounds are implicitly contained all plausible versions of the heuristic. As the system learns, the bound S is made more general to include all positive instances presented by the Critic while the bound G is made more specific to exclude all negative instances. When the two bounds become equal (G = 5), the correct heuristic has been learned. Problem I t,ammgprob Iej[ P_' cbl ^ solution trace generator Solve