t even if m and n were to be on an optimal path, this is true. Given that we started from node S. we can rewrite the above inequality and add the term g(m) to both sides to get, h(m) g(m) s k(m, n) h(n) g(m) Since nis the successor of m, we have g(m) k(m, n) g(n) Therefore, h(n) g(m) s h(n) g(r). (5.8) or Fm) fm) (5.9) That is, on a path being constructed from to S to G by A , the Fvalues increase as we move towards the goal G. This is true even for the optimal path. The closer you get to the goal, the better you estimate the actual cost, since the contribution of the heuristic component decreases. Remember that it is the heuristic function that underestimates the cost. Observe that the hill climbing algorithm using fvalues would simply not work, because these values are increasing. For A , the interesting consequence of searching with a heuristic function satisfying the monotone property is that every time it picks a node for expansion, it does so by finding an optimal path to that node. As a result, there is no necessity of improved cost propagation through nodes in CLOSED (lines 26-31 in Figure 5.14), because A would have already found the best path to them in the first place when it picked them from OPEN and put them in CLOSED. L7: If the monotone condition holds for the heuristic function then at the time when A picks a node n for expansion g(n) g (n). Figure 5.19 illustrates the situation. Let A be about to pick up node n with a value g(n). Let there be a (known) optimal path from S to n via nz, and nya. Proof Let A expand noden with cost g(n). Let n, be the last node on the optimal path from S to n that has been expanded. Let n,4, be the successor of n, that must be on OPEN. The following property holds, A(nz) g(nz) S h(nz-y) 841) from (5.8) or A(nz) g (nz) S hrr 1) B Cr ) because both are on the optimal path OPEN Optimal path to 7 fo) o q Oo O 9 . ro) Start o o oO Path to node n bd - e P,eeeeeececece FIGURE 5.19 A is just about to pick node n with cost g(n).