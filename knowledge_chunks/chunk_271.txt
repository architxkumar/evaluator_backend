 travel down together. The last stage is the rule node where the matching tokens of a rule arrive. 2. The conflict resolution strategy is applied and a rule is selected to fire. If the Conflict Set is empty then execution ends. 3. The selected rule is executed. A bunch of new positive and negative tokens are created. Control returns to step 1. The above description does not contain the details about how negative tokens are handled. This is left as an exercise for the reader. Also, it seems that the author of the algorithm has subsequently developed improved versions said to be several orders of magnitude faster, but which are not available in the literature'?. The reader would find it interesting to work upon improvements to the algorithm. The data-driven processing on a network of nodes makes it a promising candidate for implementing OPS5 on a parallel machine, and one can find more detail in (Gupta et al., 1986; 1989). We next look at a toy example and the corresponding Rete net. 6.6.8 An Example Let us say that we have data on objects from the blocks world, described in terms of the shape, size and colour of the base, sides and top. The following rules are used to recognize one of pyramids, cylinders, wands and domes. For example, the wand rule 4 (number 3) says that, IF The block has name x The base of the block is circular with area 1 The side of the block is curved and tapering with colour black The top of the block is pointed N Classify block named x as a wand. Let us say that we have these four rules. Rule 1: (p greenPyramidc-rule block name x ) base block x shape square area 1) (side block x angle 9) surface plane colour green) top block x surface point) make class Lleck x type greenPyz amid) Rule 2: (p cylincer-rule (block name x ) base block x shape circle area 1) (side block x tangle 490 surface curved top block x surface flat make class block x type cylinder) ) Rule 3: (p wand-rale block name x ) base block x shape le area 1 (side black x angle surface 