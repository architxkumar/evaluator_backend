we should add constraints to circumscribe the effects of actions. We should say that if any state variable is not affected by the action a; then it remains unchanged in the succeeding layer. These constraints are derived from the Frame axioms, which say that the only change that happens is that due to the known actions. Let a; act(u, ..., z) be the action chosen for the it step. Let x be a state variable not affected by this action. That is, it does not figure in the effects of the action. Then the Frame axiom states that the value of x must be same before and after the action. The Frame axioms are expressed as ternary constraints of the form, aj act(u, ..., Z), X(ArQ4, .., AFYp, Sis) V, x(argy, .-., AFOp, S)) v for1 sis k Let us look at the example of the action Stack(A, C). The effects of this action are On(A) C, Holding(arm) nil, and Clear(C) 0. That is, it affects the variables On(A), Holding(arm), and Clear(C). For every other variable, we must introduce constraints of the form (shown for Clear(B) and On(C) only), a; Stack(A, C), Clear(B, S:1) Vcg, Clear(B, Sj) Vcg for 1 s isk a; Stack(A, C), On(C, S:4) Voc, Clear(C, S)) Voc for 1 sis k Here, Vcg and Voc are variables. The only constraint that these variables must satisfy is that they must have the same value in Sj-1 and S;. The Frame axioms ensure that the only state changes that are discovered by solving the CSP are those that are the effects of the actions in the plan. Figure 10.14 below shows the matching diagram (see Chapter 8) for one action variable a; and only for one of its values UnSt(A, B). We also illustrate the ternary constraint, due to the Frame axiom for one variable On(B). Given this snippet of the matching diagram, one can imagine how the full constraint graph or the full matching diagram will look like. One can think of the variables arranged in layers like in the planning graph. The unary constraints imposed by the start state and the goal propositions can be used to enforce node consistency