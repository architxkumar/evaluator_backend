redllsupports(r sit 19.5 LEARNING STRUCTURAL CONCEPTS Winston's Arch system was dcveloped early in 1970 (Winston. 1975) This work has been noted as one of the most influential projects in recent Al research and has been cited as being responsible for stimulating renewed research in the area o machine learning. The Arch system learns concepts in the form of associative network representations (Figure 19.8) much like the cluster network representations of the previous chapter. The Arch system, however, is not able to handle disjunctive descriptions. Given positive and negative training examples like the ones in Figures 19.9 and 19. 10, the system builds a generalized network description of an arch such as (if (and (has parts x (x1 x, xi)) (ako brick x1) (ako brick x) (ako prism x) (supports x1 x1) (supports x xi)) (isa x arch)) Each training example is presented as a blocks world line drawing sshk-h is converted to a network representation. The first positive example is taken as the .ports cw Figure 19.8 An arch and its network representation. Sec. 19.6 Summary 413 ((arch(nodes(a b C) (arch(nodes(a b c) (arch(nodes a b c) (links(ako a brick) (links(ako a brick) (links(ako a brick) (ako b brick) (ako b brick) (ako b brick) (ako C brick) (ako c wedge) (ako c prism) (supports a C) + (supports a c) (supports a C) (supports be) (supports b c) (supports b c) (right of b a) (right of b a) (right of b a) (left of a b))) (left of a b I)) (left of a b))) Positive Example Positive Example Generalization Figure 19.9 Generalized description for two positive examples. ((arch (nodes (a be) (links (ko a brick) (skobbrick) (ako priest) C (supports ac) (support, be) (rit_of b a) (left of a b) (must not touch a b))) Figure 19.10 A nonarch and the Negative example near miss Specialized exception resulting specialized representation. initial concept description. The next example is then matched against this description using a graph-matching algorithm. This produces a common subgraph and 