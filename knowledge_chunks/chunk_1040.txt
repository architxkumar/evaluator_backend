lves invoking the template that captures salient aspects of a crash (when, where, number and type of casualties, for instance) and filling in this template, while also recording any significant additional information that may not have been prototypical of a crash (say, a miraculous escape). Once the filled-in template is recorded, it can be used to reconstruct a textual description of the crash. Flight No. Air India 182 Type of Carrier Boeing 747-237B Date 23 06 1985 Location of Crash Trish Airspace No. of the passengers and crew members on board 329 No. of survivors 0 Cause of accident Bombing Origin Montreal Stopover London Destination New Delhi Figure 16.14 An example of a filled-in template. Once the template is defined for a specific domain, a sequence of steps is involved in extracting pieces of information from unstructured text and filling in the slots (Grishman, 1987). The first of these is lexical analysis, where the tokens are identified and labelled with features like Parts of Speech. This is followed by Named Entity Recognition, which involves identifying names of people and company names. Typically, this step makes use of simple rules ( Mr. precedes a person name and Inc. is preceded by a company name) as well as a dictionary of company and people names. For accurate recognition, the effort involved in manually encoding the patterns could be substantial. This has motivated researchers to explore statistical classification approaches trained over a hand annotated corpus, as also Hidden Markov Models. Once the named entities are tagged, a partial syntactic analysis is carried out, wherein the constituents such as noun phrases and verb groups are identified. This is important because noun phrases (say Air India Flight Al-673 ) often map onto the entities and verb groups (say crash landed ) are suggestive of the events. In the fourth step, called the scenario pattern matching, the relations between entities and specific events are mined. This is done by ma