quivalent of non-nil or true in LISP). From the language of Figure 12.12. it can be seen that the ATN begins building a sentence representation in which the first constituent is either type declarative (DCI.) or type interrogative (Q for question), depending on whether the first successful test is an NP or AUX, respectively. The next constituent is the subject (SURJ) NP. and the third is either an auxiliary verb (AUX) or nil. The fourth constituent Is a VP. An ATN is traversed much the same as the RTN described above An example of its operation will help to demonstrate how the structure is built during a parse of the sentence "The big dog likes the small boy.'' I. Starting with state S. PUSH down a level to the NP flet\sork, if an NP i found (1' for true), execute lines 2. 3, and 4. 2. In the lower level NP net .ork, the noun phrase 'the big dog" is found with successive CAT tests for determiner, adjective, and noun. During these tests. NP registers are set to indicate the word constituents When the terminal node Sec. 12.4 Basic Parsing Techniques 253 1. IS/ (PUSH NP/ T 2. (SETA SUBJ (o) 3. (SETR TYPE (QUOTE DCL)) 4. (TO Si) 5. (CAT AUX T 6 (SETA AUX (( 7. (SETA TYPE (QUOTE 0)) 8. (TO $2))) 9.(Si (CAT VT 10. (SETR AUX NIL( 11. )SETRV(o) 12. (TO S4(() 13. (CAT AUX I 14. (SETR AUX ti.) 15. (TO S3))) 16.(S2 (PUSH NP T 17. (SETR SUBJ (u) 18 (TO S3(() 19.(S3 (CAT VT 20. (SETR V () 21. (TO S4))) 22.(S4 (POP BUILDQ IS * *(VP+)( TYPE SUBJ AUX V) T) 23. (PUSH NP' T 24. (SETR VP BIJILDQ (VP (V( s) V) 25. (TO Sb))) 26. (Sb (POP (BUILDQ IS... .) TYPE SUBJ AUX VP) T) 27, (PUSH PP T 28. )SETR VP (APPEND (GETF1 VP) (UST ( 29. 1 T S5))( Figure 12.12 An A'F" spc..h tr (anguage. (N4) is tested and the PP test subsequently fails. POP is executed and a rcturfl 01 control is made to statement 2. 3. The register SUBJ is set to the value of 01 which is the list structure (NP(dog(big) DEF) returned from the NP reiscrs. DEF sign ihes that the determiner is definite. 4. In line 3. register T