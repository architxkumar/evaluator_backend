ient storage systems. For example, we might want to store an ontology in a relational data base management system (see for example (Pan and Heflin, 2003), (Kraska and R6 hm, 2006), (Rohloff et al., 2007)). While the ontology language leads to overheads in space requirement, the XML-based tags become useful when software agents across the Web have to communicate. Then the ontology becomes a formal description of the language used by each system, describing the entities and the relations between them. Then a set of agents that share the same ontology will be able to communicate meaningfully amongst themselves, and for other agents, one could rely on a translator that maps entities of one ontology to another. The role of Ontologies has become prominent with the possibility of a semantic web (Berners-Lee et al., 2001). The possibility of programs exchanging information over the web has brought about the need of shared vocabularies and conceptualizations. 14.8 Formal Concept Analysis A lattice is a partial order in which every two elements have a unique supremum and an infimum. In the taxonomy, a supremum corresponds to the most specific common subsumer of two nodes, and the infimum corresponds to the most general common subsumee. Formal Concept Analysis (FCA) is a method of automatically deriving a taxonomy of concepts from a collection of objects and their properties (Wille, 1982), (Ganter et al., 2005). Each concept, as defined below, relates a set of objects to a set of attributes. The concepts formed depend directly on the information about objects and their properties, and can be mined automatically. The concepts also place themselves in a lattice structure. FCA defines formal concepts in the setting of a formal context. A formal context contains all the (relevant) information about all the objects in the domain in terms of binary valued properties. The formal context has a yes or no answer for every property for every object. The formal context can be simply repre