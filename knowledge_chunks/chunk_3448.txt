 ALGORITHM Production l Or rule-based) systems are described in Chapter IS. They are popular architectures for evert s)stenls. A typical system will contain a Knowledge Base which contains structures representing the domain expert's knowledge in the form of rules or productions. a working memory which holds parameters for the current problem. and an inference engine with rule interpreter which determines which rules are applicable for the current problem (Figure 10.7). The basic inference cycle of a production system is match, select, and execute as indicated in Figure 10.7. These operations are performed as follows. Match. During the match portion of the cycle, the conditions in the left hand side (LHS) of the rules in the knowledge base are matched against the contents 206 Matching Techniques Chap. 10 ri Ch -0 Select Execute s j Figure 10.7 Production system components and basic cycle, i of working memory to determine wh ch rules have their LUIS conditions satisfied with consistent bindings to working memory terms. Rules which are found to be applicable (that match) are put in a conflict set. Select. From the conflict set, one of the rules is selected to execute. The selection strategy may depend on recency of useage, specificity of the rule, or other criteria. Execute. The rule selected from the conflict set is executed by carrying out the action or conclusion part of the rule, the right hand side (RHS) of the rule. This may involve an I/O operation, adding., removing or changing clauses in Working Memory or' simply causing a halt. The above cycle is repeated until no rules are put in the conflict set or until a stopping condition is reached. A typical knowledge base will contain hundreds or even thousands of rules and each rule will contain several (perhaps as many as ten or more) conditions. Working memories typically contain hundreds of clauses as well. Consequently. exhaustive matching of all rules and their LUIS conditions against working-memory clauses may 