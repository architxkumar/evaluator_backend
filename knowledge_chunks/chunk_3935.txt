e, called the resolvent, will be the disjunction of all of the literals of both of the parent clauses with the following exception: If there are any pairs of literals Z and a L such that one of the parent clauses contains Z and the other contains 7Z, then select one such pair and eliminate both L and 7L from the resolvent. (c) If the resolvent is the empty clause, then a contradiction has been found. If it is not, then add it to the set of clauses available to the procedure. Let s look at a simple example. Suppose we are given the axioms shown in the first column of Fig. 5.7 and we want to prove R. First we convert the axioms to clause form, as shown in the second column of the figure. Given Axioms Converted to Clause Farm P P (1) (PAQ3A =P\/n Q\/A (2) (SV}AQ ~S\/Q (3) a TVQ (4) T T (5) Fig. 5.7 A Few Facts in Propositional Logic Then we negate R, producing 7R, which is already in clause form. Then we begin selecting pairs of clauses to resolve together. Although any pair of clauses can be resolved, only those pairs that contain complementary literals will produce a resolvent that is likely to lead to the goal of producing the empty clause (shown as a box). We might, for example, generate the sequence of resolvents shown in Fig. 5.8. We begin by resolving with the clause 7R since that is one of the clauses that must be involved in the contradiction we are trying to find. 114 Artificial Intelligence . ARR ROME ETAT ROR SHEAETOSTCRSEEONE ESM One way of viewing the resolution process is that it takes a set of clauses thatare _p, _Qur a R all assumed to be true and, based on information provided by the others, it generates SN new clauses that represent restrictions on the way each of those original clauses a PV3Q P can be made true. A contradiction occurs when a clause becomes so restricted that NL there is no way it can be true. This is indicated by the generation of the empty a WQ 7Q clause. To see how this works, let s look again at the example. In order for proposit