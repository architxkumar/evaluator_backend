 that must be acquired or generated. There are three kinds of links: contributes-to, constrains, and suggests-revision-of. Associated with the first type of link are procedures that allow SALT to generate a value for one parameter based on the value of another. The second type of link, constrains, rules out certain parameter values. The third link, suggests-revision-of, points to ways in which a constraint violation can be fixed. SALT uses the following heuristics to guide the acquisition process: 1. Every noninput node in the network needs at least one contributes-to link coming into it. If links are missing, the expert is prompted to fill them in. 2. No contributes-to loops are allowed in the network. Without a value for at least one parameter in the loop, it is impossible to compute values for any parameter in that loop. If a loop exists, SALT tries to transform one of the contributes-to links into a constrains link. 3. Constraining links should have suggests-revision-of links associated with them. These include constrains links that are created when dependency loops are broken. Control! knowledge is also important. It is critical that the system propose extensions and revisions that lead toward a design solution. SALT allows the expert to rate revisions in terms of how much trouble they tend to produce. SALT compiles its dependency network into a set of production rules. As with MOLE, an expert can watch the production system solve problems and can override the system s decision. At that point, the knowledge. base can be changed or the override can be logged for future inspection. Expert Systems on tag 429 AGREE RSTRLNDOHR EL Ss RRNA TDPRI AC TRSETIRTLT SOE oy, The process of interviewing a human expert to extract expertise presents a number of difficulties, regardless of whether the interview is conducted by a human or by a machine. Experts are surprisingly inarticulate when it comes to how they solve problems. They do not seem to have access to the low-level d