ive actions invoke the notion of time, and planning with durative actions is called temporal planning. Consider a planning task in which one wants to cook dinner. Let us say that the following plan to cook a simple and tasty dinner is found in the STRIPS domain. The high level plan is to cook some kali dal, four chapatis and one papad. Further, let us say that one is using a Graphplan like algorithm that will give us a parallel, low level plan. Also, that there are two gas stoves, S; and Sz, on which cooking can be done. Then the following is an optimal plan in the number of time steps, ( KaliDal(S;), Chapati'(S2) , Chapati2(S;), Chapati?(S2) , Chapati(S1), Papad(S.) ) The actions here are conveniently named after what they cook, and superscripts mark different instances of the same operator. Each action has a precondition that the named stove is available, and the effect is to cook the object. The plan contains six actions arranged in three layers. Now consider the situation when each of the actions above has duration. Let the durations in minutes be KaliDal, 45 , Chapati, 5 and Papad, 3 . Now a property of interest is the makespan, or the total time that the plan needs to run to completion. Figure 10.20 shows a plan with the smallest makespan. The plan in the STRIPS formulation had sets of actions that happened at the same layer or time step. Working with durative actions, it is not straightforward to say that two actions are happening at the same time. For example, both Chapati'(S2) and Chapati (S2) are happening at the same time as KaliDal(S,), but obviously not at the same time as each other. ! ! Chapati"(S,) Chapati (S,) Chapati(S,) Chapati (S,) Papad(S, ! KaliDal(S;) ! ! 0 5 10 15 20 25 FIGURE 10.20 Plans with durative actions are arranged on a timeline. The notion of two actions happening at the same time no longer holds because they may have different durations. Two instantaneous actions a and b have only three possible qualitative temporal relations betwee