 down in the lattice. As defined above, C, Ges CS,. Since in the above example, Sscience c Smath,music and Sscience c Senglish c Smath,music and Sscience c Senglish c Simath,music only Cycience Qualities to be a successor of the top element T ( avinash, arnav, amrita, amnta, ashwaru , ). A simpler method of deciding whether an equivalence class in AttrChild(X) corresponds to a successor of X is as follows. Let E be the set of attributes associated with the equivalence class Se. E is the set of attributes that extend obj(X) by the same set of new objects. If S U X E then Se is not a successor of X. In our example above, the set english, science is larger than english , and therefore cannot be the intension of a successor of T. As one can see, in the example Sgcience is the only equivalence class for which the set of attributes science is not larger than the defining set of attributes science . At this stage, the lattice contains two elements, T and its only successor Cgcience. Next, we recursively add each of the other four attributes math, music, english and games one by one to the attributes Of Cscience. Which in this case is the single attribute science. Then we construct its children (which are the same as the ones discarded above), and select the next two successors Cyames and Cengisp. Finally, Cmmath,music 8 added as a successor twice for each of Cgames aNd CenglishThe reader is encouraged to apply the set size test described above for these equivalence classes. The high level algorithm adapted from (Choi, 2006) is given in Figure 14.36 below. GaloisLatticeConstruction(g,m,r) Compute top concept c (g, att(g)) B 2 Compute Child(c) 3 Succ(c) ( ) 4 enqueue(c, q) 5 while not empty(q) do c dequeue (q) 7 int(c) 8 Compute AttrChild(x) (s,, 3, -, x) 9 for i AtokK 10 do Let d, be the set of defining attributes for s, 11 if Is xl Idi 12 then Let k (obj(s,U x), (s,U )) 13 ifkegq 14 then Compute Child(k) 15 enqueue (k, q) 16 Succ(k) ( ) 17 Succ(c) cons(k, Succ(c)) 18 retur