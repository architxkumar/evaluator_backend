t it can clear block A by removing block C from it and expands that node. Again, the critic Resolve-Conflicts notices the conflict (threat) marked and - on condition clear(C). It suggests that the action labelled be promoted, and the network is now as shown in Figure 7.28. Now the critic Eliminate-Redundant-Preconditions observes that clear(C) marked is being achieved twice, and suggests that one of the redundant nodes be removed. The resulting network is displayed in Figure 7.29. The reader would have noticed that by now, NOAH has computed the best ordering of its subtasks, and all that remains to be done is to expand the Put actions into the lower level domain actions. 7.5.3 Hierarchical Planning In hierarchical planning, high level planning operators are refined into low level ones. The systems described above illustrate various features one would like in an hierarchical planner. The planner should be able to reason about the problem with high-level operators and then drill down into the details. Like ABSTRIPS, it should be able to first focus of critical predicates and ignore the others. Like NOAH, it should be able to refine the high level task into networks of low level operators, with more detailed preconditions. In general, the networks should be partial orders containing only the necessary ordering information, to enable the planner to deploy the least commitment ordering strategy demonstrated by plan space planners and by NOAH. And like Korf's macro operators, the final plans must be composed by putting together primitive actions from the domain. Achieve clear(A) Ach lear(B) Achieve clear(B) Achieve clear(C) Achieve clear(A) ry Achieve clear(B) Achieve clear(C) Figure 7.27 Critic: Elminate-Redundant-Preconditions observes that condition marked is redundant. Suggests removal of one task. D Achieve clear(B) Achieve clear(C) Achieve clear(C) be Put C on something Achieve clear(B) fo Achieve clear(C) Figure 7.28 Achieve clear(A) is refined to moving C onto som