ggests removal of one task. D Achieve clear(B) Achieve clear(C) Achieve clear(C) be Put C on something Achieve clear(B) fo Achieve clear(C) Figure 7.28 Achieve clear(A) is refined to moving C onto something after achieving clear(C). Critic: Resolve-Conflicts notices the conflict marked and - on condition clear(C). Suggests that the action labelled be promoted. 1 Put C on something i a Achieve clear(B) Achieve clear(C) rare Achieve clear(C) Achieve clear(C) Put C on something a - pusone Figure 7.29 Critic: Elminate-Redundant-Preconditions observes that condition marked is redundant. Suggests removal of one task. The high level operator Put X on Y can be further decomposed into STRIPS actions. Blocks B and C need no actions to clear them. But by now, NOAH has found the correct order for the optimal plan. Achieve clear(B) The schematic diagram of the expansion of a high level operator is shown in Figure 7.30. The operator has its own set of preconditions and effects, shown with thick dashed arrows. The effects may be thought of as desired effects, because after refinement, the low level operators may also have other effects, shown with thin dashed arrows, which we can call side effects . Like ABSTRIPS, searching and putting together a high level plan based on the preconditions and effects of the high level operator may be considered. But after expansion, other preconditions and effects may come into play. The preconditions may have to be satisfied, and the post-conditions may have to be inspected for threats and redundant conditions. Similar approaches to hierarchical task network (HTN) planning have been reported in the literature (Wilkins, 1988; Erol, 1994; Tate, 1994). In a system called SHOP2 (Simple Hierarchical Ordered Planner version 2) (Nau, 2003), the high level actions are called tasks and the decomposition of operators is done by methods. A SHOP2 method constitutes of a name, the name of the task it decomposes, a set of subtasks that the method generates, an