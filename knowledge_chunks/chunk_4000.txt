n e Inheritance Nonmonotonic Logic One system that provides a basis for default reasoning is Nonmonotonic Logic (NML) [Mc Dermott and Doyle, 1980], in which the language of first-order predicate logic is augmented with a modal operator M, which can be read as is consistent. For example, the formula Vx, y : Related(x, y) /\ M Get Along(x, y) > 7Will Defend(x, y) should be read as, For all x and y, if x and y are related and if the fact that x gets along with y is consistent with everything else that is believed, then conclude that x will defend y. 2 As we will see below, some techniques add inference rules, which then generate wff s, while others add wft s directly. We'll ignore that difference for the moment. 3 Try not to get confused about names here. We are using the terms nonmonotonic reasoning and default reasoning generically to describe a kind of reasoning. The terms Nonmonotonic Logic and Default Logic are, on the other hand, being used to refer to specific formal theories. 152 Artificial Intelligence Once we augment our theory to allow statements of this form, one important issue rfust be resolved if we want our theory to be even semidecidable. (Recall that even in a standard first-order theory, the question of theoremhood is undecidable, so semide-cidability is the best we can hope for.) We must define what is consistent means. Because consistency in this system, as in first-order predicate logic, is undecidable, we need some approximation. The one that is usually used is the PROLOG notion of negation as failure, or some variant of it. In other words, to show that P is consistent, we attempt to prove >P. If we fail, then we assume 7 to be false and we call P consistent. Unfortunately, this definition does not completely solve our problem. Negation as failure works in pure PROLOG because, if we restrict the rest of our language to Hom clauses, we have a decidable theory. So failure to prove something means that it is not entailed by our theory. If, on the ot