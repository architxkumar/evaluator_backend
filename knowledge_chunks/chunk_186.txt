ng other paths will not have this continued strengthening of their trail, and will not attract other ants. Consider a thought experiment in which two ants go off in two directions in search of food. Both leave trails behind them, and the ants that come out of the nest after them randomly follow one of the trails. If one of the trails leads to food then the ant will bring the food back along that trail, adding more pheromone on the way back. More ants will follow, and return with more food, making the trail even stronger. Combined with the fact that the trails have a natural tendency to dry up (after all they are made up of minute chemical deposits), the overall effect will be that the food bearing trail will eventually become strong enough to attract all the emerging ants, and further activity will be focused entirely along the successful trail. Furthermore, if the world changes, say an obstacle is suddenly placed in their paths (see Figure 4.24 below), the ants will not be able to follow the trail, but will have to search again. Both the outgoing ants and the returning ants will come up against the obstacle, and will have to choose between a left and a right turn. Some will choose left and some right, and there will be more choices for them later, but eventually the ants making the correct choices will rejoin the trail sooner. This will reconnect the other ants, and this new trail will quickly be adopted as the trodden path. Re se ote - FIGURE 4.24 When an obstacle is placed on the pheromone trail of an ant colony, they quickly find the shortest diversion around it. In the absence of a trail, the real ant presumably does a random walk. In fact, the ants are known to follow the trails only probabilistically. The stronger the pheromone trail, the more likely that an ant will follow it. In the computational version of the algorithm, (see (Dorigo, 2004)), Ant Colony Optimization (ACO) combines this pheromone pull with the innate problem solving strategy of an agent. AC