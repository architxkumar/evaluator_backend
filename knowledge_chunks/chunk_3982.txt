lems directly, without search. If we consider all rules that match, then the addition of such special-purpose rules will increase the size of the search rather than decrease it. In order to prevent that, we build the matcher so that it rejects rules that are more general than other rules that also match. How can the matcher decide that one rule is more general than another? There are a few easy ways: 142 Artificial Intelligence If the set of preconditions of one rule contains al] the preconditions of another (plus some others), then the second rule is more general than the first. If the preconditions of one rule are the same as those of another except that in the first case variables are specified where in the second there are constants, then the first rule is more genera) than the second. Preferences Based on Objects Another way in which the matching process can ease the burden on the search mechanism is to order the matches it finds based on the importance of the objects that are matched. There are a variety of ways this can happen. Consider again ELIZA, which matched patterns against a user s sentence in order to find a rule to generate a reply. The patterns looked for specific combinations of important keywords. Often an input sentence contained several of the keywords that ELIZA knew. If that happened, then ELIZA made use of the fact that some keywords had been marked as being more significant than others. The pattern matcher returned the match involving the highest priority keyword. For example, ELIZA knew the word I as a keyword. Matching the input sentence I know everybody laughed at me by the keyword I would have enabled it to respond, You say you know everybody laughed at you. But ELIZA also knew the word everybody as a keyword. Because everybody occurs more rarely than I, ELIZA knows it to be more semantically significant and thus to be the clue to which it should respond. So it will produce a response such as Who in particular are you thinking of? Notice