ikes(friend, Z) theta X beach, Y theMatrix likes(friend, pizzaHut) theta X beach, Y theMatrix, Z pizzaHut fail theta X beach, Y theMatrix, Z pizzaHut restaurant(Z), likes(friend, Z) theta X beach, Y theMatrix backtrack likes(friend, saravanaBhavan) theta X beach, Y theMatrix, Z saravanaBhavan theta X beach, Y theMatrix, Z saravanaBhavan outingPlan (X, Y, Z) , Dinner (Z) i L S likes(friend, saravanak (mall) i Z i an ' t ! ' , jlikes(friend, theMatrix) : 7 movie(theMatrix) ioe : ng(beach)) movie(sev enSamurai) restaurant(pizzaHut) ! movie(artificiallntelligence) ' restaurant(saravanaBhavan ikes(friend, beach) moive(bhuvanShome) .22 The goal tree explored by backward chaining is shown in solid arrows. The matching facts are shown in the boxes in the sha ches the tree in a depth first manner left to right. would have happened if your friend liked neither the Pizza Hut nor Saravana Bhavan? The algorith ktracked and attempted the next choice of a movie. That sub-goal would eventually have succeedec 1uvan Shome. Now it would go over the choices of the restaurants all over again even though we choices are bound to fail. event such fruitless backtracking Prolog allows the programmer to mark certain sub-goals witt Using the cut operator, for which Prolog uses the symbol ! , we can rewrite the rule as follows. outingPlan(X, Y, Z) :- eveningPlan(X), !, moviePlan(Y), !, dinnerPlan(Z). econd cut in iagiakovediwle essentially says the following: If the eveningPlan(X) goal and the movi 2 succeeded with some bindings of the variables X and Y, and if the dinnerPlan(Z) goal fails for all bi ere is no need to backtrack to the eveningPlan(X) and moviePlan(Y) goals to try different bindings ets ge ag re JENCErICUONFIMUNe VAUX). scienceFictionFilm(bladeRunner). ictionFilm(whereEaglesDare). i i kazirhut. :motionalDrama(scenesFromAMarriage). SE Con 3-6 define different genres of films. Lines 7-12 give some examples of the different genres. Lines 3alaji likes all movies except emotional dram