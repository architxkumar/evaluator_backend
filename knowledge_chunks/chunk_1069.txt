es(tweety) should be present in the expansion, for the second stability criterion to apply. But there is no rule which will add -Flies(tweety) to the database. Hence, this is not a stable expansion. In the second expansion, B-Flies(tweety) is false or B-Flies(tweety) is true. Then by criterion 3 Flies(tweety) should not be present in the expansion, which is the case. Now in this expansion, both Bird(tweety) and B-Flies(tweety) are true and hence Flies(tweety) is added to the expansion. Given a knowledge base KB, the set of believable sentences in a stable expansion are only those that are entailed by the formulas that are true in that expansion. oE iff KB U Ba ae U -Ba ae E Oo This suggests an approach to determining whether one might believe a sentence o or not. The sentence o can be believed if it is entailed by a stable expansion. The task then is to search for a stable expansion by assigning true or false to each formula of the type Ba, and checking whether it is stable. The check for stability is done as follows, If Ba was replaced by true then a should be entailed in the expansion If Ba was replaced by false then a should not be entailed in the expansion The algorithm in Figure 17.1 accepts a knowledge base and a query, and returns yes if the query holds under autoepistemic reasoning, and no otherwise. For the sake of simplicity, we assume that there is only one level of belief in the knowledge base. That is, there are no formulas of the type BBa or B7Ba, though they are specified by the stability criteria9. In principle, for any formula there are an infinite set of formulas (Ba, BBa, BBBa, ...) that should be in the extension, but the level we need is determined by the level of belief that occurs in the KB. Let us consider a knowledge base that contains n occurrences of the B operator, Ba;, Bag, ..., Ba,. We assume that the 2 combinations of truth values for these formulas are arranged in a total order and a function AssignBel(KB, i) selects the i? assignment