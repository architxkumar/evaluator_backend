ng smaller domain variables first, results in smaller trees, as in the tree on the right. The domain sizes of variables change dynamically when lookahead algorithms prune domains of future variables. It is possible that some variables may be pruned more than others. In such a situation, one may want to investigate the domains of the future variables before choosing the variable to instantiate next. The high level algorithm for backtracking search with dynamic variable ordering would look like the following. Loop: Choose the variable with the smallest domain. Choose a value for the variable extending the solution vector A. Prune the domains of all future variables, using lookahead w.r.t. A. Refinement of the high level algorithm will fill in the method for selecting the value for the selected variable, backtracking if no value is found, and exiting with a solution vector or a failure message as the case may be. Observe that if the value for the variable is selected using Forward Checking or Full Lookahead then the domains of all future variables would have been pruned during the selection process itself. 9.8 Strategic Retreat In the algorithms that we have discussed above, and the search methods in the earlier chapters, when a partial solution cannot be extended, the algorithm backtracks to the latest choice point and tries another choice. This mode of backtracking is called chronological backtracking. In a way, this is a blind (and conservative) strategy that is devised to explore the complete space in a simple and systematic manner. However, as we saw in Chapter 6 (see Figure 6.1), a search algorithm will often repeatedly explore a part of the search space in which no solution lies, a behaviour known as thrashing. This is also evident in the space explored by the algorithm Backtracking described earlier in this chapter. A cursory look at Figure 9.34 will reveal that the three subtrees located below the choice of the first variable G w are identical and without a so