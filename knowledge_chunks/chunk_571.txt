M,N, Q, t), if the following conditions hold. All logical preconditions of the action are satisfied in P. All metric preconditions are satisfied in M. No effect of the action interferes with any persistent condition in N or a future event in Q. There is no event in Q that interferes with the overall conditions of action a. Interference is defined as any of the following conditions. - An action a adds an event e that causes fluent p and there is another event e in Q that causes 7p. Condition p is protected in P till time f, and action a deletes it before that time. An action a has an overall condition p and there is an event in Q that deletes p, while a is executing. Action a changes, or accesses, the value of a metric fluent which is being accessed by another executing action. When an action is selected, the following changes are made: Its at-start effects are added to F and M as the case may be. Its overall conditions are added to Ml. Its at-end effects are added to the events queue Q with time stamps derived from its duration. The AdvanceTime move can be selected if the event queue is not empty. If it is selected, then the following changes are made. The current time t is advanced to the earliest time at which an event is scheduled in Q. All the events in Q that are to happen at this time are incorporated into F, M and P appropriately. This may include adding or deleting logical fluents to F, modifying values in M, and deleting persistence requirements from Nn. Figure 10.23 illustrates the state space explored by Sapa. It is interesting to note that Sapa can schedule actions in parallel, even though the search algorithm picks one action at a time. Once a durative action is selected, its at-start effects are added to F and M, and its at-end effects are inserted into Q. Till the time stamp advances to the at-end effects, the action can be thought of as being executed . (start) State , SwitchOn(S3) 1 0 (lighted ,), 03) 1 0 (lighted 3), ) AdvanceTime SwitchOn(S)) Adva