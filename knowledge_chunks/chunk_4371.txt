xample of transformational analogy is shown in Fig. 17.20 [Solution | Solution [Anderson and Kline, 1979]. The program has seen proofs about New ete - points and line segments; for example, it knows a proof that the ; line segment RN is exactly as long as the line segment OY, given Fig. 17.19 Transformational Analogy that RO is exactly as long as NY. The program is now asked to prove a theorem about angles, namely that the angle BD is equivalent to the angle CE, given that angles BC and DE are equivalent. The proof about line segments is retrieved and transformed into a proof about angles by substituting the notion of line for point, angle for line segment, AB for R, AC for O, AD for N, and AE for . Carbonell [1983] describes one method for transforming old solutions into new solutions. Whole solutions are viewed as states in a problem space called T-space. T-operators prescribe the methods of transforming 372 Artificial Intelligence solutions (states) into other solutions. Reasoning by analogy becomes search in T-space: starting with an old solution, we use means-ends analysis or some other method to find a solution to the current problem. B Cc Y N D 6 E R A Old Proof: New Proof: RO = NY (given) BAC = DAE ON = ON (reflexive) CAD = CAD RO+ON=ON+NY = (additive) BAC + CAD = CAD + DAE RN = OY (transitive) BAD = CAE Fig, 17.20 Solving a Probiem by Transformational Analogy 17.8.2 Derivational Analogy Notice that transformational analogy does not look at how the old problem was solved: it only looks at the final solution. Often the twists and tums involved in solving an old problem are relevant to solving a new problem. The detailed history of a problemsolving episode is called its derivation. New Analogical reasoning that takes these histories Problem inty account is called derivational analogy (see Previously Solved Problem Old Derivation New Derivation Fig. 17.21). Carbonell [1986] claims that derivational Solution Solution analogy is a necessary component in the trans