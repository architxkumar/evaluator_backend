 One is to look at ways to repair the plan we already have to make it more efficient. In this case, that is fairly easy to do. We can look for places in the plan where we perform an operation and then immediately undo it. If we find any such places, we can eliminate both the doing and the undoing steps from the pian. Applying this rule to our plan, we eliminate steps 4 and 5. Once we do that, we can also eliminate steps 3 and 6. The resulting plan 1. UNSTACK(CA) 4. STACK(B, C) 2. PUTDOWN(C) 5. PICKUP(A) 3. PICKUP(B) 6. STACK(A, B) contains, in fact, the minimum number of operators needed to solve this problem. But for more complex tasks, the interfering operations may be farther apart in the plan and thus much more difficult to detect. In addition, we wasted a good deal of problem-solving effort producing all the steps that were later eliminated. It would be better if there were a plan-finding procedure that could construct efficient plans directly. In the next section, we present a technique for doing this. 13.5 NONLINEAR PLANNING USING CONSTRAINT POSTING The goal-stack planning method attacks problems involving conjoined goals by solving the goals one at a time, in order. A plan generated by this method contains a sequenc; of operators for attaining the first goal, followed by a complete sequence for the second goal, etc. But as we have seen, difficult problems cause goal interactions. The operators used to solve one subproblem may interfere with the solution to a previous subproblem. Most problems require an intertwined plan in which multiple subproblems are worked on simultaneously. Such a plan is called a nonlinear plan because it is not composed of a linear sequence of complete subplans. As an example of the need for a nonlinear plan, let us return to the Sussman anomaly described in Fig. 13.5. A good plan for the solution of this problem is the following: 1, Begin work on the goal ON(A, B) by clearing A, thus putting C on the table. 2. Achieve the goal ON(B, 