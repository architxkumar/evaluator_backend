m one object to another.. For exmaple, the harbor master may send a message to a tug to provide assistance to ship 87 in deberthing from dock 2. This would then result in a sequence of actions from the tug having received the message. In general, a task may consist of any definable operation. such as changing an objects position, loading cargo, manipulating a character string, or popping up a prompt window. A complete program would then be a sequence of the basic tasks such as the simulated movement of ships into and out of the seaport after discharging and taking on cargo. 8.3 OBJECTS, CLASSES, MESSAGES, AND METHODS In this section we present definitions for the basic concepts that make up an OOS: the object, message, class, methods. and class hierarchies. There are probably as many as fifty different OOS languages, and the examples presented in this section may not comply exactly with any one in particular. The examples are representative of all OOS however, and are based mainly on material from the Smailtalk family. including Smalltalk 80 (Goldberg and Robson, 1983. and Kaehler and Patterson, 1986). Smalltalkl V (Digitalk. Inc., 1986). and Little Smalitalk (Budd, 1987). Specialized OOS languages are considered in Section 8.5. Sec. 8.3 Objects, Classes. Messages, and Methods 151 Objects Objects are the basic building blocks in object-oriented systems. All entities except parts of a messige, comments, and certain punctuation symbols are objects. An object consists of a limited amount of memory which contains other objects data and procedures). They are encapsulated together. as a Unit and are accessible to that object only. Examples of objects are numbers such as 5, 31. 6.2 13. strings like 'this is a siring.' arrays such as #(23 'a string' 311 (3 4 5)), the Turtle (a global graphics object originally used in LOGO), a windshield wiper as desiribed above, a ship, and so on. Objects are characterized by attributes and by the way they behave when messages are Sent to 