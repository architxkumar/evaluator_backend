e a reasonable move for us to make since the other half of the piece exchange has occurred. A very general algorithm for quiescence can be found in Beal [1990]. A Maximizing ply B | (6) C |) D/(2) Minimizing ply E \(6) FU) Maximizing ply G H I J 6 7 ) Fig. 12.9 The Situation Calms Down Waiting for quiescence helps in avoiding the horizon effect, in which an inevitable bad event can be delayed by various tactics until it does not appear in the portion of the game tree that minimax explores. The horizon effect can also influence a program s perception of good moves. The effect may make a move look good despite the fact that the move might be better if delayed past the horizon. Even with quiescence, all fixeddepth search programs are subject to subtle horizon effects. 12.4.2 Secondary Search One good way of combating the horizon effect is to double-check a chosen move to make sure that a hidden pitfall does not exist a few moves farther away than the original search explored. Suppose we explore a game tree to an average depth of six ply and, on the basis of that search, choose a particular move. Although it would have been too expensive to have searched the entire tree to a depth of eight, it is not very expensive to search the single chosen branch an additional two levels to make sure that it still looks good. This technique is called secondary search. One particularly successful form of secondary search is called singular extensions. The idea behind singular extensions is that if a leaf node is judged to be far superior to its siblings and if the value of the entire search 242 Artificial Intelligence depends critically on the correctness of that node s value, then the node is expanded one extra ply. This technique allows the search program to concentrate on tactical, forcing combinations. It employs a purely syntactic criterion, choosing interesting lines of play without recourse to any additional domain knowledge. The DEEP THOUGHT chess computer [Anantharaman et ai.