sumed by d, and the set G is the set of highest black nodes, as shown. o. . rN a an nngee NS . G ----- O- - NS FIGURE 14.31 The new node is inserted into the taxonomy by linking it to nodes in S and in G, after deleting any links between the sets S and G. Now given a query node gq, if we want to find all the nodes that subsume q, we simply have to traverse the taxonomy T upwards from the node q looking for its ancestors. Likewise, to find all concepts subsumed by q, we need to traverse all the descendants of q in T. 14.7.6 Satisfaction Every constant c in the knowledge base is attached to most specific node a, in T that it satisfies. If the input assertion is (cd) and a node with description d is not in the taxonomy then a; is the node that is the most specific subsumer2 of the description d. Then, if there is a query asking whether c satisfies a concept g, we can translate it to a query in which we ask if d, is subsumed by g, where d, is the description of a , that the individual c is attached to. Observe that the input sentence (cd) has to be constructed explicitly from a database. Assuming that the database lists all roles for an individually and their fillers explicitly, the descriptions ALL r d and EXISTS n r can be made about an individual only by inspecting the database and making the relevant inferences. However, we have to be careful in choosing the input assertion (cd) while inserting the constant in T. The concept description d in (cd) must contain everything that we know about the constant c. Sometimes this information is not explicit in the set of sentences of DL available, and may have to be ferreted out by a process of making inferences. Consider the following example, jaaneBTY AND BComicFilm FILLS :Actor sShah sShah AND Indian EXISTS 10000000 :Fan The first statement says that jaaneBTY is a BComicFilm in which sShah has acted. The second one tells us that sShah is an Indian with more than ten million fans. But consider what we already know about BCom