9 10 PLD No 10200 3. Anbuselvan M 37 9 PLD No 8900 with similarities, ame Gander Age Experiences Educaiion HandsOn? Stmilarity 0 1 0.94 0.96 1 1 0.97 0 0 092 09 1 1 0.94 0 1 0.88 0.88 1 1 0.94 And the predicted salary is 11052. Observe again that a different gender employee has come into the three most similar cases. We can verify that this is because of the low weight for Gender. Let us look at the retrieval set with the first set of weights we began with. The retrieval set with original weights is, Name Gender Age Experiencs Education HandsQn? Salary 1 Acastus M 46 17 PLD No 13950 2 Anbuselvan M 37 9 PED No 8900 3. Azibo M 32 3 PLD No 3650 with similarity values, 1 0 1 0.94 0.96 t 1 0.98 2 0 1 0.88 0.88 1 1 096 3 0 1 0.78 0.76 1 1 0.92 The predicted salary is 8941. True enough. When Gender is given a significant weight, the same gender cases get a higher similarity value. One can also observe that the predictions in the best three cases are wildly different, even though the similarity values themselves are quite high. Thus, high similarity by itself does not mean anything. Because whatever the similarity function we define, some cases will turn up with high values. What is important is to define the similarity function such that the solution of the retrieved case has high utility. In our example, this means that the predicted salary is as accurate as possible. If that can be done then CBR will work. Similar candidates will have similar salary predictions. This can be achieved in our problem by defining appropriate local similarities and also appropriate weights. The case structure represented here may be termed flat, because it is a collection of attributes without any other constraints. Flat cases capture the essence of structural CBR, viz. that cases are made of components that have their own local similarities, and these local similarities can be aggregated to compute global similarity. Flat cases are easy to implement. One can store them in relational database