h be greater than 0 and smaller than 5. This will match the second WME, as will the following: (card player south rank n 1 ) (card player south rank 2) Given a pattern p and a WME w, the match between the two is positive, if for every attribute of the pattern there is a matching attribute in the WME. By matching we mean that the value of the attribute in the WME satisfies the constraints expressed in the corresponding slot in the pattern. The negation sign inverts the match criteria. A pattern p in a rule is satisfied if there is no WME in the WM matching that pattern. Thus, for example, the following rule will match the highest ranking card held for the player south in each of the suits that has not been played, (p top-card (cavd-rank suit s player south rank r caxd c played 19) -(card-rarnk suit s playe south rank r played ne) (make (highest-carc player south suit s card c rank r )) The above rule will fire four times at the beginning of the game, once for each suit, and create new WMEs, specifying the highest card of south in each suit. If we had instead stated the value of player as a variable p instead of the atom south, the rule would have fired for each of the four players. Observe that we have also introduced one RHS action in this example. The action is (make WME ...) This has the effect of creating the specified WME. The make action can also be specified outside a rule, independently, to the OPS5 interpreter, either directly from the keyboard, or in a file presumably containing a set of initializing actions. Another action on the RHS is (modify WME ...) that modifies a WME identified in the LHS. The patterns in the LHS of a rule can be referred to, either by their sequence number, or an explicitly specified name. For example, we might have a rule that does some actions once a card is to be played expressed as followed. (pe update-top-card (played card c player p suit 3s ) (cavd-rank card c player p suit s ) (highest-card card c player p suit s ) ay (remove