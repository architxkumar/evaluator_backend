nstant memory of recent moves. The memory forces the search to explore new areas, often going against the heuristic function. Finally, we observe that knowledge based methods could be used to remember macro operators that could jump from peak to peak on the heuristic terrain. They solve the problem quickly, but the knowledge acquisition process has to be done in advance. All the methods in the chapter are deterministic in nature. ) e a Exercises 1. Devise heuristic functions for the exercises given in Chapter 2. 2. Modify the algorithm for Depth First Search (Figure 2.18) to incorporate the heuristic function and do a Best First Search. 3. In configuration kind of problems, a goal state is not specified, but a description of the state is given. How would one devise a heuristic function for such problems? Define a heuristic function for the N- queens problem (A) when one begins with an empty board and places one queen at a time, and (B) when all queens are on the board and the move is a perturbation of a given board position. 4. Write the domain functions for the Eight-puzzle. Devise two heuristic functions h; and hg. Randomly generate a hundred start states and goal states and run the algorithm with the two heuristic functions. Compute and compare the effective branching factor for the two versions. . It was shown by Johnson and Story (1879) that the Eight-puzzle and Fifteen-puzzle state space is partitioned into two disjoint sets. This means that if the start state is in one partition and the goal state is another, there is no path between the two states. Study the parity of permutation test described by them, and incorporate it into the Eightpuzzle solver. . Given the two graphs below, show how the algorithms Hill Climbing and Best First Search explore the graphs. Use Manhattan distance as the heuristic function. Assume that each unit on the grid is 10 kilometres. . For the same task, assuming beam width 2, (a) Show the order in which the Beam Search expands the n