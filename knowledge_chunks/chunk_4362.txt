l. Providing a tractable domain theory is a difficult task. There is evidence that humans do not learn with very primitive relations. Instead, they create incomplete and inconsistent domain theories. For example, returning to chess, such a theory might include concepts like weak pawn structure. Getting EBL to work in illstructured domain theories is an active area of research (see, e.g., Tadepalli [1989]. EBL shares many features of all the learning methods described in earlier sections. Like concept learning, EBL begins with a positive example of some concept. As in learning by advice taking, the goal is to operationalize some piece of knowledge. And EBL techniques, like the techniques of chunking and macrooperators, are often used to improve the performance of problem-solving engines. The major difference between EBL and other learning methods is that EBL programs are built to take advantage of domain knowledge. Since learning is just another kind of problem solving, it should come as no surprise that there is leverage to be found in knowledge. 17.7 DISCOVERY Learning is the process hy which one entity acquires knowledge. Usually that knowledge is already possessed by sore number of other entities who may serve as teachers. Discovery is a restricted form of learning in which one entity acquires knowledge without the help of a teacher. In this section, we look at three types of automated discovery systems. 17.7.1 AM: Theory-Driven Discovery Discovery is certainly learning. But it is also. perhaps more clearly than other kinds of learning, problemsolving. Suppose that we want to build a program to discover things, for example. in mathematics. We expect that such a program would have to rely heavily on the problem-solving techniques we have discussed. In fact, one such program was written by Lenat [1977: 1982]. It was called AM, and it worked from a few basic concepts of set theory to discover a good deal of standard number theory. 5 Sometimes, there is no one in the