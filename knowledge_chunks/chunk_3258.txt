l. This suggests a binary tree representation similar to linked LISP cons cells. itt PROLOG provides a notation to separate the head and tail, the vertical bar as in IHeadi Taill. This permits one to define the Head of a list as any number of items followed by a j and the list of remaining items. Thus, the list [a,b,c.d] may be written as (a,b,c,d] Ia Rb,c.dl) = Ia.b IIc,d I] a,b,c,dll]J. Matching with lists is accomplished as follows: ? l Headj Taill = ltorn,suejoe.maryl. Head = torn Tail lsue,joe,maryl A number of list manipulation predicates are available in most PROLOG implementations, including append, member, conc (concatenate), add, delete, and so on. One can also define special predicates as needed from the basic definitions included. For example, a definition of the member function member(X,L). where X is an item and L is a list, can be written as a fact and a rule. member(X.IX Ta HD. membej X,l Head j Taj Il) member(X,Tail). Sec. 3.9 Summary The first condition States that X is a member of the list 'L if X is the head of L. Otherwise, the rule States that X is a member. of L if X is a member of the tail of L. Thus, 7memberlc,la,b,c.d I) yea 7rnember(b.(a,lb,cl,dl) . . . no PROLOG has numeric functions and relations, as well as list handling capabilities, which give it some similarity to LISP. In subsequent chapters, we will see examples of some PROLOG programs. For more details on the syntax, predicates, and other features of PROLOG the reader is referred to the two texts, Bratko (1986), and Clocksin and Mellish.(1981). (iher programming languages used in Al include C, object oriented extensions to LIS. such as Flavors, and languages like Smalltalk. The language C has been used by some practictioners in Al because of its popularity and its portability. Object oriented languages, although they have been introduced only recently, have been gaining much popularity. We discuss these languages in Chapter 8. 3.9 SUMMARY In this chapter we introduced LISP, the pr