 an operation required in almost all Al programs. Chapter 10 covers the comparison or matching of data structures and in particular pattern matching, while Chapter II is concerned with the organization of knowledge in memory. Search is one of the operational tasks that characterize Al programs best. Almost every Al program depends on a search procedure to perform its prescribed functions. Problems are typically defined in terms of states, and solutions correspond to goal States. Solving a problem then amounts to searching through the different states until one or more of the goal states are found. In this. chapter we investigate search techniques that will be referred to often in subsequent chapters. 9.1 INTRODUCTION Consider the process of playing a game such as chess. Each board configuration can be thought of as representing a different state of the game. A change of State occurs when one of the players moves a piece. A goal state is any of the possible board configurations corresponding to a checkmate. It has been estimated that the game of chess has more than 10 possible 167 16$ Search and Control Strategies Chap. 9 states. (To see this, just note that there are about 20 alternative moves for each board configuration and more than 1(0 different configurations. Thus, there are more than 20 = I(]Iil * 2' > IOU"). This i4 another example ofthe combinatorial explosion problem. The number of states grows exponentially with the number of basic elements. Winning a game amounts to finding a sequence of states through this maze of possible states that leads to one of the goal states. An ''intelligent" chess playing program certainly would not play the game by exploring all possible moves (it would never finish in our lifetime nor in your distant descendent's lifetimes). Like a human, the program must eliminate many questionable states when playing. But, even with the elimination of numerous states, there is still much searching to be done since finding good moves at eac