. Algorithm terminates, Figure 6.14 AO terminates after exploring a larger search space, but finds an optimal solution. Figure 6.15 AO terminates with the optimal solution on the right with cost 70. It has also found the solution on the left at termination. If the arc marked x were to be 9 instead of ten, it would have reported that solution with cost 69. 6.4 Rule Based Systems Rule based systems or production systems have been used in general to decompose a problem and address it in parts. In its most abstract form, a rule or a production is a statement of the form, Left-Hand Side Right-Hand Side in which the computation flows from the left-hand side to the right-hand side. In the example we saw in the beginning of this chapter, productions were used to capture goal-directed knowledge about the domain. The production, Dinner Pizza Hut Saravana Bhavan says that the goal of having dinner can be reduced either to the goal of eating at Saravana Bhavan or eating at Pizza Hut. The production system was used to break down a given goal into a set of primitive goals that could be solved trivially. Productions or rules can also be used in a forward direction, in a datadriven manner. The production then looks like, Pattern Action where the pattern is in the given database. Thus, a rule based system looks at a part of a state, and triggers some action when a pattern is matched. Usually, the actions are to make some changes in the database describing the state. That is, one in fact achieves a state transition but only by dealing with a part of a state that is characterized by the pattern. For example, one could write a rule to sort an array of numbers as follows: (Pattern ) oe a Figure 6.16 A rule looks at a part of a state and modifies it to result in a new. p intexchange array index i value Wi) array index j i value M Nj modi y 1 value ) modify 2 value N We have used the notation of the language OPS5 (Forgy, 1981), one of the first rule based languages developed at Carnegie M