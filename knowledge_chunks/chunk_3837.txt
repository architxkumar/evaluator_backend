thm for simulated annealing is only slightly different from the simple hill-climbing procedure. The three differences are: The annealing schedule must be maintained. * Moves to worse states may be accepted. * Itis a good idea to maintain, in addition to the current state, the best state found so far. Then, if the final state is worse than that earlier state (because of bad luck in accepting moves to worse states), the earlier state is still available. Algorithm: Simulated Annealing 1. Evaluate the initial state. If it is also a goal state, then return it and quit. Otherwise, continue with the initial state as the current state. 2. Initialize BEST-SO-FAR to the current state. Initialize T according to the annealing schedule. 4. Loop until a solution is found or until there are no new operators left to be applied in the current state. (a) Select an operator that has not yet been applied to the current state and apply it to produce a new state. (b) Evaluate the new state. Compute AE = (value of current) (value of new state) e If the new state is a goal state, then return it and quit. I it is not a goal state but is better than the current state, then make it the current state, Also set BEST-SO-FAR to this new state. If it is not better than the current state, then make it the current state with probability p as defined above. This step is usually implemented by invoking a random number generator to produce a number in the range (0,1). If that number is less than p , then the move is accepted. Otherwise, do nothing. (c) Revise T as necessary according to the annealing schedule. 5. Return BEST-SO-FAR, as the answer. To implement this revised algorithm, it is necessary to select an annealing schedule, which has three components. The first is the initial value to be used for temperature. The second is the criteria that will be used to decide when the temperature of the system should be reduced. The third is the amount by which the temperature will be reduced each time it i