an 5000 km yes 100 km to 5000 km yes yes yes ikm to 100km yes yes yes yes Less than 2 km yes yes yes Observe that it is still not straightforward to use this table, because looking at the original problem, one has to choose from the set of available options and operator that would reduce the largest difference. Selecting a Chennai-Frankfurt flight 2, for example, implies the knowledge that there are no Chennai- Munich flights. Once we manage to decide upon the operator, we are left with two new problems to solve. They are, 1. Given: (at IITM), Desired: (at Chennai airport) 2. Given: (at Frankfurt airport), Desired: (at TUM) One can solve these independently, consulting the operator difference table at each stage. A more concrete example that is easier to implement is the Towers of Hanoi ? problem. This problem also illustrates the utility of being able to order the differences. The domain constitutes of three pegs, or locations, and a tower of N disks on one peg to start with. The disks are all of different diameters, and any disk can be placed only on top of a larger disk or on an empty peg. A move constitutes of transferring a disk from the top of one peg, to another peg where possible. Figure 7.22 depicts a problem with three disks. A B Cc Figure 7.22 The Towers of Hanoi. The task is to move the tower of N (3 in the figure) disks from location peg A to peg C. Only the topmost disk on a peg may be moved, and cannot be placed ona smaller disk. The problem is known to have solutions (plans) that are exponentially long: (2 1) moves for towers with N disks. The Towers of Hanoi problem is very structured and often used to illustrate recursive algorithms (to move a complete tower move all disks, but one recursively to a temporary peg, move the remaining disk to the destination, and move the other disks recursively to the destination). However, if the problem is treated as a planning problem, it poses a challenge because the optimal solution is known to be exponential in