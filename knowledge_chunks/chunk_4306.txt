fficult to get many diverse people to build a single, coherent knowledge base, and sometimes it is impossible because their models of the domain are actually inconsistent. Distributed Problems Some problems are inherently distributed. For example, there may be different data available in each of several distinct physical locations. . Reliability If a problem is distributed across agents on different systems, problem-solving can continue even if one system fails. architecture for distributed reasoning must provide: . Amechanism for ensuring that the activities of the various agents in the system are coordinated so that the overall problem-solving system achieves its goal(s). A communication structure that enables information to be passed back and forth among agents. . Distributed versions of the necessary reasoning techniques. These mechanisms are likely to differ from their monolithic counterparts since they will be presumed to operate on a set of local knowledge bases rather than on a global one that can be assumed to possess a set of global properties (such as consistency). In the rest of this section, we address each of these issues. 16.3.1 Coordination and Cooperation The biggest issue that needs to be faced in the design of any distributed reasoning system is how the actions of the individual agents can be coordinated so that they work together effectively. There are a variety of approaches that can be taken here, including the following: One agent is in charge. That master agent makes a plan and distributes pieces of the plan to other slave agents, who then do as they are told and report back their results. They may also communicate with other slave agents if necessary to accomplish their goals. One agent is in charge and that agent decomposes the problem into subproblems, but then negotiation occurs to decide what agents wil] take responsibility for which subtasks. No one agent is in charge, although there is a single shared goal among all the agents. They mu