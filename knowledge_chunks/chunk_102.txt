he node from the goal node. That is, it estimates how close to the goal the current state is Euclidean distance: - 2 2 A) Goat Xn) O'Goat Yn) Note that this function gives an optimistic estimate of distance. The actual distance is likely to be more than the straight line distance. Thus, the Euclidean distance is lower bound on the actual distance. Another distance measure we could use is the Manhattan distance or the city block distance, which is given below: Manhattan distance: h(n) XGoat Xn! Goal Yl This estimates the distance assuming that the edges form a grid, as the streets do in most of Manhattan. Observe that at this point, we are not really interested in knowing the distance accurately; though later we will encounter algorithms that will benefit from such accuracy. At this moment it suffices if the heuristic function can reliably say as to which of the candidates is likely to be closer to the goal. Next, consider the Eight puzzle. The following diagram shows three choices faced by a search algorithm. The choices in the given state are R (move a tile right), U (up) and L (left). Let us call the corresponding states too R, Uand L. One simple heuristic function could be simply to count the number of tiles out of place. Let this function be called h;. The values for the three choices are: h,(R) (Only 4, 5 and 7 are in place. The rest are in a wrong 6 place.) h,(U) (Again only 4, 5 and 7 are in their final place, but also the 5 blank tile.) h,(L) (2,4,5 and 7 are in place.) 5 Thus, according to h,, the best move is either U or L. Let us look at another heuristic function hz that adds up the Manhattan distance of each tile from its destination. The values, counting from the blank tile, and then for tile-1 to tile-8, are: ho(R) (2 1 14 3 04 04 2 0 1) 10 ho(U) (0 1 1 3 040 3 0 42) 10 ho L) (2 1 04 3 0 04 3 4 0 1) 10 If one were to think of the heuristic values as obtained from solving a relaxed version of the Eight-puzzle then the first one can be thought of as a p