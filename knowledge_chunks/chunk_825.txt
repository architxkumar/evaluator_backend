irds but from Flying-creatures . We will explore such Description Logics later in this chapter. Meanwhile, frame systems can be used to represent information rich in abstraction and aggregation. In addition to relations giving rise to the two hierarchies, one can have other relations between frames that are constituents of a larger frame. Frame systems can also be used to compose complex event patterns. Consider the task of organizing a birthday party for a child, and the knowledge needed for doing so. The entire activity can be organized around a Birthday-Party frame that captures a typical birthday party (see Figure 14.6). The frame says that a Birthday-party is a Party, and by inheritance has food and costs money. In addition, the Birthday-party must have a B day-kid for whom the party is organized and who is a Person. The frame has a Date which is the birth date of the B day-kid, which can be obtained from the instance when creating an instance of the Birthday-Party. A Birthday-Party must have a slot called Guests whose filler is a set (or list) of Guests. Guests are also Persons, and they must be Friends of B day-kid. The name of the guests can be obtained from the names of friends of the instance of B day-kid. Finally, a Birthday-Party has activities that happens before, during, and after the party, represented by the three corresponding slots. The first of the three Preparation, must begin 10 days before the birthday. It has tasks like choosing the guest list, sending out invites, ordering the food and the cake, and choosing games and music. The Preparation frame is followed by the PartyEvents frame that describes the happenings during the party, starting with receiving guests and ending with sending them off with return gifts. All this is followed by After-the-party frame that describes the cleaning up activity and the excitement of opening the presents. There may be activity the day after as well, for example sending thank you notes. 1 Figure 14.6 below sho