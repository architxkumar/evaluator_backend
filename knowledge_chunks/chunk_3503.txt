on language is read the same as rewrite rules. Thus, it specifies that a transition network is composed of a list of arc sets, where each arc set is in turn a list with first element bein L a state name and the remaining elements being arcs which emanate from that state An arc can be any of the forms CAT. JUMP. PUSH, TEST. WORD or POP. Vor example. as noted earlier, the TEST arc corresponds to an arbitrary test which determines whether the arc is to be traversed or not. Note that a sequence of actions is associated with the arc tests. These actions are executed during the arc traversals. They are used to build pieces of structures such as a tree or a list. The te,minal action of any arc specifies the state to which control is passed to complete the transition. 21 Sec. 12.4 Basic Parsing Techniques <transition net>-. (<arc set><arc set>) <arc set> . (<state><ar C>9 <arc>-. (CAT <category name><test><a Cti Ofl><tarm act>) (PUSH <state><te St><a Cti Ofl><term act>( (1ST (arbitrary label> <test><o Cti Ofl> <term act>)) (POP <form><test>) <action> (SETR <register><form>)I (SENOR <re9ister><f Orm>)I (LIFTR <register><f Orm>) <term act> -. (TO <state>) (JUMP <state>) <form> . (GETR <register>)I ( I (GETF <feature>) (BUILDQ <fragment><register>)I (LIST <form>)I (APPEND <torrn><form>)) (QUOTE <arbitrary structure>) Figure 12.10 A specification language for ATNS. Among other things, an action can be any of the three function forms SETR. SENDR, and LIFTR which cause the indicated register values to be Set to the value of form. Terminal actions can be either TO or JUMP where TO requires that the input sentence pointer should be advanced, and JUMP requires that the pointer remain fixed and the input word continue to be scanned. Finally, a construction form can be any of the seven alternatives in the bottom group of Figure 12. 10, including the symbol @ which is a terminal symbol placeholder for form. The function SETR causes the contents of the indicated registers to be set equa