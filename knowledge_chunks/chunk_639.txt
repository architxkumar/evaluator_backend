 act intelligently, interacting with others and the surroundings, we do so with the aid of lots of knowledge of different kinds. We have factual knowledge (so popular amongst quiz masters); we make inferences, sometime erroneous, about what we do not directly know; we have knowledge of how to do things; how processes change the world. Over different domains, we have knowledge at different levels of detail and fidelity. We do so with all this knowledge in one place commonly shared for all the applications in our minds. It will still be a while before our artificial intelligence systems can do the same. But we are on our way. We are exploring the different forms of knowledge representation and schemes to reason with them. We are exploring the development of layered architectures, where the lower levels will provide meaning and functionality to higher levels. This process has been on since programming languages have moved up the ladder of abstraction. While a human looks at a city map and sees a path to his destination, we may build a program for which a search function at a lower level does the same. And then it could carry on with whatever it was doing at the higher level. To the higher level, it should not matter how the lower level does compute the answer. Given an input (problem), the output (solution) may be found either by search or from a look-up table possibly embedded in an algorithm. Imagine the game of tic-tac-toe (also known as noughts and crosses). One could play it either way. One player may mentally project moves into the future and make a choice. Another may have a look-up table for each position. A third may have some general heuristics. To an opponent, the distinction may not be obvious. In fact, the way humans play chess is decidedly different from the way computers do, and yet they manage to have an interaction with each other. The interaction is functional in nature. We consult websites like google.com and dictionary.com, and do not care how they 