m called SEE which examined how surfaces from the same object were linked together. The geometric relationships between different types of line junctions (vertices) helped to determine the object types, Guzman identified eight commonly occurring edge junctions for his three-dimensional blocks world objects. The junctions were used by heuristic rules in his program to classify the different object by type (Figure 14.19). Huffman and Cloes. working independently, extended this work by developing a line labeling scheme which systematized the classification of polyhedral objects. Eheim 'scheme was used to classify edges as either concave. convex, or occluding. Concave edges are produced by two adjacent touching surfaces which produce a concave (less than 180 depth change. Conversely, convex edges produce a convexly 0). and an occluding edge outlines a surface viewed depth change (greater than 180 that obstructs other objects. To label a concave edge. a minus sign is used. Convex edgs are labeled with a plus sign. and a right or left arrow is used to label the occluding or boundary edges. By restricting vertices to be the intersection of three object faces (trihedral vertices), it is possible to reduce the number of basic vertex types to only tour: the L. the T. the Fork. and the Arrow (Figure 14.20). Different label combinations assigned to these tour types then assist in the classification and identification of objects. When a three-dimensional object is viewed from all possible positions. the four junction types. togcther with the valid edge labels, give rise to eighteen different permissible junction configurations as depicted in Figure 14.20. From a dictionary of these valid junction types, a program can classify objects by the sequence of bounding vertices which describe it. Impossible object configurations such as the one illustrated in Figure 14.21 can also be detected. Geometric constraints, together with a consiste Plabeling scheme, can greatly simplify the obj