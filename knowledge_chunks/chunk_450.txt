are specified in the relation. 9.4.3 Propagation Inferencing Relations Given a CSP (X, D, C), one can view the constraint propagation process as inferencing new constraints to get a new equivalent CSP (X, D, C ) where C' C U NewConstraints. Given that there are n variables in the CSP, we can have one relation of arity n, n relations of arity (n 1), "Co relations of arity (n 1), and so on with rn relations of arity 1. One can say that the task of solving the CSP is to unearth the relation on n variables, often referred to as R(p), the solution relation. Only some of these relations may be specified in the set C of constraints, and that too only partially, containing more tuples in the relation than actually allowed. When they are not specified explicitly, one can assume them to be universal relations. One can view the process of consistency enforcement as a process of tightening the constraints of appropriate arity, including arity 1. If at any time during the propagation process, any relation becomes empty, it means that there is no solution and the CSP is an inconsistent CSP. When a relation is implicit then constraint propagation may still reduce tuples from its domain. One has to make that relation explicit now, and hence we can view the propagation process as having inferred a new relation. Enforcing node consistency and arc consistency can be seen as introducing new unary constraints that restrict the domains of certain variables. Traditionally, we see this as reducing the domain of a variable, say D,, but we can also view this as having inferred a relation R, on that variable. Likewise, enforcing path consistency, or the generalized arc consistency (i.e. 3-consistency) can be viewed as inferring a new binary relation. Consider the following binary CSP on three variables. Problem CSP7 (X, D, C) ( x4, Xa, Xa , fr b , fr, b , fr, BY , (X4, Xa , x1 X2), ( X2, Xa , X2 X3) Enforcing path consistency implies creating a new relation R13 with scope Xx4, X3 , Ris (r, 1)