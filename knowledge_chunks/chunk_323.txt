ion, and move the other disks recursively to the destination). However, if the problem is treated as a planning problem, it poses a challenge because the optimal solution is known to be exponential in length. For a problem with N disks, the number of moves in the solution is (2" 1). Combined with the fact that in each intermediate state, either two or three moves are possible, one can see that the search space is very large. The MEA strategy works well with the ordering information that the largest disks are hardest to move since they may have more disks on top of them. Then, if the differences measured are in terms of differences in location of each disk, the differences for the largest disks must be reduced first. In Figure 7.2, three disks have to be moved from tower A to tower C. The differences in order of importance are, Dg: disk d3 is on peg A and not on peg C Do: disk dz is on peg A and not on peg C D4: disk d, is on peg A and not on peg C Having chosen the difference D3 to reduce, GPS creates a goal G3 of reducing that difference. This is because the operator to reduce the difference may not be applicable in the given state. For example, the operator to reduce D3 is to move disk d3 from A to C, but that can be only done if disk d3 is clear, and peg C is empty (because d3 is the largest disk; otherwise the condition would be that the existing disk on peg C is larger). These conditions would be true if disks d, and dz were not on peg A, and also not on peg C. Thus, GPS would recursively create a new set of differences as follows, Dg: disk dz is on peg A and not on peg B D341: disk d, is on peg A and not on peg B And work towards reducing D32. Continuing in the same manner, it would create a new goal to move d2 from A to B, and then another to move d, from A to C. This is a move it can make, and it will do so going to a new state S, in which d, is on C. It can now move dp from peg A to peg B, thus achieving the goal of reducing D3. Now it looks at the differen