mple, formal programmtnglanguages are typically based on context-free languages. Consequently, much of the work in human language understanding has been related to these two types. This is understandable since type 0 grammars are too general to be of much practical use, and type I grammars are not that well understood yet. Structural Representations It is convenient to represent sentences as a tree or graph to help expose the structure of the constituent parts. For example, the sentence "The boy ate a popsicle" can be represented as the tree structure depicted in Figure 12.1. Such structures are also called phrase markers because they help to mark or identify the phrase structures in a sentence. The root node of the tree in Figure 12.1 corresponds to the whole sentence S. and the constituent parts of S are subtrees. For this example, the left subtree is a noun phrase, and the right subtree a verb phrase. The leaf or terminal nodes contain the terminal symbols from v1. A tree structure such as the above represents a large number of English sentences. It also represents a large class of ill-formed strings that are nonsentences like 'The popsicle flew a tree." This satisfies the above structure, but has no meaning. For purposes of computation, a tree must be represented as a record, a list or similar data structure. We saw in earlier chapters that a list can always be used to represent a tree structure. For example, the tree in Figure 12.1 could be represented as the list (S (NP ((ART the) (N boy)) (VP (V ate) (NP (ART a) (N popsicle))))) NP VP I ART N he boy at. ART N Figure 12.1 A phrase marker or a popicte Syntactic tree. Sec. 123 Grammars and Languages 235 A more extensive English grammar than the one given above can be obtained with the Wition of other constituents such as prepositional phrases PP. adjectives ADJ, determiners DEl. adverbs ADV, auxiliary verbs AUX. and so on. Additional rewrite rules permitting the use of these constituents could include some of th