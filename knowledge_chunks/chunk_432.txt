rresponding variable. A unary constraint, by definition, selects a subset of a domain. For example, if the domain D, 1, 2, 3, 4, 5 and there is a constraint C, ( x , x 4 ) ina CSP then for that CSP the values 4 and 5 can be removed from D, because they can never be part of a solution. The algorithm for achieving node consistency inspects all values in all domains to check that they are included in the corresponding constraint. It removes values from the domain of a variable if that value is not found in the extension of the relation for the corresponding unary constraint. One must remember that the absence of an explicit constraint is equivalent to a universal constraint that says that all values are allowed. The algorithm NodeConsistency is given in Figure 9.4. NodeConsistency(X, D, C) 1 for each xEeXx 2 for each vE D, 3 if v R, where C, ( x , R,) 4 then remove wv from D, S return (X, D, C) FIGURE 9.4 The algorithm NodeConsistency takes as input a CSP and returns an equivalent node consistent CSP. 9.2.2 Arc Consistency Arc Consistency is concerned with finding consistent values for pairs of variables. In the constraint graph, every pair of variables x and y that participate in some constraint are linked by an edge (x, y). For a binary CSP every edge represents a constraint R,y. Let variable x have domain Dy, and variable y have domain Dy. An edge (x, y) in the constraint graph is said to be arc consistent if for every value v,in D,, there exists a value vy in Dy such that v, v, Ryy, and vice versa for v, and vy. We say that vysupports v,, and vice versa. One can depict the relation R,y with a matching diagram in which edges connect values from the domains D, and Dy (Dechter, 2003). In an arc consistent edge (x, y) every value in each domain is connected to some value in the other domain in the matching diagram. Figure 9.5 shows an example of a matching diagram where the edge (x, y) is not arc consistent on the left. One must keep in mind that the edge in the constr