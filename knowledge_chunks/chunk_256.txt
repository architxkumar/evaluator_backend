omponents that must be closer together and then laying the devices out in the right order. 6. Do the cabling, specifying what cables are to be used to connect devices and then determining the distances between pairs of components. Thus, XCON fills in the low-level details of the above algorithm by selecting and firing specific rules. And since the entire implementation is in OPS5, the sequencing of the high-level tasks is controlled by activating the relevant contexts in the given order, somewhat like passing a baton in a relay race. McDermott said that the justification of such an approach of creating and working within specific contexts was that this was how the human experts approached the task. 6.6 Rule Based Expert Systems The idea of expert systems that caught on, following the development of some of the systems described above, was that domain experts could transfer their knowledge to systems in the form of rules, and a general purpose inference engine would string together rule firings to some problems using this knowledge. It led to the development of programming languages like OPSS5 (see also (Brownston et al., 1985)) which facilitated the expression of such rules. Traditionally, an expert system is a rule based system and has the following components. 1. A Set or Rules The set of rules are like the long-term memory (LTM) of a problem solver (Newell, 1973). Rules are basically a memory of associations between patterns and actions. When some elements of data in the current problem match a pattern in a rule then that rule is ready to fire or execute. 2. A Working Memory (WM) The Working Memory of a problem solver is like its Short-Term Memory (STM). It stores the data related to the current problem. The working memory is made up of Working Memory Elements (WMEs). Each WME carries a time stamp marking when it was created, usually implicitly in sequence numbers assigned to them. 3. The Inference Engine The inference engine is a constant feature in all systems.