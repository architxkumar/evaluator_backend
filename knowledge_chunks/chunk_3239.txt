e syntax for a function call is (function-name argi arg2 .1 where any number of arguments in\' be used. When a function is called, the arguments - are -first evaluated front to right (unless within quotation marks) and then the function is executed using the evaluated argument values. Complete the list manipulation examples below. . 24 LISP and Other Al Programming Languages Chap. 3 -(car (cdr '(a b Cd))) ;extracts the second element B ->.)cdr car '((a b) c do extracts the list (b) (8) ->)cons 'one (two three)) inserts the element one in (ONE TWO THREE) ;the list (two three) ->(cons (car '(a b c) ;lists may continue on (cdr (a b c))) ;several lines, but parens (ABC) :must always balance! )list '(a b) 'c 'dl) ;makes a list of the top ((A B) C 0) ;elements Sequences of car and cdr functions may be abbreviated by concatenating the letter a for car and d for cdr within the letters c, and r. For example, to extract c from the list (a (b c) d) we write cadadr to abbreviate the sequence car cdr car cdr. Thus ->(cadadr '(a lb c) d)) C Other useful list manipulation functions are append, last, m1i' .. and reverse. Append merges arguments of one or more lists into a single list. Last takes one argument, a list, and returns a list containing the last element. Member takes two arguments, the second of which must be a list. If the first argument is a member of the second one, the remainder of the seco'a list is returned beginning with the member element. Reverse takes a list as its argument and returns a list with the top elements in reverse order from the input list. Table 3.3 summarizes these operations. TABLE 3.3 , ATl ONAL LIST MANIPULATION FUNCTIONS Value Function call returned Remarks (append '(a) '(b C)) (a be) merges two or more lists into a single list. (last 'Ia be di) (d) returns a list containing the last element (member 'b '(a b d)) lb dl returns remainder of second a,- gument list starting with element matching first argument. (resersc '(a (b C) d)) (d (b C) a) ret