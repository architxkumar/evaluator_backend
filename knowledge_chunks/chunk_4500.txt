ainty is a critical problem. Even with the vision techniques of Section 21.2.1, a robot can never be sure of the precise location of the peg or the arm. Therefore it would be a mistake to plan a grasp motion in which the gripper is spread only wide enough to permit the peg to pass, as in Fig. 21.11 (a). A better strategy is to open the gripper wide, then close gradually as the gripper gets near the peg. as in Fig. 21.11(b). That way, if the peg tums out to be located some small distance away from where we thought it was, the grasp will still succeed. Although this'strategy depends less on precise vision, { 1 it requires some tactile sensitivity in order to terminate N 4 the grasp. Unless we take special care in designing grasping motions, uncertainty can lead to disasters. For example, should the left side of the gripper touch the peg one second before the right side does, the peg may fall, thus foiling the grasp. Brost [1988] and | ) Mason et al. [1988] give robust algorithms for grasping a wide variety of objects. After the peg is stably grasped, the robot must place it in the hole. This subtask resembles the pathplanning problem, although it is complicated by the fact that moving the peg through 3-D space requires careful orchestration of the arm s joints. Also, we must seriously consider the problems introduced by uncertainty. Figure 21.12(a) shows a naive strategy for placing the peg. Failure will result from even a slight positioning error, because the peg will jam flatly on the outer surface. A better strategy is shown in Fig. 21.12(b). We slide the peg along the surface, applying downward pressure so that the peg enters the hole at an angle. After this happens, we straighten the peg gradually and push it down into the hole. Fig. 21.11 Naive and Clever Strategies for Grasping Perception and Action 444 rea L_ (a) () Fig. 21.12 Native and Clever Strategies for Placement This type of motion, which reacts to forces generated by the world, is called compliant moti