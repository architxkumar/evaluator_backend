 PInt Oiry We Fih Grir.s Fruit Vegeobl Beef Chicken /N Citrus Noncitrus Lenon Orsnge Grapefruit Figure 9.3 A c12, hierarchy of foods. Sec. 8.4 Simulation Example Using an OOS Program 155 Obj.ct Magnitude Class Random Collection /\ /\ Char Nt,nb, Se* Keyed OIletior, Sequenceable Dictionary o IIecti On / I N /\ Arayed collection List File Figure 8.4 Partial htrrchy of prcdc Byte array Array Strong fined OOS da,cs. Polymorphism is the capability for different objects to respond to the same message protocols but exhibit their own unique behaviors in response. For example. a message containing the selector move Forward could invoke the forward movement of a ship as well as advancing a piece in a game such as checkers. Both classes use the same message template but respond differently. The only requirement is that the message protocol for the two classes be implemented as required for the given class. 8.4 SIMULATION EXAMPLE USING AN OOS PROGRAM In this section, we present a simple example of an OOS program to demonstrate some of the features defined above. The example is a program to simulate the seaport operations described in Section 8.2. Before we begin however., we define some additional syntax and operations used in an OOS. An OOS will have most of the basic programming constructs of a procedural language such as Pascal. including arithmetic and string manipulation operations, assignment and conditional statements, logical expressions. iteration. and so on. A few examples will help to illustrate some of the basic constructs and syn actical conventions. A period is used as a statement separator, not as a terminator. -2. A block object is a sequence of OOS statements (messages) enclosed within square brackets. A block is like an in-line procedure that, when evaluated, returns the last value executed within the block. Blocks are instances of the Block class that execute when sent the message value, value: or value:value:. depending on whether the block has zero, one, or