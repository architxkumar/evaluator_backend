2 GENETIC ALGORITHMS (GAs) Genetic Algorithms are based on the theory of natural selection and work on generating a set of random solutions and making them compete in an arena where only the fittest survive. Each solution in the set is equivalent to a chromosome. A set of such solutions (chromosomes) forms a population. The algorithm then uses three basic genetic operators viz. (a) Reproduction {b) Crossover and 4c} Mutation together with a fitness function to evolve a new population or the next generation. Starting from a random set of solutions the algorithm uses these operators and the fitness function to guide its search for the optimal solution, It is thus based on a guided random search mechanism. The fitness function gauges how good the solution in question is and provides a measure to its adaptability or survivability. The genetic operators copy the mechanisms based on the principles of human evolution. The best and quickest way of explaining the working of the algorithm is to describe how they can be used to solve problems. In this chapter we will work on three examples that highlight how optimization and learning can be achieved using GAs and then talk about its significance and theoretical grounding. 23.2.1 Problem-I Optimization: Job-Shop Scheduling The job-shop scheduling problem comprises a series of zones that are capable of manufacturing products. The objective is to find out the type of schedule that optimizes the entire chain. This could be done for instance by manufacturing the right number of products, reducing the quantity or cost of production or idle time, etc. The probl m as such does not have an elegant mathematical description. The basic aim here is not to go in depth of the job-shop problem but to understand the working of a GA. We tbus simplify and redefine the problem to suit our needs. We assume that there are three manufacturing units M,, M, and M,, each of which is capable of manufacturing a different product. A manufacturing schedule