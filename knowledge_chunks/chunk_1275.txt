hese two are the XOR function represented by ( 0, 0 , 1), ( 0, 1 , 1), ( 1, O , 1), ( 1, 1 , 0) and its negation the EQ or equivalence function represented by ( 0, O , 1), ( 0, 1 , 0), ( 1, O , 0), ( 1, 1 , 1) . The reader is encouraged to plot these two functions and verify that a straight line cannot be drawn to separate the two target values. There are 256 possible Boolean functions of three variables and 65536 functions of four variables. Of these, only 104 and 1882 respectively are linearly separable (Yegnanarayana, 1999). Figure 18.25 shows two attempts to find a line that would isolate the two shaded circles. Both attempts are unsuccessful. The linear discriminator on the left labelled (a) classifies 0, 1 , 1, O and 1, 1 as 1. This is in fact the Boolean OR function. The Perceptron on the right, labelled (b), classifies 0, O , 0, 1 and 1, 0 as 1. This represents the Boolean NAND function. 0 Cy laa ad . , 0 x . FIGURE 18.24 The shaded circle represents an output 1 (or true) and the three empty circles represent the output 0 (or false). The straight line defined by x1 Xp (1 ) O is a separator. The region pointed to by the arrow corresponds to x; Xp (1 ) 0, signifying the Boolean AND function. If we had used (1 ) (xq X2) 0, then the arrow for (1 ) (x, x2) 0 would point to the other class (the NAND function). (a) (b) FIGURE 18.25 Trying to capture the XOR function. The Perceptron line on the left classifies 0, 1 , 1, 0 and 1, 1 as 1, while the one on the right classifies 0, 0 , 0, 1 and 1, 0 as 1. They both agree on 0, 1 and 1, 0 which would be the XOR function. Both the discriminators in the figure are unable to capture the XOR function. But when one looks at the set of pairs, they both agree on, that is 0, 1 and 1, 0 , one recognizes the XOR function. Can we employ both the Perceptrons to work together and represent the XOR function? That would be possible if we could rig up a system in which a pair is classified as 1, only if there is consensus amongst the two