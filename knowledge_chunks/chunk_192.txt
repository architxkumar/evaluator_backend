ake a bad move too, and get off local optima. The probability also depends upon what stage the search is in. In the initial stages, SA is biased towards exploration, and the probability is high, irrespective of the value gain or loss, but it gradually settles down for exploitation. Towards the end, the chances of it being in the vicinity of the solution is higher, and hopefully the heuristic function will then do the job, and guide it to the solution. Genetic Algorithms aim to mimic the way nature does design. The genetic makeup of each creature in the real (and artificial) world determines how it will grow, and act in the world. Viewing each creature as a program written with genes, nature has developed a mechanism of allowing creatures to mate and mix genes. The ones who get to do so are the strongest, in terms of survival abilities?2. Nature allows the best (as determined by survival) designs to reproduce more. The process of reproduction mixes genes of the two parents. This may produce an offspring better than both, if it combines successful features from both. GAs attempt to mimic this selection process by allowing components of solutions to be inherited as a mix from two parents, and selecting the good solutions based on an explicit, fitness function. The general idea is that such churning of genes in a population of solutions will result in fitter populations, just as it has resulted in fitter species in nature. This happens when random mixing of genes from fit parents produce a fitter offspring. In this case, the offspring will get more chances to reproduce and pass on its genes. The system improves from generation to generation, passing on information (of the solution design) encoded in the genetic makeup. None of the methods for finding optimal solutions that we have seen are foolproof. None work in all situations. One can often try combinations of algorithms to develop hybrid algorithms. Some of the ideas of combining algorithms are as follows. One could 