for expansion alternately from the lists. When successors are generated, they are evaluated by the different functions and inserted into the respective lists. The idea here is that different heuristic functions perform better in different regions of the state space. This variation of Fast Downward uses two heuristic functions, the other one being the heuristic used by FF. 3. Focused Iterative Broadening Search Iterative broadening search introduced by Ginsberg and Harvey (1992) is an approach in which a search algorithm only considers b options at each state, increasing the value of b iteratively till a solution is found. In the variation used in Fast Downward, the algorithm focuses on one goal at a time, restricting its attention to operators needed for that goal. This is called the reach-one-goal approach. In addition, the method forbids certain operators that might undo certain goals. However, as is well known, it is not possible to serialize a set of goals always, and therefore the strategy becomes incomplete. As described in (Helmert, 2006), Fast Downward performs better than FF in many domains. The interested reader is referred to (Helmert, 2004; 2006; 2008) for a more detailed study of the approach to using causal graphs. 10.5 Durative Actions The planning operators specified in the simplest domains (STRIPS PDDL ADL) do not deal with a notion of time. There is only a sequencing of actions. Actions can happen in parallel, but then they happen together, at the same instant. The real world actions that are being modelled have durations, but the planner treats them as being instantaneous. The language PDDL2.1 (Fox and Long, 2003) introduces the notion of duration for actions. The duration could be static, or determined dynamically during the course of planning. Durative actions invoke the notion of time, and planning with durative actions is called temporal planning. Consider a planning task in which one wants to cook dinner. Let us say that the following plan to