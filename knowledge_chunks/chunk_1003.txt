ring from a diverse collection of unstructured documents. There are many other interesting applications of NLP systems, which we review in detail in Section 16.3. Understanding natural language is challenging. It may be illustrative here to compare a natural language like English against a programming language like C. Consider a news report headline: Stolen Painting Found by Tree ! Our first observation is that the heading of the news report is not a well-formed English sentence, yet it makes perfect sense to an average reader. Ideally, an NLP system should be robust to such variations. In contrast, a C program with statements that do not conform to the underlying grammar will be rejected by a compiler. Ill-formed constructs are typical in our conversations (A: Looks nice, few typos though , B: Doesn't matter ), and more recently in SMS messages ( C u b4 3 ). Secondly, an NLU system must be able to effectively handle ambiguity. The news headline above has two possible interpretations, though an average reader has no trouble favouring one over the other. For us, it appears obvious that a tree cannot go around searching for a stolen painting. Programming machines to do the obvious, however, turns out to be challenging. In contrast to natural language texts, a computer program typically has a single unambiguous representation, or else a machine would have difficulty executing it. Thirdly, unlike systems that process and execute programs, understanding natural language often needs recourse to a body of common sense and background knowledge. Let us consider the following example: Shruti ordered a pizza. She left a tip before leaving the restaurant. To understand the above sentences, the reader must have knowledge of what people typically do when they visit restaurants (see Section 14.5). Similarly, one needs to have knowledge of how a cricket match is played, in order to be able to make sense of a news reporting how Sachin Tendulkar went on to score a century in a World 