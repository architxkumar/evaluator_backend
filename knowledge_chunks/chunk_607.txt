such constraints in CA P is done using the notion of Compatibilities. Compatibilities allow the expression of constraints in the form of rules. For example, if a robot arm has to be tucked in while it is moving, then if Holds(LocationRoboty, t,, tz, Going(X, Y)) is in the plan, then Hold(Arm,, ts, t4, Tuckedin) should also be in the plan along with the constraints t, t, and tp t4. We express the temporal constraints with Allen s interval algebra described earlier. This constraint can be combined with the constraints that the Going value must be met-by and meets two At value intervals. The relations between different intervals are captured in Configurations. The constraints described here could be expressed as a compatibility rule shown below, Head: Holds(LocationRobot,, Sg, g, Going(X, Y)) Parameter Constraints: sg travelTime(X, Y) eg Disjunction: Configuration Rule: Configuration Interval: met-by Holds(Loe, Sq, gy, At(S)), S X, Loc LocationRobot, Configuration Interval: meets Holds(Loe, Sq, g2, At(D)), D Y, Loc LocationRobotr, Configuration Interval: contains Holds(Arm, S , , TuckedIn), S X, Loc LocationRobot, The above example illustrates the representation of different plan segments and the relations between them. The main interval is described in the Head field. The Parameter Constraints capture the constraints that are local to the main interval. The Disjunction field identifies a set of Configuration Rules , one or more of which have to be true in the final plan. Each Configuration rule is a conjunction of conditions. The relations can be depicted as a network as shown in Figure 10.31. Robot Arm State Tuckedin during meets Robot Location AX(S) Going(X, ) st S X tena start duration bD Y FIGURE 10.31 The Compatibility of the Going(X, Y) interval. It must be met-by an At(start) interval, meet an At(Destination) interval, and must be during the Tuckedin interval for its arm. The relations between intervals can be seen as constraints between the nodes of a network.