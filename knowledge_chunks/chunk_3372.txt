ame language include (fget i-name slot-name facet-name) ;returns data from ;specified location (fslots f-name) ;returns names of ;slots (ifacets f-name slot-name) ;returns names of ;facets (fput f-name slot-name facet-name) ;adds data to a ;specified location (fremove f-name slot-name facet-name) ;removes data from ;specified location everal frame languages have now been developed to aid in building framebased ;ystems. They include the Frame Representation Language (FRL) (Bobrow et al.. 1977). Knowledge Representation Language (KRL), which served as a base language for a scheduling system called NUDGE (Goldstein et al.. 1977) and KLONE (Brachman, 1978). Implementation of frame Structures One way to implement frames is with property lists. An atom is used as the frame name and slots are given as properties. Facets and values within slots become lists of lists for the slot property. For example. to represent a train frame we define the following putprop. )putprop 'train ((type (VALUE passenger)) (class (VALUE first second sleeper)) (food (restaurant (VALUE hot-meals)) (fast-food (VALUE cold snacks))) land-transport) Another way to implement frames is with an association list (an a-list), that is. a list of sublists where each ,uhlist contains a key and one or more corresponding values. The same train frame w3uld be represented using an a-list as (setq train '( (AKO land-transport) (type (VALUE passenger)) (class(VALUE first second sleeper)) (food (restaurant (VALUE hot-meals)) (fast-food (VALUE cold snacks)))) 140 Structured Knowledge: Graphs. Frames, and Related Structures Chap. 7 It is also possible to represent frame-like structures using object-oriented programming extensions to LISP languages such as FLAVORS (described in Chapter 8). 7.4 CONCEPTUAL DEPENDENCIES AND SCRIPTS Scripts are another structured representation scheme introduced by Roger Schank (1977). They are used to represent sequences of commonly occurring events. They were originally developed to capt