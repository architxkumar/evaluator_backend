e representations, we have no choice but to represent the fact using the nonprimitive relation cousin. The other way to solve this problem is to change our primitives. We could use the set: parent, child, sibling, male, and female. Then the fact that Mary is Sue s cousin could be represented as Mary = child(sibling(parent(Sue))} But now the primitives incorporate some generalizations that may or may not be appropriate. The main point to be learned from this example is that even in very simple domains, the correct set of primitives is not obvious. In less well-structured domains, even more problems arise. For example, given just the fact John broke the window. a program would not be able to decide if John s actions consisted of the primitive sequence: 1. Pick up a hard object. 2. Hurl the object through the window. or the sequence: 1. Pick up a hard object. 2. Hold onto the object while causing it to crash into the window. or the single action: 1. Cause hand (or foot) to move fast and crash into the window. or the single action: 1. Shut the window so hard that the glass breaks. 92 Artificial Intelligence As these examples have shown, the problem of choosing the correct granularity of epresentation for a particular body of knowledge is not easy. Clearly, the lower the level we choose, the less inference required to reason with it in some cases, but the more conference required to create the representation from English and the more room it takes to store, since many inferences will be represented many times. The answer for any particular tak domain must come to a large extent from the domain itself to what use is the knowledge to be put? One way of looking at the question of whether there exists a good set of low-level primitives is that it is a question of the existence of a unique representation. Does there exist a single, canonical way in which large bodies of knowledge can be represented independently of how they were originally stated? Another, closely related, un