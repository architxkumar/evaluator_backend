 methods for acquiring this knowledge automatically. Here-are two possibilities: 1. Machine Learning--In Chapter 17, we discuss some techniques for automated learning. However, current techniques permit only modest extensions of a program s knowledge. In order for a system to learn a great deal, it must already know a great deal. In particular, systems with a lot of knowledge will be able to employ powerful analogical reasoning. 2. Natural Language Understanding Humans extend their own knowledge by reading books and talking with other humans. Since we now have on-line versions of encyclopedias and dictionaries, why not feed these texts into an AI program and have it assimilate all the information automatically? Although there are many techniques for building language understanding systems (see Chapter 15), these methods are themselves very knowledge-intensive. For example, when we hear the sentence John went to the bank and withdrew $50. we easily decide that bank means a financial institution, and not a river bank. To do this, we apply fairly deep knowledge about what a financial institution is, what it means to withdraw money, etc. Unfortunately, for a program to assimilate the knowledge contained in an encyclopedia, that program must already know quite a bit about the world. The approach taken by CYC is to hand-code (what its designers consider to be) the ten million or so facts that make up commonsense knowledge. It may then be possible to bootstrap into more automatic methods. Strong Slot-and-Filler Structures 217 Ace RC CO NAN LER NONE 10.3.2 CYCL CYC s knowledge is encoded in a representation language called CYCL. CYCL is a frame-based system that incorporates most of the techniques described in Chapter 9 (multiple inheritance, slots as full-fledged objects, transfers-through, mutually-disjoint-with, etc). CYCL generalizes the notion of inheritance so that properties can be inherited along any link, not just isa and instance. Consider the two statements: Mary