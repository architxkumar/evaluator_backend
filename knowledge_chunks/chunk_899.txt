d the concepts and construct the concept lattice at the same time. The input to the procedure is the context K. The task is both to discover the formal concepts and structure them into a lattice. We have mentioned that concepts can be found by inspecting all subsets of G or M, but that would be a computationally expensive brute approach. Many approaches to building concept lattices have been developed (Waltchev and Missouri, 2001) (Baixeries et al., 2009). One approach starts with a single object from the context and incrementally adds more objects one by one and carries out structural updates to the lattice (Godin et al., 1995). We look at another approach in which the algorithm begins with the top level concepts and recursively finds its successors by adding a property to the intension of the current concept (Choi, 2006). Let nbr(m) be a function that returns the objects that have the property m. This can be done by scanning the column in K labelled m. Let C be a concept in (G,M,R). Then, int(C) is the set of properties in C. Let m be a property in M that does not belong to int(C). Let E,, be the set of objects defined as, Em ext(C) N nbr(m) If this is not empty, it means that there is at least one object that is part of the concept C and has property m. Furthermore, it is the case that Ep is closed. That is, obj(att(Em)) Em The proof is as follows. By definition, E,, S obj(att(E,,)). To show the reverse obj(att(E,,)) S Em, observe that, obj(int(C) U m ) (Ajeinyeynbri )) N nbr(m)) ext(C) N nbr(m)) Em Since E,, is closed, it follows that (E,,, att(E,,)) is a formal concept. Consider in our example the top level concept: T (avinash,arnav,aarti,amrita,ashwani,ashok, ) for the context in Table 14.2. Extending with each of the properties we have Emath aarti , english atnav, aarti , Escience avinash, arnav, aarti, amrita, ashwani , Egames aarti, amrita , and Emysic aarti . The corresponding (closed) property sets are, att(Enan) (math, english, science, games, music att(