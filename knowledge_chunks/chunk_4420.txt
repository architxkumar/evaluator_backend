hem. Unfortunately, most of the rules have exceptions consider xylophone and these exceptions must also be programmed in. AJso, the rules may interact with one another in unpleasant, unforeseen ways. A connectionist approach is simply to present a network with words and their pronunciations, and hope that the network will discover the regularities and remember the exceptions. NETtalk succeeds fairly well at this task with a backpropagation network of the type described in Section 18.2.2. Connectionist Models 397 Caran susanaacaarsnaseennemmenaracasadimgemmmnsatasmmaamumneumeaduammad OUTPUT DECISION REGIONS {One for Each of Ten Vowels) 4000 HOD WHO'D HAD HEED 2000 N = N re 1000 506 INPUT 0 500 1000 1400 (First and Second Formants) FA (Hz) Fig. 18.21. A Network That Learns to Distinguish Vowel Sounds We can think of NETtalk as an exercise in extensional programming [Cottrell et ai., 1987]. There exists some complex relationship between text and speech, and we program that relationship into the computer by showing it examples from the real world. Contrast this with traditional, intensional programming, in which we write rules or specialized algorithms without reference to any particular examples. In the former case, we hope that the network generalizes to translate new words correctly; in the latter case, we hope that the algorithm is general enough to handle whatever words it receives. Extensional programming is a powerful technique because it drastically cuts down on knowledge acquisition time, a major bottleneck in the construction of AI systems. However, current leaming methods are not adequate for the extensional programming of very complex tasks, such as the translation of English sentences into Japanese. 18.3.2 Connectionist Vision Humans achieve significant visual progress with limited visual hardware. Only the center of the retina maintains good spatial resolution; as a result, we must constantly shift our attention among various points of interest. Each snaps