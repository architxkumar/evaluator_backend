Figure 9.34). Forward Checking looks ahead to check that there exists a value in each future domain that is consistent with the value being considered. t does not check whether future domains are consistent (in our case, arc consistent) with each other. For example, when the value B b has been chosen, the variable C is no longer arc-consistent with both A and F. An algorithm that explores the relation amongst future variable might be able to see that and, as a result, not choose the assignment B 5 in the first place. Various degrees of lookahead have been investigated and some of the well known variations are described below. 9.7.2 Arc Consistency Lookahead The AC lookahead or Full Lookahead implements full arc consistency between the remaining variables. It considers all pairs of future variables and removes values from one domain for which a consistent value in the other domain does not exist. The Directional Arc Consistency Lookahead, or Partial Lookahead, does only directional arc consistency for the future variables. In both cases, the values assigned to existing variables are used for checking consistency. We leave the algorithms for full and partial lookahead as an exercise for the reader (see also (Haralick and Elliott, 1980)). Here we trace the progress of the Full Lookahead algorithm on the problem in Figure 9.33. Like Forward Checking, the algorithm Full Lookahead too begins by trying G w, and removing w from its connected variables E and F. But removal of these two values triggers a chain of value removals (in the manner of algorithm AC-3), resulting in the matching diagram shown in Figure 9.39. Observe that the value r has not been pruned from the domain of G because G is not a future variable and does not participate in the propagation. Full lookahead can see that choosing G w will result in a dead end in which the fifth variable E will have no consistent assignment, and will abandon G w right there. Full Lookahead avoids picking the value w for the va