 them in a succinct manner that is also amenable to tractable reasoning. We can, and most often do, define relations as intensions as well. For example, WxVy (GrandParent(x, y) 3z (Parent(x, z) A Parent(z, y))) WxVy (Mother(x, y) (Parent(x, y) A Female(x))) Vxvy (Ancestor(x, y) (Parent(x, y) V Jz (Parent(x, z) A Ancestor(z, kaziMt.com The last one is a recursive definition. 13.2 Reification So far we have only made an attempt to describe the elements of the domain and relations between them. We have not talked of change. We have assumed our domain to be like the domain of mathematics, where statements are always true or always false, even though we may not know about some as to what the case is. Very often in the real world one has to describe and reason about situations involving change in which agents act and events occur. In natural languages we associate verbs with actions, and sentences with events. In FOL we can also follow an approach in which predicates stand for verbs, and thus describe actions. For example we might say, Hit(Azizi32, Anuun12)3 : the act of Azizi hitting Anuun Unstack(R2D2, Block27, : the act of R2D2 unstacking Block27 from Block21) Block21 If we look at the blocks world (see Chapter 7 on Planning) we have to worry about changing facts. For the action Unstack(R2D2, Block27, Block21) to have happened certain preconditions should have been true, for example On(Block27, Block21), and certain post conditions become true after the action, for example Clear(Block21). If an action actually happens we say an event has occurred. Formulas like On(Block27, Block21) are no longer true at all times but may have their truth values fluctuate between true and false. We call such formulas asfluents. The approach taken by the planning algorithms is to keep only the current state facts in the database, adding new ones and deleting the ones no longer true. That is sufficient for the task of planning. But if one wants to reason explicitly about change then fluen