t path and forces other ants too to choose it. Over a period of time only the shortest path exists while other paths fade away due to pheromone volatility. Figure 23.13 depicts two ants A and B using this technique. Ant A will definitely reach back to the starting point faster than ant B, thereby depositing more pheromone over a period of time forcing the other to also follow the shortest route discovered. This algorithm can be easily ported onto the well known Travelling Salesman problem. While it may be seen that GAs and Ant Algorithms have not much in common, what is being emphasized here is that the most efficient and yet simple algorithms may be formulated by looking into nature's vast repositories. 23.8.1 Pheromone Trail and Update A typical Ant Colony Optimization (ACO) algorithm can be used to find the shortest path between a pair of nodes A and B in a simple connected graph G = (N, E) with IN! nodes. A certain amount of pheromone , is Genetic Algorithms: Copying Nature s Approaches 477 _senemsenenenanenesae RAREST ACCRA ANISTON CHU SAITO associated with each arc initially. The movement of the ants is governed by the intensity of the pheroi- "e trail which in turn is updated by the traversing ant(s). The updates done are proportional to the estimatea profits gained by the ant. Gains depend on how good the solutions are from the perspective of the ant. Movement from one node to another is decided based on the information about the outgoing arcs. In its simple form, the probability of an ant a at node j taking a path to its next immediate neighbour j is given by 0 if j does not belong to the set O, of the immediate neighbours of i je O; Trails are updated by ants by depositing a constant value of pheromone on the arcs every time they traverse it. Thus as ant moves from node / to node j at time , the value of 7G) changes to (0) + AC. This tends to increase the probability of this arc being used by other ants. To avoid overcrowding due to high pheromone concentr