fered for dealing with uncertainty, if any). 2. Inference and control methods available (backward chaining, forward chainini, mixed lorward and backward chaining, blackboard architecture approach, logic driven theorem prover, object-oriented approach, the use of attached procedures. types of meta control capabilities, forms of uncertainty management, hypothetical reasoning, truth maintenance management, pattern matching with or without mdc sing, user functions permitted, linking options to modules written in other Lirigijages. and linking options to other sources of information such as data 3. User interface characteristics (editor flexibility and ease of USC, use of menus, use of pop-up windows, developer provided text capabilities for prompts and help messages, graphics capabilities, consistency checking for newly entered knowledge. explanation of how and why capabilities, system help facilities, screen formatting and color selection capabilities, network representation of knowledge base, and forms of compilation available, batch or interactive). 4. General system characteristics and supp: ri available (types of applications with which the system has been success tflly used, the base programming language in which the system was written, the types of hardware the systems are supported on, general utilities available, debugging facilities, interfacing flexibility to other languages and databases, vendor training availability and cost, strength of software suppdrt, and company reputation). In the remainder of this section, we describe a few representative building tool systems. For a more complete picture of available systems, the reader is referred to other sources. Personal Consultant Plus A family of Personal Consultant expert system shells was developed by Texas Instruments. Inc. (TI) in the early 1980s. These shells are rule-based building tools patterned after the MYCIN system architecture and developed to run on a PC as well as on larger systems such as the TI