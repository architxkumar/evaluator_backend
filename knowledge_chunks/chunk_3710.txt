ust all come from th.' same domain, that more general abstractions be preferred over less geaera one., and that for a given abstraction, instances which require the fewest conjectures be chosen. In general, these heuristics are all based on choosing only enough new information about the target analogue to solve PT and then stop. Carbone Ws Systems Carbonell developed two analogical systems for problem solving, each based on a different perception of the analogical process (1983 and 1986). The first system was based on what he termed transformational analogy and the second on derivational analogy. The major differences between the two methods he in the amount of details remembered and st Ored for situations such as problem solution traces and the methods used in the base-to-target domain transformational process. Both methods used a knowledge representation and memory indexing and recall_scheme similar to the memory organization packets or MOPs of Roger Schank (Chapter Ii). Both methods also essentially followed the five-step analogical learning process outlined in the previous section. The main differences between the two methods can be summarized as follows: Transformational Analogy. Problem solving with this approach is based on the use of means-end analysis (MEA) as described in Chapter 9. Known problem solutions are indexed and stored for later retrieval. The solutions are stored as an 426 Analogical and Explanation-Based Learning Chop. 20 initial state, a goal state, and a sequence of actions (operators) which, when applied to the initial and intermediate states, result in a transformation to the goal state. When a i,ew problem is encountered, it is matched against potentially relevant known, ones using a suitable similarity measurement. The partial match producing the highest similarity measure is transformed to satisfy the requirements of the new problem. in finding a solution to the new problem using the known mapped solution, it is often nec.sary to disturb