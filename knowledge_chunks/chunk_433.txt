n the other domain in the matching diagram. Figure 9.5 shows an example of a matching diagram where the edge (x, y) is not arc consistent on the left. One must keep in mind that the edge in the constraint graph is (x, y), while the edges in the matching diagram link values from the domains of the two variables. FIGURE 9.5 The matching diagram for a relation Ryy. On the left, the pair of variables (x, y) are not arc consistent. On the right, they become arc consistent after the non-participating values are removed from the domains. The task of achieving arc consistency is to remove those values from each domain that are not the endpoints of any link, or that are not supported by any value of the other variable. The figure on the right shows the edge (x, y), after arc consistency has been enforced. An edge (x, y) can be made arc consistent by inspecting the two domains, D, and Dy, and removing the unsupported values. If in the process, any domain becomes empty then it means that the CSP is inconsistent and does not have a solution. The procedure Revise given in Figure 9.6 reduces the domain D, with respect to the edge (x, y) (Mackworth, 1977). Observe that this will have to be called twice, once with each variable, to enforce that the edge is arc consistent. If there are k values in each domain, the complexity of this algorithm is O(k2). Not shown in the algorithm, but in practice if the if condition is found true in line 4 then one would exit the inner for loop after line 5, thus saving on some computation. Revise (D,, D,, Ryy) 1 for each veD, delete true for each w D, if (v, w) ER, then delete false if delete true then remove v from D,, return D, OI Ob wh FIGURE 9.6 The algorithm Revise takes as input the domains of two variables forming an edge and reduces the first domain, so that every value in D, has a corresponding value in Dy. In practice, when a matching value is found in Dy the algorithm will exit that loop. A CSP is said to be arc consistent if every edge i