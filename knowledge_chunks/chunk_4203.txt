ally one-to-one. But as an example of an almost A + one-to-one mapping, consider the language of aw i i 3j i : A:=B+C*D > arithmetic. expressions in many programming B * Janguages. In such a language, a mapping such as o O the following might occur: Cc D 274 Artificial Intelligence Although one-to-one mappings are, in general, the simplest to perform, they are rare in interesting input systems for several reasons. One important reason is that in many domains, inputs must be interpreted. not ahsolutely, but relatively, with respect to some reference point. For example, when images are being interpreted, size and perspective will change as a function of the viewing position. Thus a single object will look different in different images. To see this, look at Fig. 14.2, which shows two line drawings representing the same scene. one of which corresponds to a picture taken close to the scene and one of which represents a picture taken from farther away. A similar phenomenon occurs in English. The word tall specifies one height range in the phrase a tall giraffe and a different one in the phrase a tall poodle. A second reason that many-to-one mappings are frequent is that free variation is often allowed, either because of the physical limitations of the system that produces the inputs or because such variation simply makes the task of generating the inputs manageable. Both of these factors help to explain why natural languages, both in their spoken and their written forms, require many-to-one mappings. Examples from speech abound. No two people speak identically. In fact, one person does not always say a given word the same way. Figure 14.3 illustrates this problem. It shows a spectrogram produced by the beginning of the utterance Alpha gets alpha minus beta. A spectrogram shows how the sound energy is distributed over the auditory frequency range as a function of time. In this example, you can see two different patterns, each produced by the word alpha. Even when we ignore