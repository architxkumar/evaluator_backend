 i layer. Figure 10.3 illustrates the structure of a planning graph. The initial state of the planning problem defines the layer Po. Since Pp represents a given state, there can be no mutex edges in this layer. In the graph shown below, there are four actions a,, a2, a3 and ay. An action appears in a layer, only if all its preconditions are nonmutex in the previous proposition layer. The first two actions a, and aj appear in the first action layer A,, and the other two appear in layers Az and A3 one by one. For every proposition, there is a No-op action shown in dashed edges in the figure. Only some of the mutex edges have been shown to avoid cluttering up the figure. FIGURE 10.3 A planning graph is a layered graph with alternate layers of propositions and actions. The actions with dashed edges are No-op actions. Very often we do not show the No-op actions explicitly in the planning graph figures. Instead, we draw edges directly from the proposition in one layer to the proposition in succeeding layers. These are depicted as thick, dashed, grey lines in the figure below. Figure 10.4 depicts a few layers of a planning graph for a simple blocks world problem. Observe that the planning graph does not depend upon the goals to be solved in a specific planning problem. One of the first observations one can make is that the nodes in the graph grow monotonically with every new layer. This is because every proposition has an associated No-op action. Once a proposition appears in a layer, it will always occur in subsequent layers. It is a little less obvious, but when an action appears in an action layer, it occurs in every subsequent layer as well. This is because its preconditions that appeared nonmutex in a layer continue to show up nonmutex in subsequent layers. This will become clear when we define the mutex relation formally as follows. PraDn(A) OnT(A) OnT(C) PutDn(C) On(C.A) A Stack(C,A) Ont.) Bic , Hold(C) Clear(B) yal Ne 7 Hold(A) - Hold(A) OnT(B) fi OnT (BY f- - OnT(