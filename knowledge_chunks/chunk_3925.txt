mple, we could introduce a function age and assert that its value is never greater than 150. The representation shown above is simpler, though, and it will suffice for this example. It is now 1991. now = 1991 Here we will exploit the idea of equal quantities that can be substituted for each other. Now suppose we want to answer the question Is Marcus alive? A quick glance through the statements we have suggests that there may be two ways of deducing an answer. Either we can show that Marcus is dead because he was killed by the volcano or we can show that he must be dead because he would otherwise be more than 150 years old, which we know is not possible. As soon as we attempt to follow Using Predicate Logic 107 either of those paths rigorously, however, we discover, just as we did in the last example, that we need some additional knowledge. For example, our statements talk about dying, but they say nothing that relates to being alive, which is what the question is asking. So we add the following facts: 8. Alive means not dead. Vx: Ve: falive(x, ) > ~dead(x,t)] A [ndead(a, t) > alive(x, })] This is not strictly correct, since ~dead implies alive only for animate objects. (Chairs can be neither dead nor alive.) Again, we will ignore, this for now. This is an example of the fact that rarely do two expressions have truly identical meanings in all circumstances. 9. If someone dies, then he is dead at all later times. Vx: Vt, 2 Vy: died(x, 4) A Bt(ty, 1) 2 dead(a, t2) This representation says that one is dead in all years after the one in which one died. It ignores the question of whether one is dead in the year in which one died. man( Marcus} Pompeiart Marcus) born( Marcus, 40) Vx: man(x) mortalx) Vv: Pompeian{x) > died{x, 79) erupted( yolcano, 79) V0 Vt: Wty: morta) born(x, t) A gt(t, - t,, 150) > dead(x, t) now = 1991 Vx: Vt [alive(x, ) > -dead{x, 9] /\ [-dead(x, > alive(x, f] Vx: Vt 2 Vi, : died(x, ) A ott, t) > dead(x, t) Fig. 5.4 A Set of Facts about Marcus PO MNADRO