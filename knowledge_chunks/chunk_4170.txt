he advantage of this approach is that a single mechanism, resolution, can perform all the operations that are required on state descriptions. The price we pay for this, however, is that the nurnber of axioms that are required becomes very large if the problem-state descriptions are complex. For example, suppose that we are interested not only in the positions of our blocks but also in their color. Then, for every operation (except possibly PAINT), we would need an axiom such as the following: COLOR(x, c, s) 3 COLOR(x, c, DO(UNSTACK(y. 2), 5)) To handle complex problem domains, we need a mechanism that does not require a large number of explicit frame axioms. One such mechanism is that used by the early robot problem-solving systern STRIPS (Fikes and Nilsson, 1971] and its descendants. In this approach, each operation is described by a list of new predicates that the Operator causes to become true and a list of old predicates that it causes to become false. These two lists are called the ADD and DELETE lists, respectively. A third list must also be specified for each operator. This PRECONDITION list contains those predicates that must be true for the operator to be applied. The frame axioms of Green s system are specified implicitly in STRIPS. Any predicate not included on either the ADD or DELETE list of an operator is assumed to be unaffected by it. This means that, in specifying each operator, we need not consider aspects of the domain that are unrelated to it. Thus we need say nothing about the relationship of UNSTACK to COLOR. Of course, this means that some mechanism other than simple theorem proving must be used to compute complete state descriptions after operations have been performed. STRIPS-style operators that correspond to the blocks world operations we have been discussing are shown in Fig. 13.2. Notice that for simple rules such as these the PRECONDITION list is often identical to the DELETE list. In order to pick up a block, the robot arm must be empt