than other entry types. They will contain all possible senses, tense, and other information. Each verb maps to one of the primitive actions; ATRANS. AT-FEND, CONC, EXPEL, GRASP, INGEST, MBUILD, MOVE. MTRANS. PROPEL. Vr RANs. and SPEAK. Each primitive action will also have an associated tense: past, present, future, conditional, continuous, interrogative. end, negation, start, and timeless The basic process followed in building conceptual dependency structures is simply the three steps listed below. 1. Obtain the next lexical item (a word or phrase). 2. Access the lexical entry for the item and obtain the associated tests and actions. 3. Perform the specified actions given with the entry. Three types of tests are performed in Step 2. I. If a certain lexical entry is found, the indicated action is performed. This corresponds to true (non-nil in LISP). 2. Specific word orderings are checked as the structure is being built and actions initiated as a result of the orderings. For example, if a PP follows the last word parsed, action is initiated to fill the object slot. 3. Checks are made for specific words or phrases and, if found, specified actions "taken. For example, if an intransitive verb such as listen is found, an action is258 Natural Language Processing Chap. 12 would he initiated to look for associated words which complete the phrase beginning with to or for. For the above tests, there are four types of actions taken. I. Adding additional structure to a partially built conceptual dependency. 2. Filling a slot with a substructure. 3. Activating another action. 4. Deactivating an action. These actions build up the conceptual dependency structure as the input string is parsed. For example, the action taken for a verb like drank would be to build a ;ubstructure for the primitive acticn INGEST with unfilled slots for ACTOR. OBJECT, and TENSE. (INGEST (ACTOR nil) (OBJECT oil) (TENSE past)) Subsequent words in the input string would initiate actions to add to this stru