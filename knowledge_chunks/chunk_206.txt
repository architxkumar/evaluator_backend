ours exceed a ignored them. Ea) fully refined tour. Bal Baa) 97 i j a ai Nad y GM pb 7380 be 2070 y GM om en) mr) yl oe SSabp oe Oo OO CO FIGURE 5.6 Branch and Bound on TSP in the refinement space. B 4 c) ONC Included Edge Excluded Edge Forced Edge While this does give us a tighter estimate, one can improve upon this with some reasoning. The fact that the CM segment and MB segments are included implies that the Bangalore Chennai (BC) segment with cost 360 should be excluded. Otherwise, we would have a C-M-B-C cycle, which is not allowed by the specification of TSP. The BC segment costing 360, contributes twice in the above estimate. One must replace the two occurrences with the next better costs, 800 and 570, as shown below. (800 1280) (570 590) (1210 1280) (1540 2080) (570 1210) 2 1130 3 5565 Both are incidentally to Goa, and therein lurks another case for reasoning, because each city can be connected only to two others. With further reasoning, we could get a still better estimate. This kind of trade off is not uncommon. Reasoning can prune the search space, but itself has an associated cost. In the above method for estimating costs for example, we may be counting more that two edges emanating out of a node. If we could avoid this, then our estimates would become more accurate. As we refine the above partial solution, we get increasing and better estimates of cost. If at any point all the estimated costs were to become higher than a known cost of a complete solution in hand then we would stop refining the solution. The B B algorithm can thus be summarized as shown in Figure 5.7. The only condition is that the estimated cost must be a lower bound on the actual cost. Generalized BsB Procedure () 1 Start with all possible solutions 2 repeat 3 Refine the least (estimated ccst) solution further 4 until the cheapest solution s is fully refined 5 return s FIGURE 5.7 The general Branch Bound procedure. Branch Bound is a complete and admissible algorithm. That is, it will f