e me 2)))))) This advice says that the player should avoid taking point-cards during the process of the trick-winner taking the trick. The question for FOO now is: Under what conditions does (take me c2) occur during (take (trick-winner) cl)? By using a technique called partial match, FOO hypothesizes that points will be taken if me = trick-winner and c2 = cl. It transforms the advice into: (achieve (not (and (have-points (cards-played)) (= (tick-winner) me)))) This means Do not win a trick that has points. We have not traveled very far conceptually from avoid taking points, but it is important to note that the current vocabulary is one that FOO can understand in terms of actually playing the game of hearts. Through a number of other transformations, FOO eventually settles on: Learning 351 Nase Meine omen eacanirirana L aun nerteentcreemalaualsn NNNADetnt (achieve (>= (and (in-suit-led (card-of me)) (possible (trick-has-points))) (low (card-of me))) In other words, when playing a card that is the same suit as the card that was played first, if the trick Possibly contains points, then play a low card. At last, FOO has translated the rather vague advice avoid taking points into a specific, usable heuristic. FOO is able to play a better game of hearts after receiving this advice. A human can watch FOO play, detect new mistakes, and correct them through yet more advice, such as play high cards when it is safe to do so. The ability to operationalize knowledge is critical for systems that learn from a teacher s advice. It is also an important component of explanation-based learning, another form of learning discussed in Section 17.6. 17.4 LEARNING IN PROBLEM-SOLVING In the last section, we saw how a problem-solver could improve its performance by taking advice from a teacher. Can a program get better without the aid of a teacher? It can, by generalizing from its own experiences. 17.4.1 Learning by Parameter Adjustment Many programs rely on an evaluation procedure that com