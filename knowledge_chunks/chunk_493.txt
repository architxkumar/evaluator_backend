ate containing three blocks. One can see that there are propositions in the new layer that cannot hold together. For example, On(A, B) and Hold(A)? cannot be true at the same time, and therefore cannot be part of a state. Likewise, On(A, B) and Clear(B), OnT(C) and Hold(C) cannot be a part of a state as well. We can also see that the two actions in the action layer, PkUp(C) and UnSt(A, B), cannot happen at the same time, given the blocks world assumption of a one armed robot. Propositions in one layer that cannot be true simultaneously and actions in a layer that cannot happen simultaneously define a binary relation called mutex in each layer. The mutex relation, which stands for MUTual EXclusion, can be shown in the planning graph as edges connecting nodes in a layer. Another question one might ask is about the delete effects of actions. In the above example, the PkUp(C) has a delete effect OnT(C). Should the proposition be allowed in the next layer? The answer is yes, because if the first action in the plan were to be UnSt(A, B), the resulting layer would have OnT(C). This is the Frame Problem (McCarthy Hayes, 1969) turning up again, and the way it is solved is by introducing a special action called No-op(P) for every proposition P. The No-op(P) action has preconditions P and effects P . It basically serves to preserve every proposition. oh E omw Bic OnT(B) - Clear(C) i Hold(Q) a onte ) On(A, B) OnT(B) OnT(B) Clear(C) fone Clear (A) I open N Hold(c) Clear(C) Pkup(O) e WA Clear(C) - On(A,B) Ont) Jy, nO) OnT(B) ArmE a Ame Clear(C) Gear iy) CSA " oma Ona?) Ponsa eri, Ne yA f Clear(c) X WA Clear(B) Y on7o a Clear(A) Clear(B) State space ie) Planning graph J FIGURE 10.2 The proposition layer in the planning graph may contain inconsistent propositions, and the action layer may contain two actions that cannot be done in parallel. To account for the relation between actions and their effects, we introduce edges between the action in a given layer and each of its effects i