ms of a variable x, which is bound to the frame whose manager slot is being described. It requires that any manager be not only a person but someone with baseball experience. It relies on the domain-specific function baseball-experience, which must be defined somewhere in the system. The slots color and uniform-color illustrate the arrangement of slots in an isa hierarchy. The relation color is a fairly general one that holds between physical objects and colors. The attribute uniform-color is a restricted form of cofor that applies only between team players and the colors that are allowed for team uniforms (anything but pink). Arranging slots in a hierarchy is useful for the same reason that arranging any thing else in a hierarchy is: it supports inheritance. In this example, the general slot color is known to have high visual salience. The more specific slot uniform-color then inherits this property, so it too is known to have high visual salience. The slot color also illustrates the use of the transfers-through slot, which defines a way of computing a slot s value by retrieving it from the same slot of a related object. In this example, we used transfers-through to capture the fact that if you take an object and chop it up into several top level parts (in other words, parts that are not contained inside each other), then they will all be the same color. For example, the arm of a sofa is the same color as the sofa. Formally, what transfers-through means in this example is color (x, y) A top-level-part-of (z, x) color(z, y) In addition to these domain-independent slot attributes, slots may have domain-specific properties that support problem solving in a particular domain. Since these slots are not treated explicitly by the framesystem interpreter, they will be useful precisely to the extent that the domain problem solver exploits them. 3Notice that since slots are relations rather than functions, their composition may retum a set of values, 202 Artificial Intellige