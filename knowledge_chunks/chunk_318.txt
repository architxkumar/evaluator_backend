o open conditions or threats, and hence this is a solution plan. The reader would have observed that the resulting plan is a linear plan. This is inevitable in the blocks world domain, because the one-armed robot can hold only one block, and therefore only one action can be done at a time. If the robot could hold more than one object then one could have partial plans that are not linear orders. For example, a parallel step could say pickup(A) and pickup(B) without specifying the order, that is there would be no ordering constraint between the two actions, and the plan could be correctly linearized in any order. An example of such parallel actions could be the dressing up for school problem, for which the plan is shown in Figure 7.21. The subplan has four actions wear(left, sock), wear(right, sock), wear(right, shoe) and wear(left, shoe) that follow a comb-hair action with only constraints that each sock must be worn before the respective shoe. Otherwise, the actions could be done in any order. This gives us a compact representation of a plan, which stands for all the linear plans that are consistent with the ordering constraints. Worn clothes Consistent linearizations 1-2-3-4-5 1-2-4-3-5 1-2-4-5-3 1-4-2-3-5 1-4-5-2-3 3 5 1-4-2-5-3 Wear(left, shoe) Wear(right, shoe) L yy 7 nil Figure 7.21 A partial plan may stand for many linear plans. The algorithms above have been written in a nondeterministic manner. While this results in a succinct description, it hides the fact that the algorithm still has to search through a combination of choices. In practice, one will have to choose a combination of heuristics to guide the search, and introduce backtracking to make it complete. The reader might have noticed that the search space for PSP is infinite, even when the state space is finite. Given a two block problem in the blocks world domain, there are only four distinct states possible. But the number of candidate plans is infinite, because one can always insert the two actions 