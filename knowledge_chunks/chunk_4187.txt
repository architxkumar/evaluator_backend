time: no B Depth of node in search space im Plan stored in: A * Series of state transitions Constraint Posting Search Move in the space: Pla mn Add operators ofp Order operators Bind variabls Plang Of otherwise constrain plan ota Model of time: Partially ordered set of operators Plana Plan stored in: oo0o * Single node Fig. 13.7 Constraint Posting versus State Space Search - Let us incrementally generate a nonlinear plan to solve the Sussman anomaly problem. We begin with the null plan, i.e., a plan with no steps. Next we look at the goal state and posit steps for achieving that goal. Means-ends analysis tells us to choose two steps with respective postconditions ON(A, B) and ON(B, C): CLEAR(B) CLEAR(C) * HOLDING(A) * HOLDING(B) STACK(A,B) STACK(B,C) ARMEMPTY ARMEMPTY ON(A,B) ON( B,C) ACLEAR(B) =CLEAR(C) AHOLDING(A) =HOLDING(B) Each step is written with its preconditions above it and its postconditions below it. Delete postconditions are marked with a negation symbol (~). Notice that, at this point, the steps are not ordered with respect to each other. : All we know is that we want to execute both of them eventually. Neither can be executed right away because some of their preconditions are not satisfied. An unachieved precondition is marked with a star (*). Both of the *HOLDING preconditions are unachieved because the arm holds nothing in the initial problem state. Introducing new steps to achieve goals or preconditions is called step addition, and it is one of the heuristics we will use in generating nonlinear plans. Step addition is a very basic method dating back to GPS [Newell and Simon, 1963], where meansends analysis was used to pick operators with postconditions corresponding to desired states. Figure 13.8 lists step addition along with other heuristics we use throughout this example. 1. 2. 3. Step Addition Creating new steps for a plan. Promotion Constraining one step to come before another in a final plan. Deciobbering Piacing one (possibly new) step s, be