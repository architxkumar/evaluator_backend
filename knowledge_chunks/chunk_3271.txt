lowing definitions. Sec. 4.3 Syntax and Semantics for FOPL Formal system A formal system is a set of axioms S and a set of inference L from which new statements can be logically derived. We will sometimes rules denote a formal system as <S, L> or simply a KB (for knowledge base). be a formal system. We say the inference procedures Soundness. Let <S. L> L are sound if and only if any statements s that can be derived from <S., L> is a logical consequence of <S. L>. Completeness. Let <S. L> be a formal system. Then the inference procedure L is complete if and only if any sentence s logically implied by <S. L> can be derived using that procedure. As an example of the above definitions, suppose S = {P. P - Q} and L is the modus ponens rule. Then <S, L> is a formal system, since Q can be derived from the system. Furthermore, this system is both sound and complete for the reasons iven above. We will see later that a formal system like resolution permits us to perform computational reasoning. Clearly, soundness and completeness are desirable properties of such systems. Soundness is important to insure that all derived senteilces are true when the assumed set of sentences are true. Completeness is important to guarantee that inconsistencies can be found whenever they exist in a set of sentences. 4.3 SYNTAX AND SEMANTICS FOR FOPL As was noted in the previous chapter, expressiveness is one of the requirements for any serious representation scheme. It should be possible to accurately represent most, if not all concepts whic!1can be verbalized. PL falls short of this requirement in some important respects. It is (.00 "coarse" to easily describe properties of obtects. and it lacks the structure to express relations that exist among two or more .entities Furthermore, FL does not permit us to make generalized statements about classes of similar objects. These are serious limitations when reasoning about real world entities. For example. given the following statements, it should be 