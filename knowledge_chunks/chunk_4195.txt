 But in this approach, no details were eliminated from the actual descriptions of the operators. A better approach was developed in the ABSTRIPS system [Sacerdoti, 1974], which actually planned in a hierarchy of abstraction spaces, in each of which preconditions at a lower level of abstraction were ignored. (OPERATOR (PRECONDITIONS (and...) {fora (w ...)...) {not (exists ...} (POSTCONDITIONS (ADD (...)) (DELETE (...)) (if (and (...)(...)) (ADD (...)(...)) (DELETE (...)(...)))))) Fig. 13.10 A Complex Operator As an example, suppose you want to visit a friend in Europe, but you have a limited amount of cash to spend. It makes sense to check airfares first, since finding an affordable flight wil! be the most difficult part of the task. You should not worry about getting out of your driveway, planning a route to the airport, or parking your car until you are sure you have a flight. The ABSTRIPS approach to problem-solving is as follows: First solve the problem completely, considering only preconditions whose criticality value is the highest possible. These values reflect the expected difficulty of satisfying the precondition. To do this, do exactly what STRIPS did, but simply ignore preconditions of lower than peak criticality. Once this is done, use the constructed plan as the outline of a complete plan and consider preconditions at the next-lowest criticality level. Augment the plan with operators that satisfy those preconditions. Again, in choosing operators, ignore all preconditions whose criticality is less than the level now being considered. Continue this process of considering less and less critical preconditions until all of the preconditions of the original rules have been considered. Because this process explores entire plans at one level of detail before it looks at the lower-level details of any one of them, it has been called length-first search. Clearly, the assignment of appropriate criticality values is crucial to the success of this hierarchical planni