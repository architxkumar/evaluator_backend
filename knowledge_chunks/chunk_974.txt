tem for computer systems. A case in this system is the description of a specific computer model. This can be an object oriented (OO) representation. In an object oriented representation, the relation between a device and its components is captured explicitly. For example, a computer system is made up of a processor, a monitor, a keyboard, the different kinds of primary storage like the RAM, the L1 and L2 cache, the secondary storage like the hard disk or flash drive, the auxiliary storage devices like DVD writers, and the different ports and network connectors. Each of these components are objects themselves, described by a collection of attributes like cost, make, speed and capacity. Also each of them may form a taxonomic hierarchy. For example, the auxiliary device may be further specialized into magnetic and laser devices, and the latter into the CD and the DVD. A user may want to compare two different machines. This would involve comparison of the collective set of attributes that define the case, as also the similarity that comes from the taxonomic organization of components. Given that there may be a large number of attributes whose local similarities have to be combined in complex ways, and that there may be a large number of products to choose from, the task of computing similarity can be humungous. Another structure that can lead to very expensive similarity computations is when the case structure is a graph. This could be when one is reasoning with network traffic, transportation systems, or electricity and water supply networks. The Fish and Shrink algorithm relies on the property that the similarity of similar cases to the query will be similar. As a corollary, if a case A is going to be out of contention for a place in a retrieval set then a case B that is close to A is likely to be out as well. The algorithm exploits this property as follows. Given a query Q, whenever the algorithm computes similarity with a test case T, it uses its knowledge of the si