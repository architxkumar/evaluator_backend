erein the elements are numbers. (E.g. (55, 45, 40]) (iii) A function represented by a compound term wherein the functor denotes a function predefined by the compiler and whose argument is itself an expression. (E.g. tan(1 + 4)/4) (iv) A bracketed expression (An expression in a bracket) (E.g. (4*W)) (v) A variable that has been bound to an expression before the expression is evaluated. (E.g. V where V was initialized to V = sin(CX)) Some of the basic predefined arithmetic, trigonometric and logarithmic functions are shown in Table 25.2. Table 25.2 Some predefined Arithmetic, Trigonometric and Logarithmic functions Function Computes Arithmetic X+Y Sum X-Y Difference X*Y Product XIY Division x Negative X mod Y Remainder after integer division XAY X to the power Y Trigonometric rand(X) Pseudo random floating point number between 0 and X sqrt(X) Square root of X sin(X), cos(X), tan(X), asin(X), acos(X), Sine, Cosine and Tangent of X as also arc atan(X)} values respectively. Logical a] X Y, X Y Logical shift arithmetic left or right respectively \) Logical negation of the integer X a(X,Y), o(X,Y), x(X,Y) Logical AND,OR,XOR of X and Y respectively 502 Artificial Intelligence 25.8 MATCHING IN PROLOG How does PROLOG find a way to satisfy the goal or query posed to it? This depends on the goal. If the goal does not have any variables as in relishes(priya, coffee). then things are simple. A matching is performed predicate to predicate and argument to argument. If this goal matches any fact then it outputs a Yes (or No) as the case may be. Things are a bit different for a case when the goal involves variables. Consider the simple case of Who relishes coffee? The corresponding goal is relishes(Who,coffee). Remember Who is a variable. This goal is matched with the first fact of relishes viz. relishes(priya,coffee) which causes the variable Who to be bound to the value priya which in turn is finally returned. Now add the following facts to the above program: fond(priya,driving). J