rement M still hold, and a few additional inferences may be made. That is, P(OBS, ENV) c P(OBSU M , ENV) This implies that as we make new measurements, we need to do the inferences only incrementally, as long as we cache the inferences made earlier. Further, since the inferences are made for specific environments, if we store the justification for each inference, then when an inconsistency is observed, the environments responsible for it can be identified easily. An environment is a set of assumptions. If the environment ENV turns out to be consistent (with the observations and system definition), then the system investigates a set of new environments of the form ENVU A , where A is a new assumption. The inferences made with the smaller environment are still valid and, P(OBS, ENV) c P(OBS, ENVU A ) Thus, while investigating the extended environments, the cached inferences can be augmented with any new ones. Further, since environments are explored smallest first, when a new environment comes up, all its subsets already have the inferences made and cached. What is needed is a mechanism that stores the inferences and alerts the system not to repeat the same inferences again. Such a mechanism is called a Truth Maintenance System (TMS) and we will study it briefly in the next section. In fact, the GDE employs a version of TMS known as the ATMS (Assumption based TMS) that allows it to explicitly keep track of assumptions (environments). GDE does not explore all possible environments, but only those that are suggested by the structure of the device which indicates which components are connected. The relations between variables across components are expressed in the form of rules or constraints. Each such rule or constraint identifies a component that can be part of an environment when the rule is applied or the constraint propagated across it. Further, propagation happens only through those components that are connected, and only those can extend a given environment. In t