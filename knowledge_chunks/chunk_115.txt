ar. Overall, one can observe that the performance of Hill Climbing is critically dependent upon the heuristic function. The algorithm is an example of a greedy algorithm that makes locally best choices and halts when no locally better option exists. While this may work for some problem domains, in many domains, finding a well behaved heuristic function is not easy. In particular, this is so when a problem can be seen as decomposable into a set of smaller problems. For example, consider the Ejight-puzzle or the Rubik s cube kind of problems. Most human solvers tend to decompose the goals into subgoals. For example, while solving the Rubik s cube, one may first do the top row, then the middle row, and finally the bottom row. Each of these subgoals is itself achieved by further decomposition. It is instructive to take a given solution for the Rubik s cube and plot the values of a heuristic function along the solution path. Assuming a Manhattan distance like heuristic function, the plot is likely to look somewhat like the one shown in Figure 3.15, but with more local minima. As each subgoal is achieved, the heuristic value reaches a local minimum. But further progress temporarily disrupts the heuristic value, before showing improvement again. Such problems are called problems with nonserializable subgoals (Korf 1985) because the subgoals cannot be independently achieved in any serial order. While solving any subgoal, extra care has to be taken to eventually restore any disrupted subgoals. Top row Middle row . Solved cube (Bottom cross (Bottom cross h(n) Nodes in the Solution Path FIGURE 3.15 For human generated solutions of the Rubik s cube, the heuristic value passed through many local minima. Given that there are going to be problems where the heuristic function will not be well behaved over the domain, there is a need to look for alternate methods to solve such problems. The simplest of them is to increase the memory available by a constant amount, so that more than 