 a) (equal 'c (caddr x))) C ->tor (and (atom x) (equal a xl) (and (not (atom x)) (atom (Car x)))) T Sec. 3,4 Input, Output, and Local Variables 29 3.4 INPUT, OUTPUT, AND LOCAL VARIABLES Without knowing how to instruct our programs to call for inputs and print nsess Jges or text on the monitor or a printer, our programs will be severely limited. The Operations we need for this are performed with the input-output (I/O) functions The most commonly used I/O functions are read, print, prini, princ, terpri. and format. Read takes no arguments. When read appears in a procedure, processing halts until a single s-expression is entered from the keyboard. The s-expression is the4l returned as the value of 'i',id and processing Continues. For example, if we include a read in an arithmetic pression, an appropriate value should be entered when the interpreter halts. ,>(.. 5 (read)) 6 11 When the interpreter looked for the second argument for +, it found the read statement which caused it to halt and wait for an input from the keyboard. If we enter 6 as indicated, read returns this value, processing continues, and the sum II is then returned. Print takes one argument. It prints the argument as it is received, and then returns the argument. This makes it possible to print something and also pass the same thing on to another function as an argument. When print is used to print an expression. its argument is preceded by the carnage-return and line feed characters (to start a new line)' and is followed by a space. In the following example.. note the double printing. This occurs because print first prints its argument and then returns it. causing it to he printed by the read-evaluate-print loop. >(pint '(a b dl (A B C) IA BC) ->lprint "hello there") hello there" "hello there" Notice that print even prints the double quotation marks defining the string. Prini is the same as print except that the new-line characters and space are not provided (this is not true for all implementations of 