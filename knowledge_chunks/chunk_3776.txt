etical physicist In the last chapter, we gave a brief description of the kinds of problems with which Al is typically concerned, as well as a couple of examples of the techniques it offers to solve those problems. To build a system to solve a particular problem, we need to do four things: 1, Define the problem precisely. This definition must include precise specifications of what the initial situation (s) will be as well as what fina] situations constitute acceptable solutions to the problem. 2. Analyze the problem. A few very important features can have an immense impact on the appropriateness of various possible techniques for solving the problem. 3. Isolate and represent the task knowledge that is necessary to solve the problem. 4, Choose the best problem-solving technique(s) and apply it (them) to the particular problem. In this chapter and the next, we discuss the first two and the last of these issues. Then, in the chapters in Part II, we focus on the issue of knowledge representation. 2.1 - DEFINING THE PROBLEM AS A STATE SPACE SEARCH Suppose we start with the problem statement Play chess . Although there are a lot of people to whom we could say that and reasonably expect that they will do as we intended, as our request now stands it is a very incomplete statement of the problem we want solved. To build a program that could Play chess, we would first have to specify the starting position of the chess board, the rules that define the legal moves, and the board positions that represent a win for one side or the other. In addition, we must make explicit the previously implicit goal of not only playing a legal game of chess but also winning the game, if possible. For the problem Play chess, it is fairly easy to provide a formal and complete problem description. The starting position can be described as an 8 x 8 array where each position contains a symbol standing for the appropriate piece in the official chess opening position. We can define as our goal any board