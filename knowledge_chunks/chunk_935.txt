ere is high traffic of consulting in a domain with small trees that can be handcrafted. For more complex domains, some explicit modelling of the domain could facilitate more flexible retrieval. In the following section, we introduce structural representation, based on a well defined vocabulary of attributes and values. When this is done, we will see that it will be possible to construct trees for indexing automatically. We will still be able to implement retrieval by an incremental dialogue, like in conversational CBR. In addition, the questions to be asked could be chosen dynamically. We will also be able to allow the user to select questions in a mixed initiative mode. 15.1.5 Structural CBR In structural CBR, a case is defined using a well defined vocabulary of attributes. Vatt A1, Aa, .--s An In practice, we tend to use attribute names, like height, weight, cost, that are meaningful to us. Associated with each attribute A; is a domain D; of values that can be assigned to the attribute. Dj vj Vids s Vip The domain need not be finite or even countable. Associated with each attribute A; is a type 7; that defines the type of the values in the domain Dj. The commonly used types are Boolean, Integer, Real, Symbolic and Text. The Symbolic types may be further divided into Ordered, Unordered and Taxonomic types. The lesson part of the case may or may not have a different vocabulary. In classification problems, the lesson may and attribute with a class label. In troubleshooting problems, the lesson may be a diagnosis and a set of actions to be performed. In recommender systems, there may be no distinction between the description and the lesson attributes. The user may partially describe a product, and the solution may be a full description of the best matching product. Here, any of the attributes could be the problem description, and the unstated attributes, the lesson used for case completion (Burkhard, 1998), (Hayes et al., 2001). One can think of the last example as an