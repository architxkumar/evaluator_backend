ave been built on top of them. Message-Passing Systems Message-passing systems provide an alternative way for agents in a distributed reasoning system to communicate with each other. In such a framework, the agents tend to know more about each other than they do in a blackboard system. This knowledge enables them to direct their messages to those agents who are most likely to be able to do what needs to be done. As an example of a message-passing distributed system, we describe MACE [Gasser et al., 1987], which provides a general architecture for distributed reasoning systems (in the same sense that systems such as BB1 provide a general architecture for blackboard systems). A MACE system is composed of five kinds of components: 1. Problem-solving agents, which are specialized to a problem domain System agents, which provide such facilities as command interpretation, error handling, tracing Facilities, which are built-in functions that agents can use for such things as pattern matching and simulation A description database, which maintains descriptions of the agents Kernels, of which there is one for each processor, which handle such functions as message routing and 1/O transfers A MACE problem-solving agent maintains models of other agents. A model that an agent P has of some other agent A contains the following information: we 1. Name: A s name Class: A s class Address: A s location Role: A s relationship to P. This relationship can be identity, creator, or member of an organization. Skills: P s knowledge about what A can do Goals: P s beliefs about A s goals Plans: P s beliefs about A s plans for achieving its goals MAME YWN This architecture supports many of the kinds of distributed reasoning systems that we have been discussing. Let s consider a few. First, suppose we want to build a system in which a controlling agent will decompose the problem and then negotiate with other agents to perform subtasks using a contract net mechanism. Then each of the agents can b