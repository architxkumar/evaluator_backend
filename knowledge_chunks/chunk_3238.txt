ble V ;bound to a value, causing an error Some basic symbol processing functions are car, cdr, cons, and list. Examples these functions, are given in Table 32. Car takes one argument, which must be kit a list. It returns the first top element of the list. Cdr also takes a list as its argument, and it returns a list consisting of all elements except the first. Cons takes two Sec. 3.2 Basic List Manipulation Functions in LISP 23 TABLE 3.2 BASIC LIST MANIPULATION FUNCTIONS Value Function call returned Remarks (car (a b c)) a Car takes one argument, a list, and returns the first element. (cdi '(a b C)) (b c) Cdr takes one argument. a list, and returns a list with the first element removed. (cons a (bc)) (a b c) Cons takes two arguments, an tieinent, and a list and returns a list with the element inserted at the beginning. (list 'a '(b C)) (a (b co List like any number of arguments and returns a list with the arguments as elements. arguments, an element and a list. It constructs a new list by making the element the first member of the list. List takes any number of arguments, and makes them into a list, with each argument a top member. Note the quotation marks preceding the arguments in the function calls of Table 3.2. As pointed Out above, an error will result if they are not there because the interpreter will try to evaluate each argument before evaluating the function. Notice the difference in results with and without the quotation marks. ->Icons (1 2 3) (1)1 ;the literal list 1 2 3) 5 W 23) 1) ."coosed" to the list 411 .>(corls 23) 111) ;the evaluated list 1 2 3) is (6 1) ;consed to the list (U ->(setq x '(a b C)) ;x is bound to the literal list (A B C) ;Ia b c I ;the quote - inhibits evaluation X ;ofx - ;but unquoted a evaluates to its (A B C) ;previously bound value The syntax for a function call is (function-name argi arg2 .1 where any number of arguments in\' be used. When a function is called, the arguments - are -first evaluated front to right (unless within qu