nd an object may belong to more than one class. Figure 10.1 illustrates the general match process where an input description is being compared with other descriptions. As stressed earlier, the term object is used here in a general sense. It does not necessarily imply physical objects. Al! objects will be represented in some formalism such as a vector of attribute values, propositional logic or FOPL statements, rules, frame-like structures, or other scheme. Transformations, if required. may involve simple instantiations or unifications among clauses or more complex operations such as transforming a two-dimensional scene to a description in some formal language. Once the descriptions have been transformed into the same schema, the matching process is performed element-by-element Using a relational or other test (like equality or ranking). The test results may then be combined in some way' to provide an overall measure of similarity. The choice of measure will depend on the match criteria and representation scheme employed. The output of the matcher is a description of the match. It may be a simple yes or no response or a list of variable bindings, or as complicated as a detailed annotation of the similarities and differences between the matched objects. To summarize then, matching may be exact, used with or without pattern variables, partial, or fuzzy, and any matching algorithm will be based on such factors as Choice of representation scheme for the objects being matched, Criteria for matching (exact, partial, fuzzy. and so On), Choice of measure required to perform the match in accordance with the chosen criteria, and Type of match description required for output. In the remainder of this chapter we examine various types of matching problems and their related algorithms We begin with a description of representation structure's Obtoli nt ,j ._ flepre.entar,on a.- Transformations Match [ - cottparator ,- Result Merri. Ic I! Representations Transformations Figure 10.1 