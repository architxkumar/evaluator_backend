mon n-grams will have to take this into account. Observe that the set representation ignores the position in which n-grams occur. This is similar to the vector space representation for documents made up of terms that we will investigate in the language processing chapter. One difference is that there is some positional information captured in the individual ngrams. The two sentences John loves Mary and Mary loves John will in fact have slightly different sets of trigrams, whereas treated as a bag of words in the vector space representation, the two become identical. We illustrate the n-gram matching with the two strings S; and S described above. We take rn to be 3 and let Ts; and Ts be the two sets of trigrams for the corresponding strings S, and So. im(X, Y) sim(X, Y) max ( N, , Ts1: bri, ric, ick, ck , k a, an, and, nd , d m, mo, mor, ort, rta, tar Tso: cli, lic, ick, ckK , K a, an, and, nd , d p, po, por, ort, rta, tal Ts1 M Tso ick, ck , k a, an, and, nd , ort, rta Ts1 14, Tsil 14, Ts1 9 Tsal 8 simy(S4,S2) 8 14 0.57 The reader would have noticed that the trigram similarity between S, and Sz is lower than the similarity based on the Hamming distance. This is because the two strings have many common characters in the same place. If this was not so, then the trigram method would have scored better. Consider a slight modification of the two strings with brick replaced by bricks, S',: bricks and mortar S2: click and portal Then, the set of trigrams for the first sentence is, Ts: bri, ric, ick, cks, Ks , S a, an, and, nd , d m, mo, mor, ort, rta, tar Ts4 15 The common trigrams are, Ts1 M Tso ick, an, and, nd , ort, rta ITs4M Tsa 6 The similarity now is, simy(S'4, Sz) 6 15 0.40 The similarity has gone down, but is still a significant value. The Hamming distance does not apply because the two strings are of equal length. If we were to pad the second string with a blank at the end to make them equal length, the Hamming distance between the two strings would now be 14, an