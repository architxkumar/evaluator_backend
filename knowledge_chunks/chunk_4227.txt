ne with it. For some sentences, whose intended effect is clearly declarative, that is precisely the correct thing to do, But for other sentences, including this one, the intended effect is different. We can discover this intended effect by applying a set of rules that characterize cooperative dialogues. In this example, we use the fact that when the user claims to want something that the system is capable of performing, then the system should go ahead and do it. This produces the final meaning shown in Fig. 15.5. Meaning instance Commanding agent: User068 performer : This-System object : P27 P27 instance : Printing agent: This-System object: FY Fig. 15.5 Representing the Intended Meaning The final step in pragmatic processing is to translate, when necessary, from the knowledge-based representation to a command to be executed by the system. In this case, this step is necessary, and we see that the final result of the understanding process is Natural Language Processing 291 end oesniectanieasisinat ONSst ONICHS Gt Rem UMUs SSSSTASESIHANAN Ipr Avsmith/stulf.init where Ipr is the operating system's file print command. Summary At this point, we have seen the results of each of the main processes that combine to form a natural language system, In a complete system, all of these processes are necessary in some form. For example, it may have seemed that we could have skipped the knowledge-based representation of the meaning of the sentence since the final output of the understanding system bore no relationship to it. But it is that intermediate knowledgebased representation to which we usually attach the knowledge that supports the creation of the final answer. All of the processes we have described are important in a complete natural language understanding system. But not all programs are written with exactly these components. Sometimes two or more of them are collapsed, as we will see in several sections later in this chapter. Doing that usually results in a system that i