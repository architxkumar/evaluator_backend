sive gameapure strategy forplayer
icorresponds toanaction foreachinformation setinvolving thatplayer. Soin Figure17.13,
one pure strategy forplayer 1 is raise when in I (that is, when I have an ace), and check
1,1
when in I (when I have a king). In the payoff matrix below, this strategy is called rk.
1,2
Similarly, strategy cf for player 2 means call when I have an ace and fold when I have a
king. Since this is a zero-sum game, the matrix below gives only the payoff for player 1;
player2alwayshastheopposite payoff:
2:cc 2:cf 2:ff 2:fc
1:rr 0 -1 6 1 7 6
1:kr -1 3 -1 6 5 6 2 3
1:rk 1 3 0 1 6 1 2
1:kk 0 0 0 0
This game is so simple that it has two pure-strategy equilibria, shown in bold: cf for player
2 and rk or kk for player 1. But in general we can solve extensive games by converting
to normal form and then finding a solution (usually a mixed strategy) using standard linear
programming methods. That works in theory. But if a player has I information sets and
a actions per set, then that player will have a I pure strategies. In other words, the size of
the normal-form matrix is exponential in the number of information sets, so in practice the
Section17.5. Decisionswith Multiple Agents: Game Theory 677
approach works only forvery small game trees, on the order of a dozen states. A game like
Texashold em pokerhasabout1018 states,makingthisapproach completelyinfeasible.
What are the alternatives? In Chapter 5 we saw how alpha beta search could handle
games of perfect information with huge game trees by generating the tree incrementally, by
pruningsomebranches,andbyheuristicallyevaluatingnonterminalnodes. Butthatapproach
does not work well forgames with imperfect information, for two reasons: first, it is harder
toprune,becauseweneedtoconsidermixedstrategiesthatcombinemultiplebranches,nota
purestrategythatalwayschoosesthebestbranch. Second,itishardertoheuristicallyevaluate
anonterminal node,because wearedealing withinformation sets,notindividual states.
Koller et al. (19