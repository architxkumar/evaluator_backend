associated cost. Starting with the uninformed and conservative Branch Bound algorithm (or Dijkstra s Algorithm), we added a heuristic function to exert a pull towards the goal on the search frontier. The resulting algorithm A is admissible when the heuristic function underestimates the distance to the goal. That is, the algorithm A is guaranteed to find the optimal solution, even if the heuristic function makes errors in judging which of the candidates is closer to the goal. Further, if the heuristic function is consistent, underestimating the cost of each move, the algorithm keeps finding optimal partial paths as it progresses. The main drawback of A is that space requirement tends to grow rapidly with depth, because heuristic functions are rarely perfect. This limits the size of problems that can be tackled. DA is an iteratively deepening algorithm that uses fvalues to limit depth first search depth. Recursive Best First Search is an improvement that uses heuristic to guide search, but backtracks when necessary. Both the algorithms face problems on search spaces that are graphs because they find multiple paths to the same nodes. Recent problems from computational biology have thrown up such problems, spurring further research into the area. In particular, the problem of sequence alignment has posed new challenges. These problems were approached with algorithms that traded space for time. One strategy is pruning the CLOSED list, but at the expense of having to spend extra time reconstructing solutions found. The reconstruction procedure embodies a divide-and-conquer strategy, adopted from earlier work in dynamic programming. For problems where the search space itself grows exponentially, the list OPEN is more of a problem. Beam Search prunes OPEN to operate with space growing only linearly with depth, but at the cost of completeness. The idea of a beam stack to do additional bookkeeping allows the Beam Stack Search to backtrack even after finding the first solution