uces to 1790 from several billion combinations (Winston, 1992). The algorithm developed by Waltz for propagating constraints is essentially an arcconsistency algorithm similar to AC-3 algorithm described above (Waltz, 1975). The experiments conducted by Waltz showed that the constraint propagation pruned the domains of the edges dramatically, often to only the labels occurring in a solution. 9.4 Higher Order Consistency Arc consistency or 2-consistency ensures that only matching labels from two related domains remain in a CSP, and for every label in a domain, there is a supporting label in a neighbouring domain. But achieving arc consistency does not mean that the variables that remain will necessary be part of a solution. In fact, it is even possible that there might not be a solution. Consider the map colouring problem with three nodes and two colours. Problem CSP4 ae C) ( X4, Xa, Xa , fr b , rb , 1, DY, (x4 Xp, x4 Xg, Xp X3, This problem is already arc consistent, but there is no solution to the problem. This problem is not path consistent. 9.4.1 Path Consistency A CSP is said to be path consistent or 3-consistent if every pair of consistent variable instantiations can be extended to a third variable. Let the given instantiation or compound label be x a, y b . This instantiation is consistent if a, b Ryy. The two variable set x, y is said to be path consistent with respect to a variable z if for every such compound label a, b , there exists a value c D, such that a, c Ryz and? c, b Rzy. That is, there is a path from a to b via c. Observe that we do not require the variables to participate only in explicit relations because we can take the absence of an explicit constraint as representing a universal relation that allows any pairing of values. As we shall see, enforcement of path consistency results in tightening of all relations, removing pairs that are not path consistent. In the process, a new explicit relation may be inferred. Arc consistency ensures that for 