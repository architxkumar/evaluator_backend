source composition owl:equivalentProperty rdf:resource musicScoreBy owl:ObjectProperty The following constraints on properties, specified by owl:Restriction, are equivalent to ALL r d , FILLS r c , and EXISTS 1 fA of DL respectively. Let us say we define a class called 9symphonies that contains the nine symphonies composed by Beethoven. We could then define the class of people beenutShroeder who are real fans of Beethoven s symphonies by using the ow l:allValuesFrom, which is the universally quantified statement of DL. The following statement says that beenutShroeder is the set of people who love to listen only to Beethoven's symphonies. owl:Class rdf:ID beenutShroeder rdfs:subClassoOf owl:Restriction owl:onProperty rdf:resource lovesToListen owl:allValuesFrom rdf:resource " 9symphonies owl:Restriction rdfs:subClassof owl:Class In our DL, we would have expressed this as ALL :lovesToListen 9Ysymphonies . We can define the set (or class) 9symphonies by specifying the composer, in the manner of FILLS rc of DL. owl:Class rdf:ID Ssymphonies rdfs:subClassof owl:Restriction owl:onProperty rdf:resource composedBy owl:hasValue rdf:resource ludwigVanBeethoven owl:Restriction rdfs:subClassof owl:Class We can define the set of people rea MusicLover who like to listen to at least one of Beethoven s symphonies, whatever else they may listen to. This is equivalent to the extension D-EXISTS n r dj defined in the previous section, with n 1. Equivalently, we might think of the statement below as EXISTS 1 r' where r' RESTR r d . owl:Class rdf:ID realMusicLover rdfs:subClassof owl:Restriction owl:onProperty rdf:resource lovesToListen owl:someValuesFrom rdf:resource 9symphonies owl:Restriction rdfs:subClassof owl:Class Observe that in all the three definitions above, the class is defined as a subclass of an unnamed class defined by the ow :Restriction construct. OWL also allows one to define a class by enumerating its elements using the owl:oneOf construct. For example, we can define th