s have the same variables and the same methods. They also respond to the same set of messages called the protocol of the class. Each class in a hierarchy inherits the variables and methods of all of its parents or superclasses of the class. When a message is sent to an object, a check is first made to see if the methods for the object itself or its immediate class can perform the required task. If not, the methods of the nearest superclass are checked. If they are not adequate, the search process continues up the hierarchy recursively until methods have been found or the end of a chain has been reached. If the required methods are not found, an error message is printed. Some OOSs permit classes to have two or more direct superclasses (Stefik and Bobrow. 1986). For example, Stereo System may have superclasses of Appliances, .Luxury000ds, and Fragile Commodity. As such, a stereo object may inherit characteristics and methods from all three superclasses. When this is the case, an inheritance precedence must be defined among the superclasses. One approach would be to try the leftmost superclass path in the hierarchy first. If applicable methods are not found up this path, the next leftmost path is taken. This process continues progressively shifting to the right until a method is found or failure occurs. An OOS will have many predefined classes. For example, a few of the classes for the Smailtalk family and their hierarchical structure are depicted in Figure 8.4. Each of the classes depicted in Figure 8.4 has a number of methods that respn J to the protocol for the class. A class may also inherit methods from a superclass. For example, all classes inherit the method an Object" which answers true if the receiver and an Object are the same, and answers false otherwise. /I\ /\ PInt Oiry We Fih Grir.s Fruit Vegeobl Beef Chicken /N Citrus Noncitrus Lenon Orsnge Grapefruit Figure 9.3 A c12, hierarchy of foods. Sec. 8.4 Simulation Example Using an OOS Program 155 Obj.ct Magnit