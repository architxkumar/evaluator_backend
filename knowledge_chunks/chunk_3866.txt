aints (if it is right), A guess on a less constrained letter, on the other hand, provides less information. The result of the first few cycles of processing this example is shown in Fig. 3.14. Since constraints never disappear at lower levels, only the ones being added are shown for each level. It will not be much harder for the problem solver to access the constraints as a set of lists than as one long list, and this approach is efficient both in terms of storage space and the ease of backtracking. Another reasonable approach for this problem would be to store all the constraints in one central database and also to record at each node the changes that must be undone during backtracking. Cl, C2, C3, and C4 indicate the carry bits out of the columns, numbering from the right. Initially, rules for propagating constraints generate the following additional constraints: M=1, since twe single-digit numbers plus a carry cannot total more than 19. S=8or9, since S +M +C3 > 9 (to generate the carry) and M = 1,8 + 1+C3>9,so$+C3> 8 and C3 is at most I. Q=0, since S + M(1) + C3 (<= 1) must be at least 10 to generate a carry and it can be at most 11. But M is already 1, so O must be 0. * N=Eor E + 1, depending on the value of C2. But N cannot have the same value as E. So N = E+ 1 and C2 is 1. Heuristic Search Techniques 71 In order for C2 to be 1, the sum of N + R + Cl must be greater than 9, so N + R must be greater than 8. N+R cannot be greater than 18, even with a carry in, so E cannot be 9, At this point, let us assume that no more constraints can be generated. Then, to make progress from here, we must guess, Suppose E is assigned the value 2. (We chose to guess a value for E because it occurs three times and thus interacts highly with the other letters.) Now the next cycle begins. : The constraint propagator now observes that: N=3,since N=E+1. e R=8or9, since R +N (3) + Cl (1 or 0) =2 or 12. But since N is already 3, the sum of these nonnegative numbers cannot be less than 3