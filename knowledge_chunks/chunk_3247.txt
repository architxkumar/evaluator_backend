in the following: lsetq y '(a b cl) (ABC) - -lsetq x Id e I)) DEE) - -(defuri local-var (a) )setq V (coos s V))) LOCAL-VAR - -(local-var 61 (6 A B ) (DEE) (ABC) The variable r in the defun is local in scope. It reverts hack to its previous value Mier the function local-vtr is exited. The variable v. on the other hand. is global. It is accessible from any procedure and retains its value unless reset with sctq. 32 LISP and Other Al Programming Languages Chap. 3 The let and prog construct', also permit the creation of local variables. The s\ ritas for the let function is (let ( ( var salt) ( var, viii,)... I. <s sshere each var, is a different variable name and val, is an initial value assigned to each ar. respectively When let is executed. each val, is evaluated and assigned to the corresponding vat,. and the s-expressions which follow are then evaluated in order. The value of the last explession esiiluated is then returned If an initial lilt Is 1101 irichided %k it al,, It is issigtted nil. and the parentheses enclosing II tut\ he iitrtille&l - (let ox a) lv h) )z el) eons ii leor's y I list l Ill (ABC) The prog Itinction is suntlar to let in that the lirs I arguments billowing It are a list of local variables \%,here each element is either it name or a list containing a 'ariahle name and its initial value. This is followed by the body of the proc. and any number of s-expressions. Prog executes list 5-expressions in sequence and returns nil unless it encounters it neil Oil call named mel u in. In [hiiss case the single argument 01. return is evaluated and returned. Piisg also ficrittils the use of unconditional go statements and lahels. (atoril labels) to identity the go-to transfer locations. With the go and label statements. prog permits the wri Ii nc of unstructured programs ari,d . therefore, is not recommended for general use. ,\ri e;irnplc of it function like riirmih ( iiieiiiher) which uses iteration. will illustrate this usc he iiinn Iunitiorr iiietrmh requir