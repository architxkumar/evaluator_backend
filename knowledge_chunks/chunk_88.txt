e of which is ten billion times larger than the other. Also, interestingly, George Gamow had written a book called One, two, three, ... Infinity (Gamow 71) to highlight a similar observation about comprehending large numbers. 2.5.3 Space Complexity For assessing space complexity, we analyse the size of the OPEN list. That is, the number of candidates that the search keeps pending for examination in the future. Here again, we are ignoring the size of CLOSED, which as we know, does grow exponentially, but our interest is in relative measures. Moreover, we will later look at ways to prune the CLOSED list in more detail. Figure 2.25 shows the OPEN and the CLOSED lists at different stages of search in a depth-bounded tree of branching factor 3. The double circle shaded nodes are the ones on CLOSED, and the unfilled nodes are the ones on OPEN. DFS In a general search tree, with a branching factor b, DFS dives down some branch, at each level, leaving (b 1) nodes in OPEN. When it enters the depth d, it has at most Opes nodes in the OPEN list, where Oprs (b- 1)(d-1) b d(b 1) 1 Thus, the size of OPEN is linear with depth. In fact, as the search progresses from the left to right, the number of candidates at each level decreases, as shown in Figure 2.26. Note that the process of backtracking happens automatically when search reaches a dead end. If the examined node has no successors, the next node in OPEN is then picked up. This could be a sibling of the node just examined, or if it has no siblings left, a sibling of its parent. Thus, as search exhausts some deeper part of the tree, it automatically reverts to shallower nodes waiting in the OPEN list. BFS Breadth First Search pushes into the tree level by level. As it enters each level at depth d, it sees all the b nodes ahead of it in OPEN. By the time it finishes with these nodes, it has generated the entire next level and stored them in OPEN. Thus, when it enters the next level at depth (d 1), it sees b ") nodes in the OPEN 