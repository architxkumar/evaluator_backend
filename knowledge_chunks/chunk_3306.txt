OUT). Then n3, which depends on n5, must also be retracted. This, in turn, changes the status of n2 to be a justified node. The resultant belief set is now that the bird Cybil Can fly. To represent a belief network, the symbol conventions shown in Figure 5.2 are sometimes used. The meanings of the nodes shown in the figure are (I) a premise is a true propositon requiring no justification. (2,) an assumption is a current belief that could change, (3) a datt,imjs tither a currently assumed or IE derived belief, and (4) justifications are the belief (node) supports, consisting of supporting antecedent node links and a consequent node link. TABLE 5.1 EXAMPLE NODES IN A DEPENDENCY NETWORK Node Status Meaning Support list Comments ni IN Cybil is a bird (SL ( ) ( )) a premise n2 OUT Cybil can fly (SL In 1) (0)) unjustified betiel n3 IN Cybil cannot .fly (SL (n5) (n4)) justified belief n4 OUT Cybil has wings (SLOe) retracted premise n5 IN Cybil is an Ostrich (3LO) a premise 0 Sec. 5.2 Truth Maintenance Systems 85 Promises Assumptions D.lum Justifications KIDI_lc D Flpre 5.2 Belief network node meanings. An example of a typical network representation is given in Figure 5.3. Note that nodes T, U. and W are OUT since they lack needed support from P. If the node labeled'P is made IN for some reason, the TMS would update the network by propagating the 'inness" support provided by node P to make T. U. and W IN. As noted earlier, when a contradiction is discovered, the TMS locates the source of the contradiction and corrects it by retracting one of the contributing sources. It does this by checking the support lists of the contradictory node and going directly to the source of the contradiction. It goes directly to the source by examining the dependency structure supporting the justification and determining the offending nodes. This is in contrast to the naive backtracking approach which would search a deduction tree sequentially, node-by-node until the contradictory node is reach