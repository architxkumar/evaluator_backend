live(Marcus,now) based on the statements given in Section 5.3. We have added two ways of generating new clauses, in addition to the resolution rule: Substitution of one value for another to which it is equal. Reduction of computable predicates. If the predicate evaluates to FALSE, it can simply be dropped, since adding V FALSE to a disjunction cannot change its truth value. If the predicate evaluates to TRUE, then the generated clause is a tautology and cannot lead to a contradiction. 5.4.6 The Need to Try Several Substitutions Resolution provides a very good way of finding a refutation proof without actually trying all the substitutions that Herbrand s theorem suggests might be necessary. But it does not always eliminate the necessity of trying more than one substitution. For example, suppose we know, in addition to the statements in Section 5.1, that hate(Marcus, Paulus) hate(Marcus, Julian) Now if we want to prove that Marcus hates some ruler, we would be likely to try each substitution shown in Figure 5.13(a) and (b) before finding the contradiction shown in (c). Sometimes there is no way short of very good luck to avoid trying several substitutions. 5.4.7. Question Answering Very early in the history of AI it was realized that theorem-proving techniques could be applied to the problem of answering questions. As we have already suggested, this seems natural since both deriving theorems from axioms and deriving new facts (answers) from old facts employ the process of deduction. We have already shown how resolution can be used to answer yes-no questions, such as ls Marcus alive? In this section, we show how resolution can be used to answer fill-in-the-blank questions, such as When did Marcus die? or 122 Artificial Intelligence CARA LD NELLA RRS Who tried to assassinate a ruler? Answering these questions involves finding a known statement that matches the terms given in the question and then responding with another piece of that same statement that fills the slot d