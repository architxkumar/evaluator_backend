U years" . Stochastic Local Search (SLS) methods (Hoos and Stutzle, 2005), on the other hand, can find very good solutions quite quickly. For example, for randomly generated problems of 25 million cities, a solution quality within 0.3 percent of the estimated optimal solution was found in 8 CPU days on an IBM RS6000 machine (Applegate, 2003). More results on performance can be obtained from the Website for the DIMACS implementation challenge on TSP (Johnson et al., 2003) and (Cook, 2006). Some more interesting TSP problems available at (Cook, 2006) are: The World TSP -A 1,904,711-city TSP consisting of all locations in the world that are registered as populated cities or towns, as well as several research bases in Antarctica; National TSP Collection a set of 27 problems, ranging in size from 28 cities in Western Sahara to 71,009 cities in China. Thirteen of these instances remained unsolved, providing a challenge for new TSP codes, and; VLS TSP Collection a set of 102 problems based on VLSI data sets from the University of Bonn. The problems range in size from 131 cities up to 744,710 cities. TSP problems arise in many applications (Johnson, 1990), for example circuit drilling boards (Litke, 1984), where the drill has to travel over all the hole locations, X-ray crystallography (Bland and Shallcross, 1989), genome sequencing (Agarwala, 2000) and VLSI fabrications (Korte, 1990). These can give rise to problems with thousands of cities, with the last one reporting 1.2 million cities. Many of these problems are what are known as Euclidean TSPs, in which the distance between two nodes (cities) is the Euclidean distance. One can devise approximation algorithms that work in polynomial time. Arora (1998) reports that in general, for any c 0, there is a polynomial time algorithm that finds a tour of length at most (1 1 c) times the optimal for geometric instances of TSP, which is a more general case of an Euclidean TSP. Special cases of TSPs can be solved easily. For exampl