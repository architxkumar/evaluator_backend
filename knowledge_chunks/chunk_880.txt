for example, aasutosh.Friend. Of course, there may be a longer connection like for example abheek.Father.Friend.FanOf which would stand for the person who Abheek s father s friend is a fan of. In general, we denote such role chains by letters like o and 0. In the example containing Abheek, the two individuals involved in the rule of inference were abheek and abheek. FanOf. The latter refers to any person who Abheek is a fan of, but becomes identified with Gerrard because of the description FILLS :FanOf gerrard in Abheek s description. In the case of anonymous individuals like the friends of Aasutosh, the corresponding elements are aasutosh.Friend and aasutosh.Friend.FanOf. The inference rule may be generalized as follows, If there exists a constant c; and a (possibly empty) role chain o such that we can add (c, - 0, d1) to the knowledge base, and that we can add (c; - 0 - r, do), and c, : 0 - ris identified with cp by means of a FILLS r co statement, and if d; contains the information EXISTS 1 and ALL r e then we can augment the information about co to the normalized version of AND dp e . 14.7.7 Limitations of DL Description logics give us a logical basis for constructing taxonomies. We are compelled to be precise, and the super class subclass relations are determined strictly by the descriptions. The fact that we need precise descriptions will not allow koalas to be described as a type of bear, or whales to be a type of large fish, or a civet to be a type of cat. Inheritance, or subsumption, is strict in DL. If a concept ds, is subsumed by a concept super then elements of ds, must inherit properties associated with duper. There is no question of exceptions. The class-subclass inference in DL is determined by structure matching which has time complexity linear in the length of the descriptions, as opposed to theorem proving in FOL that can, in the worst case, be intractable. Observe that though there is a recursive element in matching components of the form ALL r d 