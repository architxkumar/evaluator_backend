, R42 Rog Raq a, c , a, d , b, d , c, a d, a , d, b R13 Req a, b , a, d , b, a , b, c , c, b , c, d , d, a , d, c R14 a, b , a, c , b, a , b, c b, d , c, a , c, b , c, d , d, b , d, c The most straightforward approach to solve CSPs is by search, like in state space search. The difference is that in state space search algorithms studied in the preceding chapters, one can only test a board with all the queens placed, while in CSP, one can check the constraints for a partial placement as well. For example, after placing the first queen, one will try the second one only on locations that are allowed by the constraints between the first two queens. Further, it is possible to look ahead at the effects of partial placements to try and spot a problem well before it occurs. One can reduce the domains of all queens as and when each queen is placed. Assuming that we place queens in their given natural order, and place each queen on the leftmost available column, the situation after placing queen 1, and after the first four queens is shown in Figure 9.3 for a 6-queen problem. After the first queen is placed, the crosses on the board on the left indicate squares on which no queen can be placed. This is equivalent to deleting values that will not be allowed from the domains of each future queen . tw tw 3 3 4 4 5 5 6 6 FIGURE 9.3 Placing each queen on the leftmost available column. The board after placing 1 queen is on the left and the after 4 queens is on the right. The crosses represent values deleted from the domains of all queens. We can see that after placing queen 4, there is no place left for queen 6. As one can see from the figure on the right, after the first four queens have been placed, the domain of queen 6 has already become empty. Thus, a search algorithm can backtrack without even trying to place the fifth queen. Before we look at search, we look at the idea of constraint propagation or consistency establishment. Even before starting search, one can do a certain amo