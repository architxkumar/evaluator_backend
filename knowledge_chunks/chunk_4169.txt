The manipulation of these state descriptions was done using a resolution theorem prover. So, for example, the effect of the operator UNSTACKC(, y) could be described by the following axiom. (In al! the axioms given in this section, all variables are universally quantified unless otherwise indicated.) (CLEAR(,, s) \ ONG, y, 8)] 2 [HOLDING(x, DO(UNSTACK a, y), 5)) A CLEAR(y, DOCUNSTACK(:, y), 5))] Here, DO is a function that specifies, for a given state and a given action, the new state that results from the execution of the action. The axiom states that if CLEAR(x) and ON(x, y) both hold in state s, then HOLDING(@) and CLEAR() will hold in the state that results from DOing an UNSTACK(, y), starting in state s. If we execute UNSTACK(A, B) in state SO as defined above, then we can prove, using our assertions about SO and our axiom about UNSTACK, that in the state that results from the unstacking operation (we call this state $1), 252 Artificial Intelligence LEELA AGAR PS IET EEATI LA AAT LENE SELES EEE OE HOLDING(A, $1) A CLEAR(B, $1) But what else do we know about the situation in state $1? Intuitively, we know that B is still on the table, But with what we have so far, we cannot derive it. To enable us to do so, we need also to provide a set of rules, called frame axioms, that describe components of the state that are not affected by each operator. So, for example, we need to say that ONTABLE(z, 8) ~ ONTABLE(z, DO(UNSTACK(x, y), 5)) This axiom says that the ONTABLE relation is never affected by the UNSTACK operator. We also need to say that the ON relation is only affected by the UNSTACK operator if the blocks involved in the ON relation are the same ones involved in the UNSTACK operation. This can be said as [ON(m, n, 8) An EQUAL(n, x)] 3 ON(m, , DOCUNSTACK(m, y), s)) The advantage of this approach is that a single mechanism, resolution, can perform all the operations that are required on state descriptions. The price we pay for this, however, is that the nurnber of