nly about 10% of the questions presented to it. The LIFER System LIFER (Language Interface Facility with Ellipsis and Recursion) was described briefly in Section 12.2 under semantic grammars. It was developed by Gary Hendnx (1978) and his associates to be used as a development aid and run-time language interface to other systems such as a data base management system. Among it S special features are spelling corrections, processing of elliptical Inputs, and the 'ability of the run-time user to extend the language through the use of paraphrase. LIFER consists of two major components, a set of interactive functions for language specifications and a parser. The specification functions are used to define an application language as a subset of English that is capable of interactirl E with existing software. Given the language specification, the parser Interprets the lantiage inputs and translates them into appropriate structures that interact with the application software. In using a semantic grammar. LIFER systems incorporate much semantic information within the syntax. Rather than using categories like NP. VP, N. and V. LIFER uses semantic categories like <SHIP-NAME> and <ATTRIBUTE> which match ship names or attributes. In place of yntactic patterns like NP VP. semantic patterns like What is the <ATTRIBUTE> of <SHIP>? are used. For each such pattern, the language definer supplies an expression with which to compute the interpretations of instances of the pattern. For example, if LIFER were used as the front end for a database query system, the interpretation would he for a database retrieval command LIFER has proven to be effective as a front end (nt a number of systems. The main disadvantage, as noted earlier, is the potentially large number of patterns that may be required for a system which requires many. diverse patterns. The SHRDLU System SHRDLU was developed by Terry Winograd as part of his doctoral work at M.I.T. (1972, 1986). The system simulates a simple robot 