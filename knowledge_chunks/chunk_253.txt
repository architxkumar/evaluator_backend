ighthand side, the effect of using the rule. The other direction is also possible. The right-hand side can be used as a match pattern and the left-hand side defines the effect of using the rule. Such a strategy is called backward chaining. However, the two examples differ in another aspect. The example of production that reduces dinner to Pizza Hut or Saravana Bhavan is operating in a goal-directed fashion. It is saying that if the goal is to have dinner then it could be achieved by going to one of the two restaurants. This form of reasoning is also called backward reasoning because the reasoning is done backwards from the goal. The second example, that is in fact a one rule program for sorting an array of numbers, is an example of data-driven reasoning or forward reasoning. This is because the rules are triggered by patterns in the data. The name pattern-directed inference systems has also been used to refer to such systems. The above two rules illustrate the fact that both forward reasoning and backward reasoning can be implemented using forward chaining. In fact, all four combinations of forward and backward reasoning and forward and backward chaining are possible. In Chapter 12, we look at deduction in logic, backward reasoning with backward chaining, and also forward reasoning with forward chaining. In the rest of this chapter, we explore how forward chaining systems have been implemented to provide a platform for encoding problem solving knowledge in the form of rules obtained by domain experts. The idea took off in the seventies in the last century. The aim was to get experts in different domains to articulate their knowledge about the domain in the form of rules. Domain experts were not required to be competent in programming in order to build systems based on their knowledge. They needed only to express their knowledge in the pattern, inference form, and an inference engine would operationalize this knowledge in problem solving activity. Thus, the idea of E