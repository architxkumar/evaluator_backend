ires a few simple transformations. The system first determines the difference between the two expressions and then systematically reduces these differences until Lx is obtained from L, or failure occurs. For example, a comparison of L, and L reveals the difference that R is on the left in L but on the right in Lg This causes a subgoal to be set up to reduce this difference. The subgoal, in turn, balls for an application of the reduction method, namely to rewrite L in the equivalent form L', = (('P - Q) & R). The rest of the solution process follows the path indicated in the tree of Figure 9.6. 9.4 UNINFORMED OR BLIND SEARCH As noted earlier, searcn problems can be classified by the amount of information that is available to the search process. Such information might relate to the problem. .space as a whole or to only some states. It may be available a priori or only after a node has been expanded. Sec. 9.4Un Informed or Blind Search us In a worst can situation the only information available will be the ability to distinguish goal from nongoal nodes. When no further information is known a priori. a search program must perform a blind or uninformed search. 4 blind or uninformed search algorithm is one that uses no information other than the initial state, the search operators, and a test for a solution. A blind search should proceed in a systematic way by exploring nodes in some predetermined order or simply by selecting nodes at random. We consider only systematic search procedures in this section. Search programs may be required to return only a solution value when a goal is found or to record and return the solution path as well. To simplify the descriptions that follow, we assume that only the goal value is returned. To also return, the path requires making a list of nodes on the path or setting back-pointers to ancestor nodes along the path. Breadth-First Search Breadth-first searches are performed by exploring all nodes at a given depth before proceeding to the 