eonetoolthathelpsput
DISJUNCTIVE the axle in place. We need a disjunctive constraint to say that Axle and Axle must not
CONSTRAINT F B
overlapintime;eitheronecomesfirstortheotherdoes:
(Axle 10 Axle ) or (Axle 10 Axle ).
F B B F
This looks like a more complicated constraint, combining arithmetic and logic. But it still
reducestoasetofpairsofvaluesthat Axle and Axle cantakeon.
F F
We also need to assert that the inspection comes last and takes 3 minutes. For every
variableexcept Inspect weaddaconstraintoftheform X d Inspect. Finally,suppose
X
thereisarequirement togetthewholeassembly donein30minutes. Wecanachievethatby
limitingthedomainofallvariables:
D 1,2,3,...,27 .
i
This particular problem is trivial to solve, but CS Ps have been applied to job-shop schedul-
ing problems like this with thousands of variables. In some cases, there are complicated
constraints that are difficult to specify in the CSP formalism, and more advanced planning
techniques areused,asdiscussed in Chapter11.
6.1.3 Variationsonthe CSP formalism
The simplest kind of CSP involves variables that have discrete, finite domains. Map-
DISCRETEDOMAIN
coloring problems andscheduling withtimelimitsarebothofthiskind. The8-queens prob-
FINITEDOMAIN
lem described in Chapter 3 can also be viewed as a finite-domain CSP, where the variables
Q ,...,Q are the positions of each queen in columns 1,...,8 and each variable has the
1 8
domain D 1,2,3,4,5,6,7,8 .
i
Adiscretedomaincanbeinfinite,suchasthesetofintegersorstrings. (Ifwedidn tput
INFINITE
a deadline on the job-scheduling problem, there would be an infinite number of start times
for each variable.) With infinite domains, it is no longer possible to describe constraints by
CONSTRAINT enumerating all allowed combinations of values. Instead, a constraint language must be
LANGUAGE
used that understands constraints such as T d T directly, without enumerating the
1 1 2
set of pairs of allowable values for (T ,T ). Special solution algorithms (which we do not
1 2
L