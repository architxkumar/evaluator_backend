 This is an important and general property of situations in
whichuncertainty isinvolved, andwediscussitfurtherin Chapter16.
MAX
a a a a
1 2 1 2
CHANCE 2.1 1.3 21 40.9
.9 .1 .9 .1 .9 .1 .9 .1
MIN 2 3 1 4 20 30 1 400
2 2 3 3 1 1 4 4 20 20 30 30 1 1 400 400
Figure5.12 Anorder-preservingtransformationonleafvalueschangesthebestmove.
If the program knew in advance all the dice rolls that would occur for the rest of the
game,solving agamewithdicewouldbejustlikesolving agamewithout dice,whichmini-
maxdoesin O(bm)time,wherebisthebranchingfactorandmisthemaximumdepthofthe
game tree. Because expectiminimax is also considering all the possible dice-roll sequences,
itwilltake O(bmnm),wherenisthenumberofdistinctrolls.
Evenifthesearchdepthislimitedtosomesmalldepth d,theextracostcomparedwith
that of minimax makes it unrealistic to consider looking ahead very far in most games of
chance. Inbackgammon nis21andb isusually around 20, butinsome situations canbeas
highas4000fordicerollsthataredoubles. Threepliesisprobably allwecouldmanage.
Another way to think about the problem is this: the advantage of alpha beta is that
it ignores future developments that just are not going to happen, given best play. Thus, it
concentrates on likely occurrences. In games with dice, there are no likely sequences of
moves,because forthosemovestotakeplace, thedicewouldfirsthavetocomeouttheright
way to make them legal. This is a general problem whenever uncertainty enters the picture:
the possibilities are multiplied enormously, and forming detailed plans of action becomes
pointless becausetheworldprobably willnotplayalong.
It may have occurred to you that something like alpha beta pruning could be applied
180 Chapter 5. Adversarial Search
to game trees with chance nodes. It turns out that it can. The analysis for MIN and MAX
nodes is unchanged, but wecan also prune chance nodes, using a bit of ingenuity. Consider
thechance node C in Figure5.11and whathappens toitsvalue asweexamine and evaluate
its children