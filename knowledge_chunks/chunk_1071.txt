er theorem prover Entails. The functions First and Second are list functions that return the first and second element respectively. The function ApplySimpilify substitutes true or false for the belief statements, as per the chosen combination and simplifies the knowledge base. The above formulation of searching for a stable expansion adopts a brute force approach which inspects all possible assignments one by one. In practice, one could adopt a procedure like constraint propagation to fix some values for the Ba; formulas. In particular, if a; is in the KB, only the assignment Baj true should be considered, and if 7a; is in the KB, only Ba; false should be considered (because qj, and a; cannot both be in). We illustrate the process of searching for stable expansions with a smaller version of KB3. KB: Wx Wy (Friend(x,y) A BIsolated(x) A -Blsolated(y) Chat (x,y)) Friend(aditi, shubhgata), Friend(aditi, jennifer), Isolated (jennifer) ) We assume that suitable ground instances of the universal formula can be generated. There are three belief statements involved here Blsolated(aditi), Blsolated(shubhagata), and Blsolated(jennifer). Of these, we only consider Blsolated(jennifer) true in the stable expansions because Isolated(jennifer) is in the KB. e still have four cases to consider. In the following, a formula of the kind (a true D6) is replaced by (a6) and a formula of the kind (a false D6) is removed from the KB, since it reduces to true. 1. Blsolated(aditi) true, Blsolated(shubhagata) true The two implication formulas are, (Friend(aditi,shubhagata)A truea true D Chat(aditi,shubhagata)) true (Friend(aditi,jennifer)A trueatrue Chat(aditijennifer)) true and the resulting knowledge base is KBs 1 Friend(aditi, shubhgata), Friend(aditi, Jennifer), lsolated(jennifer) This is not a stable expansions since both solated(aditi)and Isolated(shubhagata) are not entailed, as required by the stability criterion 2. 2. Blsolated(aditi) false, Blsolated(shubhagata) false The two implic