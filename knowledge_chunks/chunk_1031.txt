ry vector is then compared against each document vector using the cosine similarity score, and the documents are ranked in descending order and presented to the user. The retrieval scheme described above has a practical limitation, in that it involves comparing the query vector sequentially with each document vector. A solution to this problem is the use of inverted file indices where a mapping is created from a word to the documents it occurs in. The advantage with this data structure is that we can restrict search to documents that contain at least one of the query terms, and thus avoid comparisons with completely unrelated documents. Figure 16.12 shows an example of an inverted file. Elec Z 2 s 2 4 2 5 3 3 4 ARE S85 13 8 2 oie 1 i 1 filtenng i - indexing ted f clustenng . decompose p Pilates ma trix b Doc 9) factorise i Figure 16.12 Inverted File Index for a toy document collection. Outside the Vector Space Model, there exist a few other interesting R formalisms like the Probabilistic Model and the Network Model, of which the former has attracted considerable attention in the R community over the last decade. However, this is out of the scope of the current chapter, interested readers are directed to (Rijsbergen, 1979) which has an introductory coverage of this topic. 16.3.2 Concept based Information Retrieval The R system, described in Section 16.3.1, has several limitations. The foremost among them is its assumption that words are unrelated to each other, which is obviously not true. We would expect a query on heart attack to retrieve documents on cardiac arrest as well. This motivates research on concept based R, which aims at representing both documents and queries in terms of their underlying concepts, so that the retrieval is, by and large, robust to word choice variability. In recent years, there is a significant thrust on coming up with appropriate representations for concepts, and exploiting different knowledge sources for building these concept represen