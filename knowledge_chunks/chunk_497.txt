tions The plans produced by Graphplan may have actions that occur in the same layer. This means that they could be done in parallel without affecting the outcome. Moreover, if one wants linear plans then these actions could be linearized in any order. The mutex relations identify a pair of actions or propositions that cannot be present in the same layer in a plan. Two actions a A; and b A; are mutex if one of the following holds, 1. Competing Needs There exist propositions p preconditions(a) and Ppepreconditions(b) such that pz and pp are mutex (in the preceding layer). 2. Inconsistent Effects There exists a proposition p such that peeffects (a) and peeffects"(b) or vice versa. The semantics of these actions in parallel are not defined. And if they are linearized then the outcome will depend upon the order. 3. Interference There exists a proposition p such that pepreconditions(a) and peeffects"(b) or vice versa. Then only one linear ordering of the two actions would be feasible. 4. There exists a proposition p such that pepreconditions(a) and peeffects-(a) and also pe preconditions(b) and peeffects"(b). That is, the proposition is consumed by each action, and hence only one of them can be executed. This condition can be seen as a special case of the condition 3 in which neither linearization is allowed. Two propositions peP; and qeP; are mutex if all combinations of actions a, b such that acA; and beA; and peeffects (a) and q effects (b) are mutex. Observe that if two propositions are not mutex in a layer, they will be not mutex in all subsequent layers because of the Noop actions. 10.1.3 Building the Planning Graph The process of building the planning graph continues till either the goal propositions have appeared nonmutex in the planning graph or the planning graph has levelled off. 1. The procedure to extend the planning graph by one level is described in Figure 10.5. The algorithm ExtendGraph takes as input all sets of data for each layer constructed so far, the