 parameter values have been provided by the user, conclusions will be found and will be reported to the user. The chaining continues as long as new matches can be found between clauses in the working memory and rules in the knowledge base. The process stops when no new rules can be placed in the conflict set. Some systems use both forward and backward chaining, depending on the type of problem and the information available. Likewise, rules may be tested exhauslively or selectively, depending on the control structure. In MYCIN. rules in the KB are tested exhaustively. However, when the number of rules exceeds a few hundred, this can result in an intolerable amount of searching and matching. In such cases, techniques such as those found in the RETE algorithm (Chapter 10) may be used to limit the search. Many expert systems must deal with uncertain information. This will be the case when the evidenoe supporting a conclusion is vague, incomplete, or otherwise uncertain. To accommodate Uncertainties, some form of probabilities, certainty factors, fuzzy logic, heuristics, or other methods must bp introduced into the inference process. These methods were introduced in Chapters 5 and 6. The reader is urged at this time to review those methods to see how they may be applied to exp systems. xpining How or Why ['he explanation module provides the user with an explanation of the reasoning process'when requested. This is done in response to a how que' or a why query. To respond to a how query, the explanation module traces The chain of rules fired during a consultation with the user. The sequence of rules that led t Q the conclusion is then printed for the user in an easy to understand human-language style. This permits the user to actually see the reasoning process followed by the system in arriving at the conclusion. If the user does not agree with the reasoning steps presented. they may be changed using the editor. To respond to a why query, the explanation module must be abl