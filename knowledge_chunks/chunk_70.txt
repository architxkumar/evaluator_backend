only implicit. In this implicit space, we visualize the problem as follows. Initially, we are in some given state, or the START state. We desire to be in some state that we will call the GOAL state, as shown in Figure 2.3. The desired state may be described completely, identifying the state, or it could be described partially by some desirable properties; in which case there may be more than one goal state satisfying the properties. The given state being the current state is described completely. This transformation from the start state to the goal state is to be made by a sequence of moves that are available to us in the domain of problem solving. In the beginning, the search algorithm (or agent) can only see the start state. It has access to some move generation operators that determine which states are reachable in one step (see Figure 2.6). The algorithm has to choose one of these moves. Each move applied to a given state transforms it into another state. Our task is to find those sequences of moves that will transform our current (START) state into the desired (GOAL) state. The solution is depicted in Figure 2.4. GOALstate START state FIGURE 2.3 The state space. FIGURE 2.4 The solution is a sequence of moves that end in the GOAL state. There may be more than one solution to a problem. The figure shows one solution with thick arrows, and two alternatives with dotted arrows. 2.1 Generate and Test Our basic approach will be to search the state space looking for the solution. The high level search algorithm has two components; one, to generate a candidate from the state space, and two, to test whether the candidate generated is the solution. The high level algorithm is given below in Figure 2.5. Genezate And Test () while more candidates exist do Generate a candidate 3 Test whether it is a scluticn 4 return FAILURE FIGURE 2.5 A high level search algorithm. The rest of the chapter will be devoted to refining the above algorithm. We assume that the problem domain has