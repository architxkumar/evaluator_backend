ge of FOPL as well as some related logics. Logic is a formal method for reasoning. Many concepts which can be verbalized can be translated into symbolic representations which closely approximate the meaning of these concepts. These symbolic structures can then be manipulated in programs to deduce various facts, to carry out a form of automated reasoning. In FOPL, statements from a natural language like English are translated into symbolic structures comprised of predicates, functions, variables, constants, quantifiers, and logical connectives. The symbols form the basic building blocks for the knowledge, and their combihation into valid structures is accomplished using the syntax (rules of combination) for FOPL. Once structures have been created to represent basic facts or procedures or other types of knowledge, inference flues may then be applied to compare, combine and transform these "assumed" structures into new 'deduced" structures. This is how automated reasoning or inferencing is performed. As a simple example of the use of. logic, the statement 'All employees of the Al-Software Company are, programmers" might be written in FOPL as t Vx) (AI-SOFTWARE-CO-EMPLOYEE(x) -. PROGRAMMER4X)) Here, Yx is read as "for all x" and-. is read as "implies" or "then" The predicates AI-SOFTWARE-CO-EMPLOYEE(x), and PROGRAMMER(x) are read as "if x is an Al Software Company employee," and "x is a programmer" respectively. The symbol x is a variable which can assume a person's name. If it is also known that urn is an employee of Al Software Company, AISOFTWARE-CO-EMPLOYEE(jim) one can draw the conclusion that Jim is a programmer. PROGRAMMER4jim) I? Sec. 4.2 Syntax and Semantics for Propositional Logic The above uegests how knowledge in the form of English sentences can be translated into FOPL statements. Once translated, such statements can be typed into a knowledge base and subsequently used in a program to perform inferencing. We begin the chapter with an introduction to Proposi