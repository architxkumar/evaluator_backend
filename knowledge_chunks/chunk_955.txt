ponents that have their own local similarities, and these local similarities can be aggregated to compute global similarity. Flat cases are easy to implement. One can store them in relational database systems, and this allows us to build commercial systems that contain a large number of cases. However, subsets of attributes may be clumped together and can have their own identity. Different clumps in a case may have some relation with each other, and the case can have its own internal structure. This could have further implications on similarity computation. We shall look at such an object oriented representation later in the chapter. Below, we define a measure that may give a CBR system designer a means to evaluate similarity functions. 15.1.8 Case Cohesion A similarity measure is good if the cases with high similarity also have high utility. In some domains, one can also define a similarity measure for cases using the lesson component. Then, one could define an evaluation measure called cohesion, originally defined for textual, case based reasoning (Lamontagne, 2006). The basic idea is to look for overlap between the set of most similar cases using the description side similarity, with the cases on the solution side similarity. The overlap between the two sets would determine the cohesion of the case base. Figure 15.13 below illustrates the concept. fo ca a , desenption space Wg Sof H Z ee ae 1 1 FIGURE 15.13 Cohesion is defined by the overlap between the set of cases that are the most similar to a case on the problem side similarity, and the set of cases that are most similar on the solution side similarity. Let the two sets Sp and S, be constructed using thresholds tp and t, using similarity functions simpand sim,. That is, Sp(C, CB) case CB simp(case, C) tp and S,(C, CB) case CB sim,(case, C) t, Case cohesion can then be defined as, cohesion(C) Sinter(C, CB) Sunion(C, CB) Sinter(C, CB) Sp(C, CB) N S,(C, CB) and Sunion(C, CB) Sp(C, CB) U S,(C, CB) If the two sets