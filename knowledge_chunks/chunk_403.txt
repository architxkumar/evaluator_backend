ted into many other Scrabble programs, including Maven. The DAWG is conceptually similar to the Rete net we studied in Chapter 6, in the sense that only desired matches are done. A word is like the left-hand side of a rule. In this case, it also behaves like a finite state machine whose accepting states are nodes ending in meaningful words. Poeeen FIGURE 8.41 A cross-check precomputes what letters can be placed meaningfully in the squares marked ? . An anchor is an empty square adjacent to an existing letter where a word can be placed. In the figure, a word starting with T may be made at the empty square shown next to the letter T . One problem with the above algorithm is that it constructs words from left to right. In Scrabble, however, one needs to hook a new word from any of its letters that satisfies the cross-check constraints shown in the above figure on the square marked ? . For example, if a player has the letter R then she could think of a horizontal word below LATE extending it to LATER . The only constraint on the new word is that it should have an R in it. Appel and Jacobson s algorithm is forced to try all combinations of words from left to right, because the DAWG is organised in this fashion. In a new algorithm (Gordon, 1994), the DAWG structure is replaced by another structure called GADDAG, which is bidirectional in nature2 . Unlike the DAWG, which allows one to search only from the first letter, the GADDAG allows one to search in both directions from a letter anywhere in the word. The size of the GADDAG is reported to be about fives times the DAWG, but it generates words twice as fast. In a world of expanding computer memories, this is perhaps a good trade-off, specially if time is going to be of essence, as it is in a tournament. We will not discuss the details here, but the interested reader is referred to the paper by Gordon. Play The game is characterized by the following properties, The branching factor is high, ranging from 700 without blank t