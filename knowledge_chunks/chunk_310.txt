t P of action A; is a precondition for action Aj. Action A; is the producer of predicate P, and action A; is the consumer of P. Figure 7.15 illustrates a causal link between the two actions Pickup(A) and Stack(A, B). When the link is established, it represents a commitment on the part of action A; to support the precondition P for action Aj. Once established, the algorithm will have to ensure that the link is not disrupted or clobbered. If it is clobbered during the planning process then it will have to be declobbered. A causal link (A;, P, Aj) is said to have a threat if there exists another action A; in the plan that potentially deletes P, that is, has (not P) in its effects. One may even treat an action as a threat if it produces P, because it threatens to make action A; redundant (McAllester and Rosenblitt, 1991; Kambhampati, 1993). The Given State pickup(B) stack(B, C) unstack(B, C) putdown(B) unstack(C, A) putdown(C) First achieve on(B, C) pickup(A) stack(A, B) A unstack(C, A) putdown(C) pickup(A) stack( A, B) ) Then achieve on(A, B) First achieve on(A, B) unstack(A, B) putdown(A) pickup(B) stack(B, C) SN Then achieve on(B, C) The goal state Figure 7.13 To find an optimal plan for the Sussman anomaly, the algorithm should start off with on(A, B), switch to on(B, C) on the way, and return to on(A, B) again, instead of attempting them linearly. nil ontableA clearA AE onBC clearB ontableC onAB ontableB nil Figure 7.14 The empty plan Mo has two actions. Action Ag produces the start state, while action A. accepts the goal state. If an action A has a precondition P that is not causally linked then we say that P is an open precondition . A solution plan cannot have any open preconditions or threats. Together, the two are also called flaws. It has been shown (Penberthy, 1992) that if a partial plan does not have any flaws then it is a solution to the planning problem. The starting plan containing the two actions (Ap, A..) will be a solution plan only if the goal predi