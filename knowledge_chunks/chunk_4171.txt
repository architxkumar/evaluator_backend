 been discussing are shown in Fig. 13.2. Notice that for simple rules such as these the PRECONDITION list is often identical to the DELETE list. In order to pick up a block, the robot arm must be empty; as soon as it picks up a block, it is no longer empty. But preconditions are not always deleted. For example, in order for the arm to pick up a block, the block must have no other blocks on top of it. After it is picked up, it still has no blocks on top of it. This is the reason that the PRECONDITION and DELETE lists must be specified separately. By making the frame axioms implicit, we have greatly reduced the amount of information that must be provided for each operator. This means, among other things, that when a, new attribute that objects might possess is introduced into the system, it is not necessary to go back and add a new axiom for each of the existing operators. But how can we actually achieve the effect of the use of the frame axioms in computing complete state descriptions? The first thing we notice is that for complex state descriptions, most of the state remains unchanged after each operation. But if we represent the state as an explicit part of each predicate, as Planning 253 cn c AI AO EI AM OEE STACKS(x,y) : CLEARC(y) A HOLDING(x) : CLEAR(y) \ HOLDING(x) : ARMEMPTY / ON(x, y) POU UNSTACK(x,y) ON(x, y) \ CLEAR() A ARMEMPTY -ON(x, y) \ ARMEMPTY : HOLDINGS(x) A CLEARC(y) Pov PICKUP(x) ; CLEAR(x) \ ONTABLE(x) /\ ARMEMPTY : ONTABLE(x) \ ARMEMPTY : HOLDING(x) Pov PUTDOWN(x) P: HOLDING(x) D: HOLDING(x) A: ONTABLE(4) \ ARMEMPTY Fig. 13,2 STRIPS-Style Operators for the Blocks World was done in Green s system, then all that information must be deduced all over again for each state. To avoid that, we can drop the explicit state indicator from the individual predicates and instead simply update a single database of predicates so that it always describes the current state of the world. For example, if we start with the situation shown in Fig. 13.1, we would descr