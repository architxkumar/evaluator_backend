either A or B, we are at a dead end, and will have to backtrack. This is consistent with what happened in the map colouring example. The ordering EDCBA makes the graph of width 1, and induced width41, and it suffices to achieve directional arc consistency or 2-consistency. 9.5.2 Directional Path Consistency We can extend the idea of DAC to Directional Path Consistency (DPC). Here too, we begin with the last variable and call Revise-3 with every pair of variables, both of which are connected to it. DPC may prune the relation, whether implicit or explict, between the parent nodes. But for achieving backtrack-free status (under certain conditions), one must be careful to enforce DAC after DPC to remove unsupported values from those domains as well. Consider a three variable map colouring problem, Da r, b, 9 , Dp r, b, g , De fr and the relations as, A B: Rag (r, b), (r, g), (6, 1), (b, 9), (g, 9), (g, B C: Rec (b, 0), (9, N and A C: Rec (b, 1), (9, N Assuming the order to be ABC, achieving DPC would remove all tuples containing r from Rag. But the value ris still in the domains Da and Dg, and can potentially be selected leading to a dead end. These can be removed by DAC. In this example, the desired effect can be achieved by applying DAC before DPC too, but the reader is encouraged to construct an example in which it is necessary to do so after DPC. Every time a call is made to Revise-3, it may prune the relation between the calling pair of variables. If the relation is implicit then it infers a new explicit relation. This new relation must be added to the constraint graph before proceeding further with DPC. Figure 9.24 shows a map colouring CSP with a chosen ordering of variables. The graph and three implicit relations amongst parents of variable E are shown on the top. Observe that after a call to Revise-3(De, Rcp, Rce, Rep), the relation Rep is introduced into the constraint graph, and after a call to Revise3(De, Rep, Ree, Rep), the relation Rgp is introduced. Next,