f the representation or the list (a (b c (d)) e f) is given in Figure 3.2. Flure 3.2 Reprewetation (or the list (. (b c (4)) el) 40 LISP and Otherogrsmmlngliinguag4s Chap. 3 The boxes with the slash in the figure represent nil. When cons is used to construct a list, the cons-cells we created with pointers to the appropriate elements as depicted in Figure 3.2. The use of such structures permits lists to be easily extended or modified. 3.8 PROLOG AND OTHER Al PROGRAMMING LANGUAGES PROLOG (for PROgramming in LOGic) was invented by Alain Colmerauer and his associates at the University of Marseilles during the early 1970s. PROLOG uses the syntax of predicate logic to perform symbolic, logical computations. It has a number of built-in features (particularly control features) that limit its flexibility but simplify many aspects of programming. Programming in PROLOG is accomplished by creating a data base of facts and rules about objects, their properties, and their relationships to other objects. Queries can then be posed about the objects and valid conclusions will be determined and returned by the program. Responses to user queries are determined through a form of inferencing control known as resolution. This process is described in the next chapter. Facts in PROLOG are declared with predicates and constants written in lowercase letters. The arguments of predicates are enclosed in parentheses and separated with commas. For example, some facts about family relationships could be written as sister(sue,bi$I) parent(ann.sam) parent(joe.ann) male(Joe) female(nn) The first fact is the predicate sister with arguments sue and bill. This predicate has the intended meaning that Sue is the sister of Bill. Likewise, the next predicate has the, meaning that Ann is the parent of Sam, and so on. Rules in PROLOG are composed of a condition or "if' part, and a conclusion or "then" part separated by the symbol :- which is read as "if' (conclusion if conditions). Rules are used to represen