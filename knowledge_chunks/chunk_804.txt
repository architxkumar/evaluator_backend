 or fluent like planToRide one could introduce a generic EC predicate Try(event, time) as was done by Allen (1991) in the Event Calculus to accommodate actions. One could then introduce a rule that says (Try(e, t) A preconditions of action) Happens(e, t)). u Strictly speaking this should be done in two inference steps. In the first step the NOaoan 20 Initiatesf.., ..) formula should be produced, and in the second step FC, is applied to actually initiate the fluent. 22 Provided we have the assertion: deflated(B) 7inflated(B). 23 The interested reader is referred to the many variations the character Cyrano de Bergererac presents to describe his nose (Rostand, 1897). 24 http: en.wikipedia.org wiki Natyashastra 25 but sometimes she does too. 26 especially for Ernest Hemmingway readers 27 http: en.wikipedia.org wiki Garden path sentence Structured Knowledge Representations Chapter 14 First Order Logic (FOL) provides us a language for describing the elements of a universe of discourse, and a mechanism for reasoning about the relations that exist in the universe. The representation is in the form of a set of sentences in the language of FOL, for which set the universe of discourse is a model. Not every true fact need be stated explicitly. Some facts can be deduced. The reasoning that we have seen in Chapter 12 is deductive reasoning, in which the statements that are entailed by the given Knowledge Base (KB) can be ascertained, and made explicit, by an inference engine. To derive the entailed facts, inference engines need to select an appropriate sequence of rules. Every rule that has matching antecedents is a candidate for selection. An inference engine, or theorem prover, picks a rule and applies it, and repeats this process till the goal criterion is met. The task of finding a proof involves search. Most inference engines have built in search strategies. A goal directed backward search engine, like Prolog, picks the clauses in the order in which the user has stated them.