o know how much we do not know and our awareness of the concept of complexity seems to increase. We tend to forego some precise data and allow uncertainty to creep into our perception. This is when we start describing things in a slightly vague and fuzzy manner. For instance after seeing a long list of names, you tell your friend that his name was cited somewhere near the middle of the list. The word near seems to be comprehended effortlessly by the human brain but what of computing systems? What does near mean in this context? Two names below the middle or five above or...? Is there a way we can make these number crunching systems understand this concept? Consider the case of the statement - "Drive slowly". Does it mean you should drive at 10, 20 or 20.5 km/ hour? The answer could be any value or a very different one depending on the context. If it is ascertained in a machine that any speed less than or equal to 20 km/hour means slow speed and anything above is fast, then does it mean that 20.1 km/hour (or 20.01 km/hour for that matter) is fast? This is an exaggeration in the real world. Fuzzy logic deals with how we can capture this essence of comprehension and embed it on the system by allowing for a gradual transition from slow to high speeds. This comprehension, as per Lotfi Zadeh, the founder of the fuzzy logic concept, confers a higher machine intelligence quotient to computer systems. 22.2 CRISP SETS The conventional machine uses crisp sets to take care of concepts like fast and slow speeds. It relates speed to crisp values thereby forming members that either belong to a group or do not belong to it. For example Slow = {0,5,10,15,20,25,30,35,40} 446 Artificial Intelligence eennetne o R anne TASER EEE Ne STEN a TENTERDSARETORT ESS We could mean a crisp set that says that when the value of speed is equal to either of those mentioned in the set then the speed is categorized as slow. This may be modified to a closed interval [0, 40] to include the complete range