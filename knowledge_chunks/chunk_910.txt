st) Town: ConeyIsland 7. Subway (Instr) Go (Dest) Town: ConeyIsland 8. Person (A-Go) Go generalizations of star graphs 9. Living (A-Go) Go 10. Go (Instr) Pub-Trans 11. Go (Dest) Town 12. Go - (Dest) Loc and their combinations into larger graphs... Observe that the process of generalization stops with the signatures of the relations. Sc (A-Go) Living Sc (Dest) Loc Gc (Instr) Pub-Trans Each star graph and its generalization can be expressed as a triple. Some of the triples above are (Go, A-Go, Living), (Go, A-Go, Person), (Go, Dest, Town), and so on. These triples are sorted alphabetically and form three consecutive edges of the FSA, which will be traversed with the tree inputs. Given that every acyclic automaton can be described by the finite list of words belonging to that language, once we have a collection of such triples and their allowed concatenations, we have essentially defined the FSA. When we have two triples, for example, (Go, A-Go, Person) and (Go, Dest, Town) we have different possible interpretations, one in which Go refers to the same action, and one in which it refers to two different ones. These interpretations should be marked differently, and Angelova proposes the construction of equivalent classes in which such identities are distinguished. Not all partitions induced are relevant though, and the relevant ones are marked. The corresponding subgraphs become the objects for retrieval, and the markers are attached to the corresponding final states in the FSA. The same marker may appear as a label for a different final state in the FSA, since the corresponding CG may satisfy more than one query. What remains is to construct a minimal FSA with the set of triples. We will not go into the details here. The interested reader is referred to (Angelova and Mihov, 2008) and (Angelova, 2009). 14.10 Discussion In this chapter, we have looked at various approaches designed to speed up the accessing of related information. In principle, one could have used first o