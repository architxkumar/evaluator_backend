 as the amount of knowledge grows, it becomes harder to access the appropriate things when needed, so more knowledge must be added to help. But now there is even more knowledge to manage, so more must be added, and so forth. Our goal in AI is to construct working programs that solve the problems we are interested in. Throughout most of this book we focus on the design of representation mechanisms and algorithms that can be used by programs to solve the problems. We do not spend much time discussing the programming process required to turn these designs into working programs. In theory, it does not matter how this process is carried out, in what language it is done, or on what machine the product is run. In practice, of course, it is often much easier to produce a program using one system rather than another. Specifically, AI programs are easiest to build using languages that have been designed to support symbolic rather than primarily numeric computation. What is Artificial intelligence? 23 SOLAR SPAS 2A ANNES ASSET ENT NSIT For a variety of reasons, LISP has historically been the most commonly used language for AI programming. We say little explicitly about LISP in this book, although we occasionally rely on it as a notation. There used to be several competing dialects of LISP, but Common Lisp is now accepted as a standard. If you are unfarniliar with LISP, consult any of the following sources: LISP [Winston and Hom. 1989], Common Lisp [Hennessey. 1989], Common LISPcraft [Wilensky, 1986], and Common Lisp: A Gentle Introduction to Symbolic Computation [Touretzky, 1989a]. For a complete description of Common Lisp, see Conumon Lisp: The Reference [Steele, 1990]. Another language that is often used for AI programming is PROLOG, which is described in Chapter 25 And increasingly, as AI makes its way into the conventional programming world, AI systems are being written in general purpose programming languages such as C. One reason for this is that AI programs are ceasing 