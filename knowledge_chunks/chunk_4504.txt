ng because of a loose connection, the robot arm will mindlessly extend forward in search of a nonexistent can. While the CODGER architecture emphasizes data fusion, subsumptior robots emphasize data fission. A series of subsumption robots have been built, and they demonstrate how reactive systems are capable of much more interesting and varied behavior than was previously thought. It is unknown whether these architectures are capable of achieving tasks that seem to require significant amounts of planning. TCA [Simmons and Mitchell, 1989] is an architecture that combines the idea of reactive systems with traditional AI planning. TCA is a distributed system with centralized control, designed to control autonomous robots for long periods in unstructured environments, such as the surface of Mars. TCA particularly addresses issues that arive in the context of multiple goals and limited resources. The architecture provides mechanisms for hierarchical task management and allows action based on incomplete plans. Because robots gather new information by moving through the tworld, TCA permits plans to be terminated early should higherpriority goals arise. Some situations require highly reactive behavior. TCA achieves high-speed response by parallelizing planning and execution whenever possible. For example, in designing walking motions over rough terrain, TCA plans one step, initiates it, and then begins to ptan the next step before the leg motion has been completed. Another program for combining heuristic problem solving with reactivity is called THEO-Agent [Mitchell, 1990}. THEO-Agent contains two subsystems, a reactive engine and a general problem soiver (called THEO Perception and Action 443 SL EN UES SEAR! [Mitchell et a/., 1989]). When the reactive subsystem fails to suggest a course of action, the problem solver creates a plan for the robot. As it executes the plan, the robot uses explanation-based learning to create new reactive modules. Thus, the robot becomes increa