and Claude Shannon published a paper on chess playing programs. Soon afterwards, checkers playing programs appeared, the first one being written in 1951 in the University of Manchester by Christopher Strachey (1916-1975). The program that became well known was by Arthur Samuel (1901-1990) which he demonstrated at the Dartmouth Conference in 1956. The basic components of a program to play checkers, or similar board games, are the search algorithm that peers into the future examining all variations, and the evaluation function that judges how good a board position is. Samuel s program is remembered as the first program that incorporated learning; it would improve with every game it played. This was achieved by tuning the parameters of the evaluation function based on the outcome of the game. This is important because the program chooses between alternative moves eventually based on the values returned by the evaluation function. The better the evaluation, the better would be the choice of the move. The program also remembered the values of board positions seen earlier. Samuel is also credited as being one of the people who invented Alpha-Beta pruning, a method that can drastically cut down on the search effort. In the end, the program became good enough to beat its own creator. One can imagine the kinds of fears that might have been raised amongst people after Frankenstein and RUR. Computers then, by today s standard, were small (in memory size; physically they were huge) and slow. Computing was still an esoteric field. The earliest proponents of artificial intelligence experimented with logic, language and games. Chess and checkers were already a fascination, and considered hallmarks of intelligence. Alex Bernstein had spoken about chess at Dartmouth, and developed the first chess playing program in 1957. There was optimism amongst many that machines would soon be the best chess players around, but skepticism amongst others. Herbert Simon (1916-2001) and Alan Newell 