 instrument data. Once fully operational, the program performed this task with greater speed than an expert spectrometrist, and with comparable accuracy. Figure 6.6 illustrates the kind of search space explored by Dendral. The reader will recognize it as an AO graph. c e an Low . i Nf cC c Oo N Qo oO o o c ? coe . C C N fo) vp ime Figure 6.5 Some of the different candidate structures for CgH;3NO2 generated by CONGEN (Buchanan, 82). The hydrogen atoms are not shown. They can be filled up, based on valence. Figure 6.6 The search space for Dendral is an AO graph (figure adapted from (Mainzer, 2003) Chapter 6). The double line nodes are SOLVED nodes. 6.3 Goal Trees We look at a heuristic algorithm to search goal trees. We assume that we have a heuristic function that estimates the cost of solving each node. The solution of an AO problem involves reduction to a set of primitive problems which have trivial solutions. We will label the primitive problems in the AO graph as SOLVED, to indicate that no further reduction is required. We will assume that SOLVED nodes have a certain cost associated with them. This cost may be zero in problems like symbolic integration, where the solution is directly available. This cost may also be nonzero for some problems. For example, if we were to pose the problem of constructing a house then one of the primitives of our system could be install a door , which would have a cost associated with it. We may also have costs associated with each arc or edge, representing the problem transformation cost. Whatever the costs associated with a problem, we will assume that a heuristic function estimates the total cost of solving a given node. Furthermore, we will require the heuristic function to be a lower bound on the actual cost of solving a node, in order to ensure that the optimal cost solution is found. The argument for underestimating the actual cost is similar to the one presented for Branch Bound and A algorithms seen in Chapter 4. That is, a