ibling Parent or Aunt AND Person Female EXISTS 1 RESTR :Sibling Parent However, while these extensions allow us to define the concept of aunt, it is no longer possible to use structure matching to decide whether one concept is subsumed by another. In the following definition, we assume that EXISTS n 7 is a short form for D-EXISTS nr Thing to allow possible matching. Consider a woman who is related to at least two siblings and all whose siblings are parents. She could be defined in our original DL as follows, Aunty AND Person Female EXISTS 2 :Sibling ALL :Sibling Parent Clearly, the concept Aunty is subsumed by concept Aunt, because an individual who satisfies Aunty also satisfies Aunt. But we are unable to compare the components in description of Aunty with any of the components in the description of Aunt in a piecewise fashion required by structure matching. And structure matching is the procedure that allows us to answer the question of subsumption by just inspecting the two descriptions. Theorem proving in FOL also allows us to compute subsumption, but with no guarantees of speed. Given a domain, DL is a language that talks about subsets in the domain. It allows one level of abstraction in Figure 14.1. It does not allow us to talk about aggregation resulting in other entities extended to reified elements. Extending the DL beyond its strict boundaries can only be done at the cost of foregoing the computationally cheaper structurematching process. Box 14.2: A Family of Description Logics Description Logics is in fact a name for a family of logic-based languages to represent knowledge of domains (Baader and Nutt, 2003). Each language is a little different in expressiveness and consequently has different complexity of making inferences. What is common amongst all is that the basic building blocks in all are concepts, roles, and individuals. Traditionally, the knowledge base is partitioned into two parts. The TBox is concerned with terminological reasoning, or reasoni