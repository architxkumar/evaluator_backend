. i, | 8 Artificial Intelligence ce RNCRNRROt ERRIRRRIRCCRINUMNENINRERAE'.. co It can easily be modified to correct errors and to reflect changes in the world and in our world view. * Tt can be used in a great many situations even if it is not totally accurate or complete. e It can be used to help overcome its own sheer bulk by helping to narrow the range of possibilities that must usually be considered. Although AT techniques must be designed in keeping with these constraints imposed by AT problems, there is some degree of independence between problems and problem-solving techniques. It is possible to solve AT problems without using AI techniques (although, as we suggested above, those solutions are not likely to be very good). And it is possible to apply AI techniques to the solution of non-Al problems. This is tikely to be a good thing to do for problems that possess many of the same characteristics as do AI problems. [n order to try to characterize AI techniques in as problem-independent a way as possible, let s look at two very different problems and a series of approaches for solving each of them. 1.3.1 Tic-Tac-Toe In this section, we present a series of three programs to play tic-tac-toe. The programs in this series increase in: Their complexity Their use of generalizations The clarity of their knowledge The extensibility of their approach. Thus, they move toward being representations of what we call AI techniques. Program 1 Data Structures Board A nine-element vector representing the board, where the elements of the vector correspond to the board positions as follows: 1 2 3 4 5 6 7 8 9 ; An element contains the value 0 if the corresponding square is blank, | if it is filled with an X, or 2 if it is filled with an O. Movetable A jarge vector of 19,683 elements (3 ), each element of which is a nine-element vector. The contents of this vector are chosen specifically to allow the algorithm to work. The Algorithm To make a move, do the following: 1. View the vect