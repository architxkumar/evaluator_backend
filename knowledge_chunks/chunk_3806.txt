ad. 11,2 Fig. 2.13. Two Ways of Deciding That Marcus Is Dead But now consider again the traveling salesman problem. Our goal is to find the shortest route that visits each city exactly once. Suppose the cities to be visited and the distances between them are as shown in Fig. 2.14. Boston |New York] Miami Dallas S.F Boston 250 1450 1700 3000 New York 250 1200 1500 2900 Miami 1450 1200 600 3300 Dallas 1700 1500 1600 1700 S.F. 3000 2900 3300 1700 Fig. 2.14 An Instance of the Traveling Salesman Problem One place the salesman could start is Boston. In that case, one path that might be followed is the one shown in Fig. 2.15, which is 8850 miles long. But is this the solution to the problem? The answer is that we cannot be sure unless we also try all other paths to make sure that none of them is shorter. In this case, as can be seen from Fig. 2.16, the first path is definitely not the solution to the salesman s problem. These two examples illustrate the difference between any-path problems and bestpath problems. Bestpath problems are, in general, computationally harder than any-path problems. Any-path problems can often be solved in a reasonable amount of time by using heuristics that suggest good paths to explore. (See the discussion of best-first search in Chapter 3 for one way of doing this.) If the heuristics are not perfect, the search for a solution may not be as direct as possible, but that does not matter. For true best-path problems, however, no heuristic that could possibly miss the best solution can be used. So a much more exhaustive search will be performed, 7 Of course, representing these statements so that a mechanical procedure could exploit them to answer the question also requires the explicit mention of other facts, such as dead implies not alive. We do this in Chapter 5. Problems, Problem Spaces, and Search Bost a] [Boston] (3000) (280) (3000) 7 [San Francisco} New York] [San Francisco] (1700) 7 4200) 04 Ne [ alias | [Men] 1500) 160 (1500) _ Xi 6e ) New 