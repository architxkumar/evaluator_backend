inite. Given a two block problem in the blocks world domain, there are only four distinct states possible. But the number of candidate plans is infinite, because one can always insert the two actions (pickup(X), putdown(X)) where applicable any number of times. Since the representation does not involve states at all, one cannot check that the same state is being visited again and again. One can, in principle, explore plans of arbitrary length without moving towards a solution. Thus, there is a need to control the search strategy efficiently. One way to do so is to explore plans in an iterative deepening manner, keeping an iteratively increasing bound on the number of actions in the partial plan. This would ensure that plans are considered in the order of increasing length, and the solution plan would be found in finite time. The reader would also have noticed that the PSP algorithm has a backward reasoning flavour, since it looks for ways to resolve open conditions, though the representation is very different from BSSP. While BSSP can run into spurious states, PSP avoids that pitfall having done away with states altogether in its representation. The sequence in which both consider actions can still be similar. The partial plan representation on the other hand is powerful enough to accommodate other search strategies, with some modifications as discussed below. The approaches described below have a flavour of top down or goal-directed problem solving. 7.5.1 Means Ends Analysis Means Ends Analysis (MEA) is a strategy first introduced in a system called General Problem Solver (GPS) (Newell and Simon, 1963). It was one of the first general purpose approach to problem solving, or planning. The basic idea in MEA is to, Compare the given state and the desired state and arrive at a set of differences Choose the most significant difference and look for a plan to reduce that difference recursively Apply the operators chosen and look at the problem again for any more differenc