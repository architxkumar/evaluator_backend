o be rejected. Hence the fitness of such a chromosome is divided by 100 to obtain a low value. This ensures that virtually no employee is working for more than one project. 466 Crossover Artificial Intelligence The crossover process is depicted in Fig. 23.5(a). Since all the chromosomes have a similar configuration in the problem when crossover is effected as shown in Fig. 23.5(a), the employees assigned to project 2 in parent 1 are changed to those assigned to project 2 in parent 2. Employees once allocated to a project (in any chromosome) will always remain allocated to the same project even after crossover. This does not serve to emulate a proper crossover. To avoid this situation one of the parents is rotated by a random amount before crossover after which only the employee Ids in the two parents are interchanged. This helps reshuffling of the employees amongst the projects. To maintain the structure of the chromosomes the child 2 is rotated back to ~ its original configuration after the crossover. The method is depicted in Fig. 23.5(b). Another possible way to achieve a similar effect is to interchange two portions in one of the parents before crossover (Fig. 23.5(c)) and undo the interchange in the child chromosomes generated, after crossover. { 1 + 14 2|7 x Crossover point = 3 2|7 2|8 1/3 1| 5 Rotate Parent2 Number of rotations = 2 1[3 1[ 5} , 2-18. Fig. 23.5(b) Crossover with Rotation Parent 1 Parent 2 Child 1 Child 2 Parent 4 Parent 2 Parent 1 Rotated Parent 2 Child 1 Child 2 Child 2 F i =: Genetic Algorithms: Copying Nature's Approaches 467 CT 1[/371] 5 1 [14 2|7 2|8 Parent 1 x : : 5 . Parent 2 Interchange these F _ 4 * Genes Al 1] 3 +[5 1] 14 2[7} 2/8 Parent 1 x KY Crossover 4} : ig Pha) Parent 2 Al 1) 3 1) 5 1) 14 2/1 2\,9 Child 1 oe 3 7 a 8 Child 2 - I Interchange them KH again [ T17 ik) I 8 f il 2 ieae Fe Child 2 Fig. 23.5(c) Crossover with Interchange Mutation While in the previous problems we assumed that mutation need not take place, in this real wo