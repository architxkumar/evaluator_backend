stic Functions As seen in Chapter 2, the time required for search could be exponential in the distance to the goal. The idea of using a heuristic function is to guide the search, so that it has a tendency to explore the region leading to the goal. A heuristic function is designed to help the algorithm to pick that candidate from the OPEN list that is most likely to be on the path to the goal. A heuristic value is computed for each of the candidates. The heuristic value could be an estimate of the distance to the goal from that node, as shown in Figure 3.2. The heuristic function could also embody some knowledge gleaned from human experts that would indicate which of the candidate nodes are more promising. The algorithm then simply has to choose the node with the lowest heuristic value to expand next. FIGURE 3.2 The heuristic function estimates the distance to the goal. The word heuristic has its roots in the Greek word etipiok or eurisk6, Which means I find, discover". It has the same root as the word eureka from etipyxa or heir ka meaning have found (it) an expression, the reader might remember, that is attributed to Archimedes when he realized that the volume of water displaced in the bath was equal to the volume of his body. He is said to have been so eager to share his discovery, that he leapt out of his bathtub and ran through the streets of Syracuse naked". The heuristic function must not be computationally expensive, because the idea is to cut down on the computational cost of the search algorithm. The simplest way to do this is to make the heuristic function a Static evaluation function that looks only at the given state and returns a value. It will also have to look at the goal state, or a goal description. Since we expect the move generation function to transform the given state into the goal state via a sequence of moves, the heuristic function has to basically estimate how much of that required transformation still needs to be done for a given state. In 