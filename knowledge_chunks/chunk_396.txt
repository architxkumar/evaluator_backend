hat will succeed if the King is with the LHO and fail if the King is with the RHO. In the absence of any other inferences, the probability of the King being with the LHO is fifty percent, and therefore the probability of the plan succeeding is fifty percent. Employing knowledge of such combination plays, a planner can assemble different plans, and choose the one which has the highest probability of success. This was the approach used in (Khemani, 1989), and some of rules used in the implementation have been discussed in Chapter 6. Such probability calculations figure prominently in bridge analysis, and the bridge literature too is replete with Bridge proverbs like in the world of Go. One of the proverbs says for example eight ever, nine never , which says that if the declarer has eight cards in a suit between the two hands, missing the Queen, she should always finesse against the Queen; but if the declarer has nine cards then she should never finesse. This is merely an easy way of remembering how the probabilities lie in the two situations. A declarer play program on the lines described above is essentially a kind of hill climbing approach in which the algorithm refines the most likely plan. It stores a list of assumptions needed for the plan to succeed, and if during play one of the assumptions were to be falsified, the program would need to plan again from that point onward. Other later work is on similar lines, but more refined. The declarer play in the program Tignum 2 (Smith et al., 1996) was an application of the Hierarchical Task Network (see Chapter 7) planning approaches developed by Dana Nau and his group. Figure 8.39 below depicts the task network for a finesse in Tignum 2. The position being planned for is when the south hand holds the king and jack of spades and hopes to gain an extra trick when East has the queen. The Tignum 2 program is at the heart of the commercially available BridgeBaron2 program. Another interesting, and a much more complete treat