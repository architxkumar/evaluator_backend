lar useless sequence of operators several times before we finally find a solution. The requirement that a control strategy be systematic corresponds to the need for global motion (over the course of several steps) as well as for local motion (over the course of a single step). One systematic control strategy for the water jug problem is the folowing. Construct a tree with the initial state as its root. Generate all the offspring of the root by applying each of the applicable rules to the initial state. Fig. 2.5 shows how the tree looks at this point. Now for each leaf node, generate all its successors by applying all the rules that are appropriate. The tree at this point is shown in Fig. 2.6.4 Continue this process until some rule produces a goal state. This process, called breadth-first search, can be described precisely as follows. (0,0) (0.0) (4,0) (0,3) | (4,0) | (0,3) 43) | [@.9) | (4.3) 43) | [ @.0)] [ 6.0) Fig. 2.5 One Level of a Breadth Fig. 2.6 Two Levels of a Breadth First Search Tree First Search Tree 4 Rule 3, 4, L1, and 12 have been ignored in constructing the search tree. 32 Artificial Intelligence ER RE ERE RAE Mla DA OCIS ONT RESCH Algorithm: Breadth-First Search 1. Create a variable called NODE-LIST and set it to the initial state. 2. Until a goal state is found or NODE-LIST is empty: (a) Remove the first element from NODE-LIST and call it . If NODE-LIST was empty. quit. (b) For each way that each rule can match the state described in F do: (i) Apply the rule to generate a new state, Gi) If the new state is a goal state. quit and return this state. (iii) Otherwise, add the new state to the end of NODE-LIST. Other systematic control strategies are also available. For example, we could pursue a single branch of the tree until it yields a solution or until a decision to terminate the path is made. It makes sense to terminate a path if it reaches a dead-end, produces a previous state, or becomes longer than some prespecified futility limit. In such a ca