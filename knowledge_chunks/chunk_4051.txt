tripped out. One reason that this framework is useful, despite its limitations, is that it appears that in an otherwise robust system the exact numbers that are used do not matter very much. The other reason is that the rules were carefully designed to avoid the major pitfalis we have just described. One other interesting thing about this approach is that it appears to mimic quite weil [Shultz et al., 1989] the way people manipulate certainties. 8.3. BAYESIAN NETWORKS In the last section, we described CF s as a mechanism for reducing the complexity of a Bayesian reasoning system by making some approximations to the formalism. In this section, we describe an alternative approach, Bayesian networks [Pearl], 1988], in which we preserve the formalism and rely instead on the modularity of the world we are trying to model. The main idea is that to describe the real world, it is not necessary to use a huge joint probabililify table in which we list the probabilities of all conceivable combinations of events. Most events are conditionally independent of most other ones, so their interactions need not be considered. Instead, we can use a more local representation in which we will describe clusters of events that interact. Recall that in Fig. 8.1 we used a network notation to describe the various kinds of constraints on likelihoods that propositions can have on each other. The idea of constraint networks turns out to be very powerful. We expand on it in this section as a way to represent interactions among events; we also return to it later in Sections 11.3.1 and 14.3, where we talk about other ways of representing Rainy Season knowledge as sets of constraints. Let s return to the example of the sprinkler, rain, and grass that we introduced CSprikier > C Rain > CSprikier > C Rain > in the last section. Figure 8,2(a) shows the flow of constraints we described in MYCIN-style rules. But recall that the net problem that we encountered with that (a) (6) example was that the constr