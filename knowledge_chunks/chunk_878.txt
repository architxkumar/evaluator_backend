rst statement says that jaaneBTY is a BComicFilm in which sShah has acted. The second one tells us that sShah is an Indian with more than ten million fans. But consider what we already know about BComicFilms reproduced again below. BComicFilm AND Film EXISTS 1 :Villain EXISTS 2 :Song EXISTS 1 :Comedian ALL :Actor FILLS :Expression funny If the above three sentences are our knowledge base, then what do we know about the actor sShah? We know that he is an Indian with more than ten million fans because that has been stated explicitly. But we also know that BComicFilms are those all whose actors have funny expressions. So this must apply to sShah as well, because he acted in jaaneBTY which is a BComicFilm. So when we insert the constant sShah into the taxonomy, we must do so with the sentence, sShah AND Indian EXISTS 10000000 :Fan FILLS Expression funny That is, we first need to collect all information about sShah that is entailed by the knowledge base before deciding where to attach the constant. We look at another example. Let Abheek be a person who is only a fan of football players, and also that he is a fan of Gerrard. Suppose all we know about Gerrard is that he is an Englishman, abheek AND Person FILLS :FanOf gerrard ALL :FanOf Footballer gerrard AND Person English Then we should augment our information of Gerrard to, gerrard AND Person English Footballer In the forward-chaining algorithm PropagateProperties that follows in Figure 14.32, the following correspondence holds, c, abheek d, AND ... FILLS :FanOf gerrard ALL :FanOf Footballer Co gerrard dz AND Person English PropagateProperties (kb) 1 for every constant c in the kb 2 form the normalized sentence (cd) by combining all such sentences 3 while there exists c, and c, s.t. C2inCl(cd,, cya), kb) nil doe C2inC1(c,, ) d, AND d, e Normalize d, Update (c,9d,) in the kb Yous 8 return kb C2inCl (c 9d,, c,9d,, kb) 1 if FILLS r c2 and ALL re are components of d, 2 then return 3 else return nil FIGURE 14.32 The procedur