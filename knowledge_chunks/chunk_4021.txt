 database the belief that Abbott is a suspect. But suppose that we later fire a rule that erases belief in Abbott s alibi. Then we need another rule that would reconclude that Abbott is a suspect. The task of creating a rule set that consistently maintains beliefs when new assertions are added to the database quickly becomes un Suspect Abbott 7 manageable. In contrast, a TMS dependency = network offers a purely syntactic, domain- ~] independent way to represent belief and 2 justification change it consistently. 7 H Figure 7.5 shows how these three facts [_Beneficiary Abbott L_ Albi Abbott | would be represented in a dependency INist OUTHist network, which can be created as a result of Fig. 7.5 A justification supported belied Symbolic Reasoning Under Uncertainty 163 AAA CELE STR EASE ER ASSES NRE AIST applying the first rule of either Fig. 7.2 or Fig. 7.3. The assertion Suspect Abbott has an associated TMS justification, Each justitication consists of two parts: an IN-list and an OUT-list. In the figure, the assertions on the IN-list are connected to the justification by + links, those on the OUT-list by links. The justification is connected by an arrow to the assertion that it supports. In the justification shown, there is exactly one assertion in each list. Beneficiary Abbott is in the [N-list and Alibi Abbott is in the OUT-list. Such a justification says that Abbott should be a suspect just when it is believed that he is a beneficiary and it is not believed that he has an alibi. More generally, assertions (usually called nodes) in a TMS dependency network are believed when they have a valid justification. A justification is valid if every assertion in the IN-list is believed and none of those in the OUT-list is. A justification is nonmonotonic if its OUT-list is not empty, or, recursively, if any assertion in its IN-list has a nonmonotonic justification. Otherwise, it is monotonic. In a TMS network, nodes are labeled with a belief status. If the assertion corresp