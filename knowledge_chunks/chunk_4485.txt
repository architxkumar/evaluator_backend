ajor drawback to simulators is figuring out exactly which factors to build in. Experience with real robots continues to expose tough problems that do not arise even in the most sophisticated simulators. The world turns out not surprisingly to be an excellent model of itself, and a readily available one. | Perception and Action 433 21.1 REAL-TIME SEARCH We now turn to heuristic search, as exemplified in AI by the A* algorithm. While A* is guaranteed to find an optima! path from the initial state to the goal state, the algorithm has a number of limitations in the real world. For one, the exponential complexity of A* limits the size of problems it can realistically solve, and forces us to consider a limited search horizon. Also, having incomplete information about the world can further limit that search horizon. For example, consider the task of navigating from one room to another in an unfamiliar building. The search horizon is limited to how far one can (literally) see at any given time. It is necessary to take steps in the physical world in order to see beyond the horizon, despite the fact that the steps may be nonoptimal ones. Finally, real-time tasks like driving require continuous monitoring and reacting. Because heuristic search is time-consuming, we cannot afford to work out optimal solutions ahead of time. There is a variation of A* that addresses these issues. It is called Real-Time-A* (RTA*) [Korf, 1988]. This algorithm commits to a real-world action every k seconds, where k is some constant that depends on the depth of the search horizon. Each time RTA* carries out an action, it restarts the search from that point. Thus. RTA* is able to make progress toward a goal state without having to plan a cornplete sequence of solution steps in advance. RTA* was inspired to a degree by work on computer games. As we mentioned in Chapter 12, gameplaying programs must commit to irrevocable moves because of time constraints. Algorithm: Real-Time-A* 1. Set NODE to be the s