halt because all these states have lower scores than the current state. The process has reached a local maximum that is not the global maximum. The problem is that by purely local examination of support structures, the current state appears to be better than any of its successors . . A A\[H] because more blocks rest on the correct objects. To solve this problem, it is necessary to disassemble a good local structure (the (b c) stack B through H) because it is in the wrong global context. Fig. 3.2 Three Possible Moves We could blame hill climbing itself for this failure to look far enough ahead to find a solution. But we could also blame the heuristic function and try to modify it. Suppose we try the following heuristic function in place of the first one: H o[o[o[m|>lo = & lwfolo[m[afolz[> ~ lpfofalm|>jo Global: For each block that has the correct support structure (i.e., the complete structure underneath it is exactly as it should be), add one point for every block in the support structure. For each block that has an incorrect support structure, subtract one point for every block in the existing support structure, Using this function, the goal state has the score 28 (1 for B, 2 for C, etc.). The initial state has the score 28. Moving A to the table yields a state with a score of 21 since A no longer has seven wrong blocks under it. The three states that can be produced next now have the following scores: (a) ~28, (b) -16, and (c) -15. This time, steepest-ascent hill climbing will choose move (c), which is the correct one. This new heuristic function captures the two key aspects of this problem: incorrect structures are bad and should be taken apart; Heuristic Search Techniques 55 se ot h E EA I and correct structures are good and should be built up. As a result, the same hill climbing procedure that failed with the earlier heuristic function now works perfectly. Unfortunately, it is not always possible to construct such a perfect heuristic function. For example, cons