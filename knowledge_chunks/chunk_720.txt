(X) :Xis a prism Fruit(X) : Xis a fruit CitrusFruit(X) : Xis a citrus fruit Each such predicate is interpreted in the domain as a subset of the domain, and each defines a category. A category may be related to other categories. Such relations are captured by sentences of FOL. For example, x (Man(x) D Human(x)) : all men are human beings Vx (CitrusFruit(x) D Fruit(x)) : all citrus fruits are fruits V x (CitrusFruit(x) D : all citrus fruits are non-human aiHuman(x)) 3 x(Man(x) A Bright(x)) : some men are bright Higher arity predicates allow us to capture relations between things. For example, Friend(X, Y) :X isa friend of Y On(Xx, Y) :Xis on Y Uncle(x, Y) : Xis an uncle of Y Divides(X, Y) : (number) X divides (number) Y Formally a binary relation corresponds to a subset of D x D, the cross product of the domain with itself. This allows us to define relations like divides to be applicable only to numbers by choosing the appropriate subsets in the Interpretation mapping (see Chapter 12). However, relations are rarely stored as extensions, and thus a more circumspect definition is usually required. One may employ a typed or many sorted logic, in which the elements belong to different sorts or types, and relations are defined over members from specific types. Logic also provides us a mechanism for defining categories as intensions without having to explicitly mark the membership in the Interpretation mapping (Sowa, 1984). This is particularly useful when the domain size is very large, or even infinite. Thus we can define new categories from existing ones, for example, WV x(Mother(x) 3 y Mother(x, y)) Vx(PrimeNumber(x) 73 y(y 1 A y x A Dividesty, x))) In the following chapter we shall look at a Description Logic that allows us to define new categories and the relations between them in a succinct manner that is also amenable to tractable reasoning. We can, and most often do, define relations as intensions as well. For example, WxVy (GrandParent(x, y) 3z (Parent(x, z) A Pare