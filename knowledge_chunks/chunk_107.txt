the time required too tends to be exponential in practice. In both space and time complexity, we have pegged the performance on the accuracy of the heuristic function. In fact, by measuring performance experimentally, we could talk about the accuracy of heuristic functions. A perfect heuristic function would only inspect nodes that lead to the goal. If the function is not perfect then the search would often pick nodes that are not part of the path. We define effective branching factor as a measure of how many extra nodes a search algorithm inspects. effective branching factor total-nodes-expanded nodes-inthe-solution For a perfect search function, the effective branching factor would tend to be 1. For a very poor heuristic function, one expects the effective branching factor to tend to be much greater that the branching factor of the underlying search space. This is because a really poor function would lead the search away from the goal, and explore the entire space. As an exercise, the reader could implement the two heuristic functions discussed earlier for the Eight-puzzle, and compare the performance over a set of problems. The function that performs better on the average is likely to be better. A related measure for heuristic functions that has been suggested in literature is called penetrance (Nilsson 1998). Penetrance can be defined as the inverse of effective branching factor. That is: penetrance nodes-in-the-solution total-nodes-expanded The best value of penetrance is 1, and if the search does not find a solution, which it might in an infinite search space with a poor heuristic, the penetrance value could be said to be zero. Note that both the above measures are for specific search instances. To get a measure of the heuristic function that does not depend upon the given problem, one would have to average the values over many problems. Best First Search is an informed search algorithm. Instead of blindly searching in a predefined manner, it inspects all cand