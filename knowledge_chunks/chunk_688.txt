rals. Let C; and C, be two clauses with the structure, Cj (Ly V Lo VV... V Lg V Py V Po VV... V Ph) Cy (AR, V7IR2V ... VARs V Qy V Qo V... V Qh) the MGU for L, Lo, ..., L ,.R1, Ro, ..., Rs then we can resolve C; and C;, to give us the resolvent, (P,8 VP20V ... V PhOV Q18V QO V ... V Q8) s we throw away all the positive literals L; and negative literals R, and combine the remainder after itution 6. Let us see a few examples. iree clauses for the Socratic argument are. ( (Man ?x)) V (Mortal ?x) premise (Man Socrates) Premise (-(Mortal Socrates)) negated goal slowing resolvents are generated, (Mortal Socrates) Cy, Co, 2x socrates iL C3, R, mber that applying a substitution ?x socrates is a kind of instantiation. When the value is a con ion, but when the value is a function then it may simply be a restriction on the value the variable tant Substiutiealelyetaaertrome case of restriction to one value. Joes showing something on a restricted value be enough to prove the generalized formula? The p t because the resolution refutation method is used to show that the input formula is unsatisfiable ar that tha farmiila ic 4 1inivarcalh, quantitiad farmiila at re cay wea ara trninn tn ehnw that vy it the last clause come from the premises. The last clause is the negated goal clause. We show ly in Figure 12.14. ave chosen one of the many graphs that derive the null clause. This are derivation actually and then derives the contradiction using the negated goal. This might lead one to mistakenly bel 1 is just another form of what forward chaining does. In fact it is not so. Resolution can do more that ard, chaining can do. It is a complete method. That means that it can prove all true formulas that are emises. To illustrate that, let us look at the green blocks problems and see how resolution can find a hem. rst problem says that given, Ontable(A) A Ontable(B) A (Green(A) V Green(B)) eed to show 3x (Ontable(x) A Green(x)). The negation of the goal is Vx(7Ontable(x) V7Greer are given 