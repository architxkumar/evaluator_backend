bles can now be assigned either with a message or when an instance of the ship is created. (send ship42 :set-cargo-capacity 22.5) or (self ship42 (make-instance 'ship :5-position 5.0 :y-position 8.0)) Variable assignments can be examined with the describe method, one of the base methods provided with the system. (describe ship42) #<SHIP 1234567>, an object of flavor SHIP, has instance variable values: X-POSITION 5.0 V-POSITION 8.0 X-VELOCITV unbound V-VELOCITY unbound CARGO-CAPACITY 22.5 Default values can also be assigned to instance variables with the defvar statement. (defvar default-x-velocity 12.0) Thus, unless x-velocity is explicitly assigned a value in a make-instance or defflavor statement, it will be given the default value 12.0. Flavors are defined hierarchically by including one or more superciasses in he second subform of the defflavor statement, thereby permitting flavors to be Sec. 8.5 Object-Oriented Languages and Systems 163 "mixed." Inheritance of methods is then achieved much the same as in the Smalltalk case. For example. to create a ship flavor which has two superclass flavors named moving-object and pleasure-craft, the following form would be used: (deft lavor ship Ix-position v-position passenger-capacity) (moving-object plea Sure-craft) :gettable-instance-variables) If the flavor moving-object has a method for speed, it will be inherited unless a method for speed has been defined explicitly for the ship flavor. The base flavor for FLAVOR extensions is the vanilla-flavor. This flavor will typically have a number of base methods including a :print-self and describe method as used above. Generic instance variables are also defined for the vanilla-flavor. Through method inheritance and other forms, methods may be combined to give a variety of capabilities for flavors including the execution of some methods just prior to or just after a main method. Special Purpoie OOS Languages A typical special purpose OOS language is ROSS (for Rand OOS) develop