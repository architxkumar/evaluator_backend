cprecondition (and (onTable ?x) (armempty) (clear ?x)) ceffect(and (not (armempty)) (holding ?x) (not (onTable ?x)))) is replaced by the operator PickUp-R, (action pickup-r parameters (2x -block) precondition (and (onTable ?x) (armempty) (clear ?x)) ieffect (holding ?x)) where the negative or delete effects have been removed. The new problem P'is known as the relaxed planning problem. The solution to the relaxed planning problem is the relaxed plan. Observe that certain combinations of actions in the relaxed plan may not be allowed in the original planning problem. For example, we can have PickUp-R(A) followed by PickUp-R(B), or even have both the actions in parallel, in the relaxed plan. This happens because the precondition armempty is no longer deleted in the relaxed domain. Nevertheless, one expects that a solution to the relaxed problem will give us some idea about the cost of the solution in the original domain. Enough, hopefully for the search algorithm to be able to choose the next action in a more informed manner. In general, the optimal relaxed plan would be shorter than the optimal plan in the original domain. This is because additional steps may be needed to compensate for ignoring the delete actions. For example, the sequence (PickUp(B), Stack(B, C), PickUp(A)) might be part of a plan in the domain in which only (PickUpR(B), PickUp-R(A)) might be part of a relaxed plan. In the rest of the discussion, we omit the suffix r for the relaxed actions. If we could find an optimal plan for the relaxed problem then we could use the length of the solution as an admissible heuristic for an algorithm like A . Unfortunately, the problem of finding the optimal solution to the relaxed plan is NP-hard (Bylander, 1994). Therefore, one has to instead work with an estimate of this value. Two well known heuristic search planners HSP and FF, computed this estimate in different ways. 10.4.1 HSP The Heuristic Search Planner by Blai Bonet and Hector Geffner (2000; 2001; 2001a)