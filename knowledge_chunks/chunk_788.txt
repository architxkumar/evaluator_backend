 following description of a semantic parser is based on the work that came out of the Yale group (Schank et al, 1973; 1975), (Riesbeck, 1975), and (Birnbaum and Selfridge, 1981). The main resource used by the parser is a semantic lexicon that maitaiis"Piformation of semantic relations in the forms of rules for each word. A word with more than one sense would have more than one f it would be the job of the parser to select the right one. This could Feet earch employing semantic matches to choose between options where possible. The parser stores partly filled conceptualizations in its immediate memory called C-list. When a word is read, its entry from the lexicon is retrieved and added to the C-list. Along with its CD structure, the rules stored with the entry are also retrieved and stored in its rule memory called R-list. Before reading the next word the parser looks at all rules waiting in the R- ist for any that are applicable, and executes them. The program written by Riesbeck called EL (English Language Interpreter) activated instances of rules to establish semantic connections. The activated rules were called REQUESTS. The entry in the semantic lexicon for the word ate would contain one REQUEST with precondition T (no condition) and which would activate two other requests. The entry for ate looks like, ate: category -verb. forms -eat. eaten REQUEST - TEST: T ACTIONS: Add the structure (INGEST ACTOR (NIL) OBJECT (NIL) TIME (PAST)) to the C-List Activate the request REQUEST - TEST: Can you find a human on the C-list preceding the INGEST structure? ACTIONS: Put it in the ACTOR slot of INGEST Activate the request REQUEST - TEST: Can you find an edible object on the C-list following the INGEST structure? ACTIONS: Put it in the OBJECT slot of INGEST The single request stored in the entry for ate would add the INGEST structure, and also the rules needed to find fillers for the slots in the structure with semantically matching concepts. Requests when nominals or PPs are