mum, what should be the terminating criteria? One would then have to devise algorithms that have a criterion decided in advance. Moreover, if one is to get off an (local) optimum, what should be the condition for doing so? Do we simply ignore the idea of gradient ascent? Some possible choices that deal with random moves will be explored in the next chapter. In the following section, we explore a deterministic algorithm that exploits the gradient during search, but is also able to move off optima in search of other solutions. 3.8 Tabu Search The main idea in Tabu search is to augment the exploitative strategy of heuristic search with an explorative tendency that looks for new areas in the search space (Michalewicz and Fogel, 2004). That is, the search follows the diktat of the heuristic function as long as better choices are presented. But when there are no better choices, instead of terminating the local search as seen so far, it gives in to its explorative tendency to continue searching. Having got off an optimum, the algorithm should not return to it, because that is what the heuristic function would suggest. Tabu search modifies the termination criteria. The algorithm does not terminate on reaching a maximum, but continues searching beyond until some other criterion is met. One way to getting the most out of the search would be to keep track of the best solution found. This would be fairly straightforward while searching the solution space. Tabu search is basically guided by the heuristic function. As a consequence, even if it were to go beyond a local maximum, the heuristic function would tend to pull it back to the maxima. One way to drive the search away from the maxima is to keep a finite CLOSED list in which the most recent nodes are stored. Such a CLOSED list could be implemented as a circular queue of k elements, in which only the last k nodes are stored. In a solution space search where the moves alter components of a solution, one could also keep track o