This is the least commitment strategy in which the planner delays commitment to decisions, until it can make an informed choice. The plan at this level is to split the task into two subtasks, then solve each of them in some order, and finally join the results of the two subplans. In the next two steps, NOAH refines the two tasks, as shown in Figure 7.26 below. It replaces, or expands, each of the nodes into networks of lower level actions. The task Achieve on(A, B) can be accomplished by clearing blocks A and B, in some order, and then putting A on top of B. The higher level action Put can be expanded like a macro into pickup or unstack, as the case may be, followed by the stack operator. Achieve on(A, B) A on(B. C) Figure 7.25 NOAH starts off by decomposing the higher level task into two tasks without committing to an order. The two tasks are linked by a Split node S and a Join node J. Achieve clear(A) . Put A onB Put BonC Achieve clear(C) Figure 7.26 NOAH refines each of the two tasks and hands over control to the Critics. Critic: Resolve-Conflicts notices the conflict marked an on condition clear(B). Suggests that the action labelled be promoted before action labelled - to resolve the conflict (threat). J Having expanded both the tasks, it calls in the critics. Critic: ResolveConflicts notices the conflict marked and - on condition clear(B). It suggests that the action labelled be promoted before action labelled to resolve the conflict (threat), as shown in Figure 7.26. At this point the Critic: Elminate-Redundand-Preconditions observes that the condition marked in Figure 7.27 is redundant, and suggests removal of one of the two instances of the task. The figure shows this transformation. Once the critics have done their job, NOAH goes back to refinement. It sees that it can clear block A by removing block C from it and expands that node. Again, the critic Resolve-Conflicts notices the conflict (threat) marked and - on condition clear(C). It suggests that the act