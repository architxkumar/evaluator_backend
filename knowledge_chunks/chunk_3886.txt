and the inference mechanisms that are available to apply to them than does the term semantic network. In Chapter 9 we discuss structures such as these in substantial detail. But to get an idea of how these structures support inference using the knowledge they contain, we discuss them briefly here. All of the objects and most of the attributes shown in this example have been chosen to correspond to the baseball domain, and they have no general significance. The two exceptions to this are the attribute isa, which is being used to show class inclusion, and the attribute instance, which is heing used to show class membership. These two specific (and generally useful) attributes provide the basis for property inheritance as an inference technique. Using this technique, the knowledge base can support retrieval both of facts that have heen explicitly stored and of facts that can be derived from those that are explicitly stored. An idealized form of the property inheritance algorithm can be stated as follows: Algorithm: Property Inheritance To retrieve a value V for attribute A of an instance object O1. Find O in the knowledge base. If there is a value there for the attribute A, report that value. Otherwise, see if there is a value for the attribute instance. If not, then fail. Otherwise, move to the node corresponding to that value and look for a value for the attribute A. If one is found, report it. 5. Otherwise, do until there is no value for the isa attrihute or until an answer is found: (a) Get the value of the isa attribute and move to that node. (b) See if there is a value for the attribute A. If there is, report it. - This procedure is simplistic. It does not say what we should do if there is more than one value of the instance or isa attribute. But it does describe the basic mechanism of inheritance. We can apply this procedure to our example knowledge base to derive answers to the following queries: team(Pee-Wee-Reese) = Brooklyn-Dodgers. This attribute had a valu