d using a planning domain description language (see Chapter 7). Both the problem solving strategy and the domain description, call upon knowledge representation approaches. pon Problem Class f Domain model Problesi i Human Problem Domain model Y Human ' nea Solver (program) Solution steps Solution steps (program) Solution Solution FIGURE 11.1 In the traditional programming approach shown on the left, a human being programs the solution steps for a specific domain. In the Al approach, the human programs a solver for a class of problems, and given a domain model and a problem instance from the domain, the solver produces the solution steps that lead to the solution. One distinguishing feature of artificial intelligence programs is that connections between input and output may be found at runtime, and not encoded by the programmer. This is useful in domains where the number of individual connections may be too many to enumerate and too diverse to generalize. Consider for example, path finding on a city map. Given any reasonable sized city, the number of origin-destination combinations may be too numerous to enumerate. And unless the city is a regular grid like Manhattan (and the coordinates of the two points are known), it may not be feasible to devise a greedy path finding strategy. The option we have explored so far in problems like these is to search for the solution (path). Search is but one of the means to finding a solution. We need to also look at how experience often leads us down an oft trodden path. Travellers often rely on guidebooks and travelogues and exploit the experience of those who traveled before them. For a problem solving agent, this experience has to be captured into some form of (knowledge) representation. Let us look at another example. Consider the problem of finding the meaning of a set of uttered words. Again, the permutations of words are too numerous to enumerate. Parsers embody some generalized knowledge of the relations between the differ