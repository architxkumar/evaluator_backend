dered as: UNSTACK(x, A) PUTDOWN(C) ~ PICKUP(B) Notice that we have seen two types of declobbering, one in which an existing step is used to declobber another, and one in which a new declobbering step is introduced. Fortunately, the precondition of our newest PUTDOWN step is satisfied. In fact, all preconditions of all steps are satisfied, so we are done. All that remains is to use the plan ordering and variable binding constraints to build a concrete plan: UNSTACK(C, A) PUTDOWN(C) PICKUP(B) STACK(B, C) PICKUP(A) STACK(A, B) This is the same plan we found at the end of Section 13.4. We used four different heuristics to synthesize it: step addition, promotion, declobbering, and simple establishment. (These are sometimes called plan modification operations.) Are these four operations, applied in the correct order, enough to solve any nonlinear planning problem? Almost. We require one more, called separation. Separation is like simple establishment, in that it concerns variable bindings, but it is used in a declobbering fashion. Suppose step C/ possibly precedes step C2 and C/ possibly denies a precondition of C2. We say possibly because the propositions may contain variables. Separation allows us to state a constraint that the two propositions must not be instantiated in the same way in the eventual plan. Work on the TWEAK planner presented formal definitions of the five plan modification operations and proved that they were sufficient for solving any solvable nonlinear planning problem. {n this manner, TWEAK cleaned up the somewhat ad hoc, heuristic results in nonlinear planning research. The algorithm to exploit the plan modification operations is quite simple. Algorithm: Nonlinear Planning (TWEAK) 1. Initialize S to be the set of propositions in the goal state. 2. Remove some unachieved proposition P from S. 3. Achieve P by using step addition, promotion, declobbering, simple establishment, or separation. 4. Review all the steps in the plan, including any new steps 