. Each WME carries a time stamp marking when it was created, usually implicitly in sequence numbers assigned to them. 3. The Inference Engine The inference engine is a constant feature in all systems. It is domain independent, and drives the processing. The inference engine operates in the cycle described in Section 6.6.3, in which it picks rules with matching data and executes them. 6.6.1 Working Memory The working memory is made up of an ordered sequence of WMEs. Each WME is an instance of a WME class. A WME class has the following structure, classname attribute-nare-1 attribute-rame-z attribute-name-1 For example, devising a bridge playing program, one might declare a class in OPS5 by the following statement, which declares a class and its attributes. (literalize card-rank suit ; spades, hearts, diamonds or clubs or s, h, d, c card ja,k,...,3,2 rank 31,2, ..., 12, 13 int-rank ; internal rank will-win ; winner number from top tempo ; losers above this card player : north , south, east or west or N, S, E or W points 30,1, 2, 3,4 rankclass ; rank in terms of trick-taking value. ; for example a king supported by an ace has rankclass 4 played ; yes, no updated) ; yes, no, marked, ranked The text after the semicolon is a comment in OPS5. The class cardrank will have 52 instances in a card pack. The attributes are meant to keep track of the name, the current rank, the player holding it and whether it has been played or not amongst other features that are modified as the game proceeds. A WME is an instance of a class, and has the following form: classname attribute-nare-1 attribute-reme-z attribute-nare-k That is, the WME has values in the various attribute slots. Observe that the index m used above is different from k in the class definition. In fact, m is less than or equal to k. This is because one does not have to specify values for all attributes in a WME. Furthermore, the order of specifying attributes in a WME is unimportant. Specifying attributes in arbitrary ord