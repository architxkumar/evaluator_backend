nly if P is a subset of T. This can be ensured by rules of inference judiciously (discussed later). npleteness: A logic is complete if it produces all true statements. Formally, a logic is complete if anc subset of P. This can be ensured, when feasible, by choosing a sufficiently large number of rence and premises. isistency: A logic is consistent if it does not produce both a sentence and its negation. This is a cons ing sound. that a logic that does not produce any statements is by definition sound (but not complete). Likewis uces all statements is complete (but not sound). We need a logic machine that is both sound and co! construct such a machine then we can rely on it entirely to decide whether a given statement is tru if it is true it will produce it, and if it is false it will halt without producing it (provided it is decidable). above paragraph we have used the term all statements . We need to clarify what we mean by that. siated with every logic machine is a language that is used to express the statements in the Ic . is defined over an alphabet along with syntax rules to determine whether a string on the alphi or not. We also use the term well formed formula or simply formula to refer to a sentence in logic. ( and the syntax we can determine the set of all formulas F that can be expressed in the language. T of all statements that can be made using that language. n of completeness and soundness are also defined over this set. Completeness of a logic then m produce every sentence in F that is true. the properties of a logic machine are determined by its language or syntax. The more expressive has, the more difficult is it to produce all true statements. It is easy to build sound, complete and in the simplest logic, known as Propositional Logic. But as we move higher to the more express s First Order Logic (FOL) we lose the property of decidability. While first order systems are complet hat for an input formula or sentence that is false, the procedure may loop