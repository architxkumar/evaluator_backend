hts determine the relative importance of each attribute. For example, consider a domain in which the cases represent cylindrical objects using the attributes that include, amongst others, height, diameter and colour. Figure 15.12 shows two candidate objects that could match a query object. Only the RGB values for the colours are shown in the figure. Query Colour Red 102 Green 153 Blue 255 Case, cad Colour a es 2 Red 175 TO Cinen 51 olour Blue 232 Heda 25 Gimen 149 " Blue 247 FIGURE 15.12 Which cylinder is more similar to the query? If colour has higher weight, then it is Case. If shape (height and diameter) has higher weight, then it is Case,. As one can see in the above diagram, Case, has a shape that is closer to the query than Caseg, while the latter has a colour that better matches the query colour. So which case is more similar to the query? The answer depends upon whether shape is more important in the matching process, or colour. This relative importance can be represented by the weights in the case structure. The weights could be assigned in different ways. 1. The weights could be static, and applicable to all the cases. Whenever a query is generated, these weights are used for computing similarity with all candidate cases. The weights could be stated along with the query. Thus, each query also determines which attributes are more important. In a recommender system for example, the user could emphasize the features that she considers more important. For example, when looking for a flat to rent, one could give more importance to certain features like location, or number of balconies. The weights could be case specific. This means that each case knows what attributes are more important when it is being considered. For example, if one were to build a case based medical diagnosis system then each candidate case (diagnosis) would state what features are more important for it to be true. N ad Maximum Another simple aggregation function takes the maximum of the loc