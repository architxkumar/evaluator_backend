ample, suppose the knowledge base (KB) contained only the propositions P, P -. Q, and modus ponens. From this, the IE would rightfully conclude Q and add this conclusion to the KB. Later, if it was learned that P was appropriate, it would be added to the KB resulting in a contradiction. Consequently, it would be necessary to remove P to eliminate the inconsistency. But, with P now removed, Q is no longer a justified belief. It too should be removed. This type of belief revision is the job of the TMS. Actually, the TMS does not discard conclusions like Q as suggested. That could be wasteful, since P may again become valid; which would require that Q and facts justified by Q be rederived. Instead, the TMS maintains dependency records for all such conclusions. These records determine which set of beliefs are current (which are to be used by the IE). Thus, Q would be removed from the current belief set1by making appropriate updates to the records and not by erasing Q . Since Q would not be lost, its rederivation would not be necessary if P became valid once again. The TMS maintains complete records of reasons or justifications for beliefs. Each proposition or statement having at least one valid justification is made a part of the current belief set. Statements lacking acceptable justifications are excluded from this set. When a contradiction is discovered, the statements responsible for the contradiction are identified and an appropriate one is retracted. This in turn may result in other retractions and additions. The procedure used to perform this process is called dependency-directed backtracking. This process is described later. The TMS maintains records to reflect retractions and additions so that the 1E P,obl.m o4e 'I I Infwenc. l TIII I I wgin. L., .A* Figure S.1 Architecture of the problem solver with a TMS, 84 Dealing with Inconsistencies and Uncertainties Chap. will always know its current belief set. The records are maintained in the form of a dependency netwo