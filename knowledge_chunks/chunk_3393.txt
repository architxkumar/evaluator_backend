3, respectively. The three types of simulated events may occur at any discrete time point, and they may even occur concurrently. To manage these events, we require a system clock to assign scheduled event times and a data structure in which to record all pending events. At any time during the run, the pending event list could include a scheduled ship arrival at current time r,., plus some time increment t, the berthing of a ship at time + ,. and the departures of one or more ships at t + i. + t4, and so on. Scheduled events are removed from the list of pending events in the order of smallest time value first. Pending events are held in a dictionary data structure which contains index. value pairs of objects. And, since multiple events may occur at the same time points, we use a set to hold all events indexed by the same time value. Thus, pending events will be stored in a dictionary of indexed sets with each set containing one or more of the basic events. Messages required to access sets and dictionary objects (collectively referred to as collections) are needed in the program. The messages and the corresponding actions they elicit are as follows. 158 Object-Oriented Representations Chap. 8 MESSAGE RESULTING ACTION add: adds an element to the receiver collection, like a list at: returns the item in the dictionary whose key matches the argument at: if Absent: returns the element given by the key in the first argument and evaluates the second argument if no argument exists at:put: places the second argument into the receiver collection under the key given by the first argument first returns the first element from a Set. includes Key returns true if the key is valid for the receiver is Empty returns true if the receiver collection contains no elements keys Do: evaluates each key element of the one argument block which follows according to the procedure given in the block remove: removes the argument object from the receiver collection remove Key: removes the object wit