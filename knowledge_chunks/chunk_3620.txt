dge than with the actual facts. Keeping the expeit focused on the immediate problem requires continual prompting and encouragement. During the whole interview process Nii is mentally examining alternative approaches for the best knowledge representation and inferencing methods to see how well each would best match the expert's behavior. The whole process of elicitation, coding, and verification may take several iterations over a period of several months. Recognizing the acquisition bottleneck in building expert systems, researchers and vendors alike have sought new and better ways to reduce the burden and reliance placed on knowledge engineers, and in general, ways to improve and speed up the development process. This has led to a niunber of sophisticated building tools which we consider next. 15.6 KNOWLEDGE SYSTEM BUILDING TOOLS Since the introduction of the first successful expert systems in the late 1970s. a large number of building tools have been introduced, both by the academic commuttty and industry. These tools range from high level programming languages to intelligent editors to complete shell environment systems. A number of commercial products 350 Expert Systems Architectures Chap. 15 are now available ranging in pi ice from a few hundred dollars to tens of thousands of dollars. Some are capable of running on medium size PCs while others require larger systems such as LISP machines. minis, or even main frames. When evaluating building tools for expert system development The developer should consider the following features and capabilities that may be offered in systems. I. Knowledge representation methods available (rules, logic-based network structures, frames.w ith or without inheritance, multiple world views, object oriented, procedural, and the methods offered for dealing with uncertainty, if any). 2. Inference and control methods available (backward chaining, forward chainini, mixed lorward and backward chaining, blackboard architecture approach, log