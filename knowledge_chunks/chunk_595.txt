 s Deep Space Network (Poon, 2010). Clearly, controlling Voyager 1 remotely is out of the question. Closer home, one may need autonomy if one had a low earth orbit satellite because it would be visible to a ground station only for a small duration in its orbit, or for a deep sea exploration vehicle. An autonomous system should be able to accept high level commands from its owner, generate plans to achieve the desired goals, execute and monitor the plans, and report back to its owner. The system MEXAR (Mars EXpress ARchitecture) is an example of a system that is able to plan and schedule its imaging and downloading actions (see for example (Oddi et al., 2002), (Cesta et al., 2007)). The Remote Agent (RA) was a planning and execution system designed to autonomously control NASA s New Millennium Deep Space One aircraft (Muscettola et al., 1998), (Chien et al., 1998)2 . The high level architecture of RA is shown in Figure 10.27 adapted from (Muscettola et al., 1998). The RA communicates with the real time control system that is responsible for sensing the state of the spacecraft and the environment, and controlling the hardware. The real time system also communicates with the ground station. One key feature of the RA architecture was that it produced plans that are temporally flexible and which could be adapted to the sensed environment by the executive. Real time execulive Mission Smart manager execulive Ve Planner (Mode id and scheduler reconfiguration, Flight h w Fault monitors Planning experts (incl. Navigation) FIGURE 10.27 The Remote Agent architecture. The RA was made up of four subsystems enclosed in the hexagon in the figure, described briefly below. Smart Executive(EXEC) EXEC is a robust, event-driven and goal-oriented multi-threaded execution system. The smart executive is the system that interacts with the real time controller of the spacecraft. It is EXEC that coordinates the activities of multiple subsystems during plan execution and takes advantage of the