Joe) and son(Bill, Bob). The individual preconditions of the rule 3 Conflict resolution is discussed in the next section. 140 Artificial Intelligence al son(x, y) A son(y. z) > grandparent(x, z) can be matched, but not in a manner that satisfies the constraint imposed by the variable y. Fortunately, it is not necessary to compute binding consistency from scratch every time a new condition is satisfied. RETE remembers its previous calculations and is able to merge new binding information efficiently. For more details about the RETE match algorithm, see Forgy [1982]. Other matching algorithms (e.g., Miranker [ 1987} and Oflazer {1987]) take different standson how much time to spend on saving state information hetween cycles. They can be more or less efficient than RETE, depending on the types of rules written for the domain and on the degree of hardware parallelism available. 64.3 Complex and Approximate Matching A more compiex matching process is required when the preconditions of a rule specify required properties that are not stated explicitly in the description of the current state. In this case, a separate set of rules must be used to describe how some properties can be inferred from others. An even more complex matching process is required if rules should be applied if their preconditions approximately match the current situation. This is often the case in situations involving physical descriptions of the world. For example, a speechunderstanding program must contain rules that map from a description of a physical waveform to phones (instances of English phonemes, such as p or d). There is so much variability in the physical signal, as a result of background noise, differences in the way individuals speak, and so forth, that one can hope to find only an approximate match between the rule that describes an ideal sound and the input that describes an unideal world. Approximate matching is particularly difficult to deal with because as we increase the tolerance all