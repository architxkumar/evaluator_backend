 provide a measure of the experts' confidence that a rule is applicable or holds when the conditions in the LI-IS have all been satisfied. We will see further examples of rules and confidence factors in later chapters. 4.10 SUMMARY We have considered propositional and first order predicate logics in this chapter as knowledge representation schemes. We learned that while PL has a sound theoretical foundation, it is not expressive enough for many practical problems. FOPL, on the MYCIN was one of the earliest expert systems. It was.dcvcioped at Stanford University in the mid-1970s to demonstrate that a system could successfully perform diagnoses of patients having infectious blood diseases. Sec. 4.10 Summary 77 other hand, provides a theoretically sound basis and permits a great latitude of expressiveness In FOPL one can easily code object descriptions and relations among objects as well as general assertions about classes of similar objects. The increased generality comes from the joining of predicates, functions, variables, and quantifiers. Perhaps the most difficult aspect in using FOPL is choosing appropriate functions and predicates for a given class of problems. Both the syntax and semantics of PL and FOPL were defined and examples given. Equivalent expressions were presented and the use of truth tables was illustrated to determine the meaning of complex formulas. Rules of inference were also presented, providing the means to derive conclusions from a basic set of facts or axioms. Three important syntactic inference methods were defined: modus ponens, chain rule and resolution. These rules may be summarized as follows. MODUS PONENS CHAIN RULE RESOLUTION P P-.Q I'VQ,QVR P 'Q Q .R. P V R Q P -.R A detailed procedure was given to convert any complex set of formulas to clausal normal forms. To perform automated inference or theorem proving, the resolution method requires that the set of axioms and the conjecture to be proved be in clausal form. Resolution is importan