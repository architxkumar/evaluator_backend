 trees for orderings ABCD and DCBA. 18. Draw the search tree explored by the algorithm Forward Checking for the problem in Figure 9.33, and compare it with the tree in Figure 9.34. 19. Trace the execution of Full Lookahead and draw the matching diagram of the CSP from Figure 9.33 at the point when the algorithm finds the first solution. 20. Show how the algorithm BackJumping will backtrack on the search tree of Figure 9.34. 1 A future variable for a search algorithm is a variable that is yet to be assigned a value. The missing AC-2 was an algorithm developed by David Waltz for scene labelling, described in Section 9.3. This evolved into AC-3 which has become a much studied algorithm. Since the relations are symmetric, we assume that wherever the relation Ryz is available so is Rzy without going into implementation details. If width is 1, then each node has one parent, and induced width is 1 as well. The ordering chosen is not the best possible as observed earlier. If the graph is not connected then each connected component is an independent CSP. One can also recognize that the task of designing a treat in Chapter 6 is in fact a CSP. This is true of all problems that can be posed as search problems, and CSP is another formulation for a general problem solving method. 8 This assumption is made to simplify the algorithm description. In practice, one may pass a pointer to the variable or array. 2 o n aan ay Advanced Planning Methods Chapter 10 Planning problems are often described by a Planning Domain Description Language (PDDL) (Fox and Long, 2003; Edelkamp, 2004; Gerevini and Long, 2005). The PDDL allows one to write a set of predicates that describe the domain and operators that describe the actions that are possible. A planning problem is an initial state description and a set of goal predicates that a solution plan is required to satisfy. The task of planning is to find a solution plan. The simplest plans are sequences of actions, and the most direct approaches to 