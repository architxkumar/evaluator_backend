l every time. However, when a problem is a new one, the first principles projection based methods have to be used. An efficient agent, for example an intelligent human being, will keep learning from experience, as and when new problems are encountered and solved. We will explore memory and knowledge based techniques later in the book (see Chapter 15). For the moment, we focus on how to find plans from first principles, by projecting the effects of candidate actions into the future. In order to explore planning algorithms in a domain independent form, a standardized notation for describing the world and also the actions has been developed. This is known as the Planning Domain Description Language (PDDL) (McDermott, 1998). PDDL allows one to define the language in terms of which the world will be described, as well as the actions that the planner is capable of, expressed in terms of schemas. The language is based on First Order Logic notation (see Chapter 12). It also allows one to state a specific planning problem by describing the current state and the objectives or goals using the constructs defined in the schema. The planning algorithms can then be written in a domain independent form. The domain and problem descriptions will become inputs to the domain independent algorithms. The complexity of planning will depend upon the expressiveness of the PDDL and the constructs defined. Starting with the simplest planning domain and problems, a series of more expressive PDDL languages have been defined (Fox and Long, 2003; Edelkamp, 2004; Gerevini and Long, 2005). In each new language, the world and the actions can be described in a richer fashion, taking more and more aspects from the real world problem. However, even the simplest of planning domains known as STRIPS domains described below pose problems that are computationally hard to solve (Gupta and Nau, 1992). This is not surprising, given that they are basically viewed as search problems in the classical approaches. 