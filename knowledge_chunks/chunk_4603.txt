n place we need to effect the formal creation of the agents. An agent can be created with the predicate agent_create/3 comprising the Name of the agent, the associated handler/3 predicate name and the Port number through which it can be accessed. After both the agents have been created the next step is to establish a connection between them using agent_create/4 which has a different interpretation. This predicate has four arguments. The first is the name of the local agent which is being connected. The second is the link number which is used at later stages to define this link. The third and fourth arguments comprise the IP address of machine at which the other agent is running and the associated port number. The scene is now set for the agents to communicate. Passing information can be done by using agent_post/3 which uses the posting agent s name, the link number that describes the connection and the event (data) to be passed on. When the data is received at the other end, the corresponding handler of that agent is invoked. Try copying the programs given in the columns Agent#] and Agent#2 of Table 25.4 on two different files each opened in two instantiations of WIN-PROLOG. Compile both in their respective instantiations and issue the goals in the order shown in the Table 25.4. Try and interpret the data being received by tracing the clauses of the respective handlers. | | PROLOG - The Natural Language of Artificial Intelligence 519 Table 25.4 Two Chimera Agents designated me and you Agent#} Comments Agent#2 WINPROLOG Instantiation#! WIN-PROLOG Instantiation#2 Name: me Agent: Name Name: you ensure_loaded(system(chimera)). These lines are mandatory and load the LPA Chimera Agent System. :-ensure_loaded(system(chimera)). me_handler{Name, Link, to_do(Do This}):- writeq(Name - Link - to_do_(Do This)), what_to_do_with{ Do This,Now Do This), agent_post( Name, Link, get(Now Do This)), ni. me_handler(Name, Link, get(Now Do This)):- ni,write(Now Do This). /*The following ha