is important that this lattice not be built explicitly but only used as an implicit structure as the ATMS proceeds. As an example of how an ATMS-based problem-solver works, let s return to the ABC Murder story. Again, our goal is to find a primary suspect. We need (at least) the following assumptions: e Al. Hotel register was forged. e A2. Hotel register was not forged. e A}. Babbitt s brother-in-law lied. e A4. Babbitt s brother-in-law did not lie. AS, Cabot lied. A6. Cabot did not lie. e A7. Abbott, Babbitt, and Cabot are the only possible suspects. * A8. Abbott, Babbitt, and Cabot are not the only suspects. The problem-solver could then generate the nodes and associated justifications shown in the first two columns of Fig. 7.14. In the figure, the justification for a node that corresponds to a decision to make assumption Nis shown as {N}. Justifications for nodes that correspond to the result of applying reasoning rules are shown as the rule involved. Then the ATMS can assign labels to the nodes as shown in the second two columns. The first shows the label that would be generated for each justification taken by itself. The second shows the label (possibly containing multiple contexts) that is actually assigned to the node given all its current justifications. These columns are identical in simple cases, but they may differ in more complex situations as we see for nodes 12, 13, and 14 of our example. Nodes Justifications Node Labeis t Register was not forged {A2} {A2} A2}. [2] Abbott at hotel tl 2] {A2 AQ 3] B+I-L didn't fie 4) {A4}, AA! [4] Babbitt at B-I-L 13] > [4] {A4 Aa} (5) Cabot didn t lie {6} {AG} AG) {6 Cabot at ski show [5] > [6] {A6 AB} [7] A, B, C only suspects {A7} A7} A7] [8 Prime Suspect Abbott [7] A [13] A [14] > [8] {A7, A4, AB} A7, A4, A6} (9) Prime Suspect Babbitt IVA [12] A [14] > [9] {A7, A2, AB |A7, A2, AB} [10] Prime Suspect Cabot A 112] A [13] > [10] {A7, A2, Aa AT, A2, Ad} (11 A, B,C not oniy suspects {A8} {A8! {AB} [12] Not prime suspect 