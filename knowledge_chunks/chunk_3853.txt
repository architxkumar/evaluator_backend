rested in reading about? Person: I think I'd like to start with its history. Computer: Why don t you want to read any more about China? It would have been fine to have tried to find out why the person was no longer interested in China right after he or she mentioned it. The computer chose instead to try to find a new area of positive interest, also a very reasonable thing to do. But in conversations, the fact that something is reasonable now does not mean that it will continue to be so after the conversation has proceeded for a while. So it is not a good idea simply to put possible statements on an agenda, wait until a later lull, and then pop out with them. More precisely, agendas are a good way to implement monotonic production systems (in the sense of Section 2.4) and a poor way to implement nonmonotonic ones. Despite these difficulties, agenda-driven contro! structures are very useful. They provide an excellent way of integrating information from a variety of sources into one program since each source simply adds tasks and 64 Artificial Intelligence justifications to the agenda. As AI programs become more complex and their knowledge bases grow, this becomes a particularly significant advantage. 3.4 PROBLEM REDUCTION So far, we have considered search strategies for OR graphs through which we want to find a single, path to a goal. Such structures represent the fact that we will know how to get from a node to a goal state if we can discover how to get from that node to a goal state along any one of the branches leaving it. 3.4.1 AND-OR Graphs Another kind of structure, the AND-OR graph (or tree), is useful for representing the solution of problems that can be solved by decomposing them into a set of smaller problems, all of which must then be solved. This decomposition, or reduction, generates arcs that we call AND arcs. One AND arc may point to any number of successor nodes, all of which must be solved in order for the arc to point to a solution. Just as in an OR 