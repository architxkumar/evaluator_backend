tion. Instead, we need to look at the total estimated cost of a solution. In the above example, the total estimated cost of the two options is 46 and 52 respectively. After every expansion by the algorithm, the best choice at each node is marked. The search should refine the marked solution. In the above example, this means that it should expand the node A next. ( Best option 3 G) marked AGT a 32 rere New estimated total cost he rr. Best option marked Figure 6.8 After node A is expanded, there are two options (D, E) and (F, G) with estimated costs 54 and 45 respectively. The revised estimate of A now becomes 45, the lower of the two. Propagated back to root, this option has a revised cost of 49. It is still a better option, and AO will now go down the marked path and expand one of F and G. The resulting graph is shown in Figure 6.8 and it represents a typical AO graph, not yet solved completely. Observe that there are two choice points in the graph, and at both, the best solution is marked. The topmost task at the root has two options. Let us call them the left option and the right option. In general, of course, there may be any number of options. The left option has been refined and it itself has two options for further decomposition. Again, the best option is marked. The left option, represented by node A, had a heuristic estimate of 42 before expansion, which was revised to 45, the better of the two sub-options, represented by nodes F and G, and marked as the better option. The revised estimate of node A has to be propagated up, and the left option at the root now evaluates to 49 instead of 46. In every cycle of refinement, the algorithm starts at the root. It follows the marked best option at each choice point, until it reaches some yet unsolved node or a set of nodes. It will refine one of them, and then propagate the new values back up again. In the process if the subproblems of a given node are SOLVED nodes then it may also propagate SOLVED label back. The al