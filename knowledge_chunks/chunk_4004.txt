ting consistency, But its is important to note that only expressions generated by the application of the stated inference rules to the original knowledge are allowed in an extension. Gratuitous additions are not permitted. 154 Artificial Intelligence wrong, which it will be whenever there were other antecedents besides A that could have produced B. We discuss ways of doing this in Chapter 8. Abductive reasoning is not a kind of logic in the sense that DL and NML are. In fact, it can be described in either of them. But it is a very useful kind of nonmonotonic reasoning, and so we mentioned it explicitly here. Inheritance One very common use of nonmonotonic reasoning is as a basis for inheriting attribute values from a prototype description of a class to the individual entities that belong to the class. We considered one example of this kind of reasoning in Chapter 4, when we discussed the baseball knowledge base. Recall that we presented there an algorithm for implementing inheritance. We can describe informally what that algorithm does by saying, An object inherits attribute values from all the classes of which it is a member unless doing so leads to a contradiction, in which case a value from a more restricted class has precedence over a value from a broader class. Can the logical ideas we have just been discussing provide a basis for describing this idea more formally? The answer is yes. To see how, let s return to the baseball example (as shown in Figure 4.5) and try to write its inheritable knowledge as rules in DL. We can write a rule to aceount for the inheritance of a default value for the height of a baseball player as: Baseball-Player(x) : height(x, 6-1) height(x, 6-1) Now suppose we assert Pitcher(Three-Finger-Brown). Since this enables us to conclude that Three-Finger Brown is a baseball player, our rule allows us to conclude that his height is 6-1. If, on the other hand, we had asserted a conflicting value for Three Finger had an axiom like Wx, y, z 1: h