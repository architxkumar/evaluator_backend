ttribute that the corresponding value is added to the inverse. An Isa Hierarchy of Attributes Just as there are classes of objects and specialized subsets of those classes, there are attributes and specializations of attributes. Consider, for example, the attribute height. It is actually a specialization of the more general attribute physical-size which is, in turn, a specialization of physical-attribute. These generalization-specialization relationships are important for attributes for the same reason that they are important for other concepts they support inheritance. In the case of attributes, they support inheriting information about such things as constraints on the values that the attribute can have and mechanisms for computing those values. Techniques for Reasoning about Values Sometimes values of attributes are specified explicitly when a knowledge base is created. We saw several examples of that in the baseball example of Fig. 4.5, But often the reasoning system must reason about values it has not been given explicitly. Several kinds of information can play a role in this reasoning, including: Information about the type of the value. For example, the value of height must be a number measured in a unit of length. Constraints on the value, often stated in terms of related entities. For example, the age of a person cannot be greater than the age of either of that person s parents. Rules for computing the value when it is needed. We showed an example of such a rule in Fig. 4.5 for the bats attribute. These rules are called backward rules. Such rules have also been called ifneeded rules. e Rules that describe actions that should be taken if a value ever becomes known. These rules are called forward rales, or sometimes if-added rules. We discuss forward and backward rules again in Chapter 6, in the context of rulebased knowledge representation. Single-Valued Attributes A specific but very useful kind of attribute is one that is guaranteed to take a unique value. 