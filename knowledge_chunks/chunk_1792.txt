his section, we describe two families of efficient algorithms for general propositional
inference based on model checking: One approach based on backtracking search, and one
onlocalhill-climbing search. Thesealgorithms arepartof the technology ofpropositional
logic. Thissectioncanbeskimmedonafirstreadingofthechapter.
260 Chapter 7. Logical Agents
Thealgorithmswedescribeareforcheckingsatisfiability: the SA Tproblem. (Asnoted
earlier, testing entailment, , can be done by testing unsatisfiability of .) We
have already noted the connection between finding a satisfying model fora logical sentence
andfindingasolutionforaconstraintsatisfactionproblem,soitisperhapsnotsurprisingthat
the two families of algorithms closely resemble the backtracking algorithms of Section 6.3
and the local search algorithms of Section 6.4. They are, however, extremely important in
theirownrightbecausesomanycombinatorialproblemsincomputersciencecanbereduced
to checking the satisfiability of a propositional sentence. Any improvement in satisfiability
algorithms hashugeconsequences forourabilitytohandlecomplexityingeneral.
7.6.1 A completebacktracking algorithm
DAVIS PUTNAM Thefirstalgorithm weconsider isoften called the Davis Putnamalgorithm, afterthesem-
ALGORITHM
inal paper by Martin Davis and Hilary Putnam (1960). The algorithm is in fact the version
described by Davis, Logemann, and Loveland (1962), so we will call it DPLL after the ini-
tials of all four authors. DPLL takes as input a sentence in conjunctive normal form a set
of clauses. Like BACKTRACKING-SEARCH and TT-ENTAILS?, it is essentially a recursive,
depth-first enumeration ofpossible models. Itembodies threeimprovements overthesimple
schemeof TT-ENTAILS?: Early termination: The algorithm detects whether the sentence must be true or false,
even with a partially completed model. A clause is true if any literal is true, even if
the other literals do not yet have truth values; hence, the sentence as a whole could be
judged true even bef