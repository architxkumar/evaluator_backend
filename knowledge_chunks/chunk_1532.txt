theprevious sec-
tion? Wecaneasilyseethatitiscomplete iftheshallowestgoalnodeisatsomefinitedepth
d, breadth-first search will eventually find it after generating all shallower nodes (provided
the branching factor b is finite). Note that as soon as a goal node is generated, we know it
is the shallowest goal node because all shallower nodes must have been generated already
and failed the goal test. Now, the shallowest goal node is not necessarily the optimal one;
82 Chapter 3. Solving Problemsby Searching
function BREADTH-FIRST-SEARCH(problem)returnsasolution,orfailure
node anodewith STATE problem.INITIAL-STATE,PATH-COST 0
ifproblem.GOAL-TEST(node.STATE)thenreturn SOLUTION(node)
frontier a FIF Oqueuewithnode astheonlyelement
explored anemptyset
loopdo
if EMPTY?(frontier)thenreturnfailure
node POP(frontier) choosestheshallowestnodeinfrontier addnode.STAT Etoexplored
foreachaction inproblem.ACTIONS(node.STATE)do
child CHILD-NODE(problem,node,action)
ifchild.STAT Eisnotinexplored orfrontier then
ifproblem.GOAL-TEST(child.STATE)thenreturn SOLUTION(child)
frontier INSERT(child,frontier)
Figure3.11 Breadth-firstsearchonagraph.
technically, breadth-first search isoptimal ifthe path cost is anondecreasing function of the
depthofthenode. Themostcommonsuchscenarioisthatallactions havethesamecost.
So far, the news about breadth-first search has been good. The news about time and
space is not so good. Imagine searching a uniform tree where every state has b successors.
Therootofthesearchtreegenerates bnodesatthefirstlevel,eachofwhichgenerates bmore
nodes, foratotalofb2 atthesecond level. Eachofthesegenerates bmorenodes, yielding b3
nodes atthe third level, and soon. Nowsuppose that the solution isatdepth d. Inthe worst
case,itisthelastnodegenerated atthatlevel. Thenthetotalnumberofnodesgenerated is
b b2 b3 bd O(bd).
(Ifthealgorithmweretoapplythegoaltesttonodeswhenselectedforexpansion,ratherthan
whengenerated, thewholelayerofnodesatdepth dwouldbeexpanded before thegoalwas
detected