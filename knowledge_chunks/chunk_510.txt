 made up of, 1. a Fact Mutex Vector (FMV), mvecs, which is a fact-spike vector indicating which facts the given fact is mutex with, and 2. an Achievement Vector (AV) which is an action spike indicating which actions add that fact. The action-level package are made up of, 1. an Action Mutex Vector (AMV), which is an action spike indicating which actions are mutex with the given actions, a list (MA) of actions that are mutex with the given action, and a bit vector changedActs to keep track of temporary mutex relations. 2. 3. Mutexes can also be checked by bit-level logical operations. Actions mutexes may be permanent or temporary. Two actions are permanently mutex if their preconditions, add effects and delete effects interact. Two actions a and b are (permanently) mutex if ((precs(a) V adds(a)) A dels(b)) V ((precs(b) V adds(b)) A dels(a)) is nonzero. Two actions may be temporarily mutex if some of their preconditions are mutex. Let p,1, - Pak be the preconditions of action a. Then actions a and b are mutex if (mvecs(pz1) V ... V mvecs(pa1)) A precs(a)) is nonzero. Given that mutexes between actions can only disappear, STAN keeps track of actions becoming nonmutex in the changedActs vector to avoid repeated checks for temporary mutexes. STAN first constructs the spike graph till the opening layer where all the goals are present nonmutex. This is analogous to the PlanningGraph algorithm of Figure 10.6. After that it alternates between testing for a plan and extending the graph till it has levelled off, or reached the fixed point. If a plan is still not found, STAN leaves the spike graph as it is from here on, since no changes can be made. It does further exploration using a wavefront. The idea is that one needs to consider all possible subgoal sets at the fixed point to be able to terminate with failure. STAN maintains a queue of goal sets to be considered at the fixed point layer, and a buffer in which new goal sets are considered. The new goal sets are the ones that