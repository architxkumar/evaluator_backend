an talk about itself as shown by the logician F (1992). The machine operates on a vocabulary -, P, N, (,) and operates as follows. pression X is a non-empty string on the alphabet. We say that the expression is printable ( proval can print it. We assume that the machine is complete in the sense that it will eventually print any Qn. orm of an expression X is defined as X(X). Let us interpret P as printable , and N as the not of the language ( logic) is an expression of one of the following four forms. We also describe alon f the sentences. ) :X is printable. (X) :The norm of X is printable, or P(X(X)). X) :X is not printable. V(X) :The norm of X is not printable, or P(X(X)). is an expression. A sentence is true when what it asserts (about its domain the machine) is aP(X) is truexif-andonlynif X is not printable. The statements in the (logic) machine are talking itself, as to what the machine can print and what it cannot print. machine is sound and prints P(X) at any stage it means that P(X) is true, this i in turn says that the wmf. WISLUSSIVIT easoning is concerned with making the implicit explicit. Given a set OL Seine ents, there are others entailed by the explicit statements. The exteriorization of the implicit is fifeans of rules. juestion of what rule to apply and when is critical for the effective functioning of a logic machin is to apply a rule of inference when one can. This is called assertion time inference or forward k and McDermott, 1985). If one applies a rule as soon as its antecedents are available, in a da then one ends up with a larger database of statements containing all entailed statements in an exp this data base would just be a matter of lookup. Of course this can only be done in domains where statements is finite. ther strategy is to apply rules in a lazy fashion, only when there is a goal that needs to be evaluate ery time inference or backward chaining. Backward chaining is the more commonly used approach directed. One makes inferences only 