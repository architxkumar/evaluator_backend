 algorithms searching from the left to the right. Heuristic Search Chapter 3 " the search algorithms described in Chapter 2, the only role that the goal node plays is in testing whether the candidate presented by the search algorithm is a goal or not. Otherwise, the search algorithms are quite oblivious of the goal node. Any intelligent observer watching the progress of the algorithms would soon get exasperated! They always go about exploring the state space in the same order, irrespective of the goal to be achieved. They are, therefore, called blind or uninformed. The Depth First Search (see Figure 3.1) dives into the search space, backtracking only if it reaches a dead end. If the search space were infinite, it might just keep going along an endless path. The Breadth First Search, on the other hand, ventures out cautiously, going further away, only if it has finished inspecting the nodes the same distance away from the start position. Consequently, it always finds the shortest solution, though its space requirements grow exponentially. DFID is basically a sequence of depth first searches masquerading as a breadth first search. we ( . ) r. : Oo a pi a o e) 1 t FIGURE 3.1 DFS searches blindly, wherever the goal may be. The search algorithms described so far maintain a list, called OPEN, of candidate nodes. Depending upon whether the algorithm operates OPEN as a stack or as a queue, the behaviour is either depth first or breadth first. What we would like is the algorithm to have, instead, some sense of direction. If it could make a guess as to which of the candidates is more likely to lead to the goal, it would have a chance of finding the goal node faster. We introduce the notion of a heuristic function to enable the search algorithm to make an informed guess. 3.1 Heuristic Functions As seen in Chapter 2, the time required for search could be exponential in the distance to the goal. The idea of using a heuristic function is to guide the search, so that it has a tend