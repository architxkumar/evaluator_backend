, CB) case CB sim,(case, C) t, Case cohesion can then be defined as, cohesion(C) Sinter(C, CB) Sunion(C, CB) Sinter(C, CB) Sp(C, CB) N S,(C, CB) and Sunion(C, CB) Sp(C, CB) U S,(C, CB) If the two sets are identical then the value of case cohesion will be 1. A lower value means that there are more cases that belong to either Sp(C, CB) or S,(C, CB), but not to the other. One can compute the cohesion of the case base by computing the case cohesion value for each case. The higher the value of cohesion means that the best matching cases on the problem space similarity are likely to be the best matching cases on the solution space similarity. That is, similar problems will have similar solutions. Now we turn our attention to how the best matching cases may be retrieved from a case base. 15.2 Retrieval The task of retrieval is to retrieve the best matching cases. As discussed earlier, in this chapter, this may involve, retrieving all cases with maximum similarity. retrieving K Nearest Neighbours (KNN) or the K most similar cases. retrieving all cases above a given threshold level of similarity. 15.2.1 Similarity Based Retrieval Similarity search, or nearest neighbour search, is different from range search in databases. Suppose we have some four dimensional numeric data in the range 0 100 . Then, given a query with an attribute schema (Ay, Aa, Az, Aa), Q (30, 40, 50, 60) the following cases have equal similarity using the average aggregation as shown below: Cy (40, 20, 40. 50) Cy (30. 80. 50, 60) C3 (80. 40, 50, 60) sim(Q,C;) average((sint(q,, 41). sit(qy. 13). sim(qs. C13). sim(qy. 14)) (sim(qy. 41) simm(q, 43) siim(gs, C13) sim(gy. oy) V4 ((L -130 40) 100) (1 (40 20 100) (1 (50 40) 100) (1 - ((60 40) 100))'4 (0.9 0.8 0.9 0.8) 4 0.85 stn Q,Cy) (simm(qy. C24) Sim(Gy. Cry) stn gs. C23) sim(qy, Cr4)4 ((1 430 50 100) (1 ( 40 80 100) (1 - ( 80 30)'100) (1 - (60 - 60 100))'4 (08 06 1.0 1.0) 4 0.85 sim(O,C,) (sim(q,. 3,) simlqy. 33) sitm(qs. 43) sim(qy. 53))4 ((1 30 90 100) (1 (4