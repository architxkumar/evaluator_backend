 nodes and same labeled arcs and all node-to-node arcs are the same. More generally, we wish to determine if C2 with m nodes is a subgraph of G with n nodes, where n m. In a worst case match, this will require n!/(n - m)! node comparisons and 0(m) arc comparison Consequently, we will see that most graph matching applications deal with sm manageable graphs only or use some form of heuristics to limit the number comparisons. Finding subgraph isomorphisms is also an important matching problem. An isomorphism between the graphs G1 and G2 with vertices (nodes) Vt. V2 and edges El, E2. that is, (Vl,El) and (V2,E2), respectively, is a one-to-one mapping to I between Vl and V2, such that for all vi Vt. f(H) = v2, and for each arc el f(vl) El connecting vi and vi', there is a corresponding arc e2 e E2 connecting and f(vl'). An example of an application in which graph isomorphisms are used to determine the similarity between two graphs is given in the next section. 200 Matching Techniques Chap. 10 Matching Sets and Bags An exact match of two sets having the same number of elements requires that their intersection also have that number of elements. Partial matches 6f two sets can also be determined by taking their intersection. If the two sets have the same number of elements and all elements are of equal importance, the degree of match can be the proportion of the total members which match. If the number of elements differ between the sets, the proportion of matched elements to the minimum of the total number of members can be used as a measure of likeness. When the elements are not of equal importance, weighting factors can be used to score the matched elements. For example, a measure such as s(Sl.S2) = ( w,N(a))/m (107) could be used, where w = I and N() = I if a, is in the intersection; otherwise it is 0. An efficient way to find the intersection of two sets of symbolic elements (nonnumeric atoms) in LISP is to work through one set marking each element on the elements prop