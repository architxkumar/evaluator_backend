rs, the key to intelligent behavior is having a lot of knowledge. Getting all of that knowledge into a computer is a staggering task. One hope of sidestepping the task is to let computers acquire knowledge independently. as people do. We do not yet have programs that can extend themselves indefinitely. But we have discovered some of the reasons for our failure to create such systems. If we look at actual leaming programs. we find that the more knowledge a program starts with. the more it can learn. This finding is satisfying, in the sense that it corroborates our other discoveries about the power of knowledge. But it is also unpleasant, because it seems that fully self-extending systems are, for the present, stil] out of reach. Research in machine learning has gone through several cycles of popularity. Timing is always an important consideration. A learning program needs to acquire new knowledge and new problem-solving abilities, but knowledge and problem-solving are topics still under intensive study. 1f we do not undersiand the nature of the thing we want to learn, learning is difficult. Not surprisingly. the most successful learning programs operate in fairly well-understood areas (like planning), and not in less well-understood areas (like natural language understanding). Learning 375 as Hg EON A DIR TES RAT TR EXERCISES . Would it be reasonable to apply Samuel's rote-learning procedure to chess? Why (not)? Implement the candidate elimination algorithm for version spaces. Choose a concept space with several features (for example, the space of books, computers, animals, etc.) Pick a concept and demonstrate learning by presenting positive and negative examples of the concept. . In Section 17.5.2, the concept Japanese economy car was learned through the presentation of five positive and negative examples. Give a sequenee of four examples that accomplishes the same goal. In general, what properties of a positive example make it most useful? What makes a negative exa