 be defined as the structure illustrated in Figure 8.5. 8.6 SUMMARY Object-oriented systems are useful in modeling many real-world situations in which real objects can be put in a one-to-one correspondence with program classes and objects. In an OOS all entities are objects, and objects are protected from other entities. They interact with other objects through an interface which recognizes a set of messages called the protocol for the class. Each class within an. OOS will have its own unique behavior which is governed by a set of class methods. Methods and instance variables may be inherited by a class of objects from its parents or superclasses. Multiple inheritance is also supported by many systems. OOS languages are well suited for certain types of system simulation problems because of the natural way in which OOS programs model real systems. To build a simulation program in an OOS such as Smalltalk, one first defines the object classes required. their hierarchical relationship with each other, and the behaviors of the objects within each class. The events of importance are also defined and the sequence in which they may occur. Message formats for class protocols are then defined, and the specific methods are then coded. OOS capabilities have been developed for several LISP sytems as add-ons such as found in FLAVORS. Special purpose OOS languages have also been developed such as the ROSS system which was developed to provide capabilities not available in other simulation languages. Chap. 8 Exercises 165 EXERCISES 8.1. Show the order of evaluation for the subexpressions given in the following Cxprc..sion: 9/2 between: 8+ l9sqrt and: 45 8.2. What values will be printed after the following sequences! a.il7 j: i + Ij i print b. j value print (after the sequence in a above) c. i value print (after the sequence in b above) 8.3. What is the class of Class? What is the superclasg of Class? 8.4. What is the result from typing the following expression? 3 - (4 print) * 6 8