ssThan ?x, ?y4) 1 (LessThan ?x2 ?y2) V (LessThan (successor ?x ) (Successor ?y2)) essThan 0 (successor ?x3)) 1 (LessThan (successor 0) (successor 0))) negated goal 1(LessThan 0 0)) 2,4, 2x2 0, ?y 2 0 1 (LessThan (RAsPREE RD 0)) 1, 5, 2x, 0, ?y, 0 1 (LessThan (Successor (Successor 0)) 0)) 1, 6, 2x, (successor 0), ?y, 0 7 (LessThan (successor (successor (successor 0))) 0)) 1, 7, 2x, (successor (successor 0)), programmer had only to specify the logical relations between the input and output, and leave the te g the sequence of commands to the language interpreter (Kowalski, 1979a). However, there is no fi ve shall look at briefly, the idea of programming is still necessary ikanmia.towrite efficient cod 0k on Prolog has been (Clocksin and Mellish, 2003). A good introduction to logic programming can 1g and Shapiro, 1994), an account of its theoretical foundations in (Lloyd, 1984), and a recent introc (Blackburn et al, 2006). n clause is a clause with at most one positive literal. Thus, it is of the form, 9D, V 72D2 V... V 7Dy V Dyas Iso convenient to think of a Horn clause like the one above as a rule, Dy A Dy A... Dy) D Dye wo forms are logically equivalent. The key feature is that a Horn clause does not allow a disjuncti ant. This also means that disjunctive uncertainty cannot be expressed in Horn clause logic. One cant ent like (Green(A) V Green(B)) because that is not a Horn clause. A conjunction can be incorpce les to infer the individual elements, and another rule to infer the consequent. For example, if one A B) D(C A D), one could write the rules, (AA B)DC (AA B)DD (CA D)DF stands for the conjunct, or F (C A D). n clause may made up of only a positive literal, like A , and such a literal is also known as a fact. sequent with no antecedents. rn clause which has a positive literal is known as a definite or positive clause; else it is called a he empty clause is a negative Horn clause. In any resolution step at least one of the parent clauses clause. re interested in