uch knowledge can effectively compress the search space, as we saw in the Eight-puzzle example using macro operators. But in doing so, they may lose the generality and completeness of search. One of the challenges in the domain of planning is to combine the domain compression achievable through the deployment of knowledge with the flexibility and completeness of search. Ideally, a system should be able to exploit knowledge wherever it can, and fall back on search where it cannot. One can then think of complete planning systems that can become more and more efficient, as they have access to more and more knowledge. This knowledge could be generated though approaches to machine learning, but could also be acquired from external sources, like a teacher, or an experienced elder when the planner is in a social setup. 7.6 A Unified Framework for Planning The planners described in this chapter represent themes that were explored up to the mid-nineties in the twentieth century. Most researchers tended to view the different approaches as fundamentally different, until it was shown by Rao Kambhampati that all these approaches to planning could be viewed in a unified framework that he called refinement planning (Kambhampati, 1997). Significantly, he argued that the state space planning approaches too had a place in the unified framework in which the basic structure being operated upon is a partial plan. The partial plan is a partially ordered network in which nodes represent operators, and edges represent ordering links and causal links. The ordering links are divided into two kinds. One, called precedence links, assert that one action happened before another. The other, called contiguity links, represent the fact that one action happened immediately before another. The two ends of the partial plan are the actions Ag and A. as in plan space planning described earlier. The head step is the last step at the end of a chain of contiguity links starting from Ao, and the tail step i