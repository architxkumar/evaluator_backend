), we use a second heuristic known as promotion. Promotion, first used by Sussman in his HACKER program [Sussman, 1975], amounts to posting a constraint that one step must precede another in the eventual plan. We can achieve CLEAR(B) by stating that the PICKUP(B) step must come before the STACK(A, B) step: PICKUP(B) STACK(A, B) Let s now tum to the two unachieved *ARMEMPTY preconditions [we deal with *CLEAR(A) a little later]. While the initial state has an empty arm, each of the two pickup operators contain -ARMEMPTY postconditions. Either operator could prevent the other from executing. We can use promotion to achieve at least one of the two preconditions: PICKUP(B) PICKUP(A} Since the initial situation contains an empty arm, and no step preceding PICKUP(B) could make it unempty, the preconditions of PICKUP(B) are all satisfied. A third heuristic, called declobbering, can help achieve the * ARMEMPTY precondition in the PICKUP(A) step. PICKUP(B) asserts ->ARMEMPTY, but if we can insert another step between PICKUP(B) and PICKUP(A) to reassert ARMEMPTY, then the precondition will be achieved. The STACK(B, C) does the trick, so we post another constraint: PICKUP(B) < STACK(B, C) PICKUP(A) 35, S, means that step S, must precede step S, in the eventual plan. Planning 265 Se cemnemaeeeenen The step PICKUP(B) is said to clobber PICKUP(A) s precondition, STACK(B, C) is said to declobber it. Declobbering was first used in the NOAH planner [Sacerdoti, 1975], and then in NONLIN. NOAH was the first nonlinear planner to make use of the heuristics we are discussing here. NOAH also used many other heuristics and was able to solve a number of difficult nonlinear planning problems. Still, there were some natura! problems that NOAH could not solve. In particular, NOAH s inability to backtrack prevented it from finding many solutions. The NONLIN program included backtracking, but it also failed to solve many hard problems. Back in our example, the only unachieved precondition left is