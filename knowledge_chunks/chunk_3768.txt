hat previously required hours of a skilled engineer s time. Such programs are usually evaluated by looking at the bottom line whether they save (or make) money. For many everyday tasks, though, it may be even harder to measure a program s performance. Suppose, for example, we ask a program to paraphrase a newspaper story. For problems such as this, the best test is usually just whether the program responded in a way that a person could have, If our goal in writing a program is to simulate human performance at a task, then the measure of success is the extent to which the program s behavior corresponds to that performance, as measured by various kinds of experiments and protocol analyses. In this we do not simply want a program that does as well as possible. We want one that fails when people do. Various techniques developed by psychologists for comparing individuals and for testing models can be used to do this analysis. We are forced to conclude that the question of whether a machine has intelligence or can think is too nebulous to answer precisely. But it is often possible to construct a computer program that meets some performance standard for a particular task. That does not mean that the program does the task in the best possible way. It means only that we understand at least one way of doing at least part of a task. When we set out to design an AI program, we should attempt to specify as well as possible the criteria for success for that particular program functioning in its restricted domain. For the moment, that is the best we can do. 1.6 SOME GENERAL REFERENCES There are a great many sources of information about artificial intelligence. First, some survey books: The broadest are the multi-volume Handbook of Artificial Intelligence [Barr ert al.. 1981] and Encyclopedia of Artificial Intelligence [Shapiro and Eckroth, 1987], both of which contain articles on each of the major topics in the field. Four other books that provide good overviews of the field are A