d flow. Underlying cach of these examples is a complicated mapping between what appear to be dissimilar concepts. For example, to understand the first sentence above, it is necessary to do two things: (1) pick out one key property of a roller coaster, namely that it travels up and down rapidly and (2) realize that physical travel is itself an analogy for numerical fluctuations (in stock prices). This is no easy trick. The space of possible analogies is very large. We do not want to entertain possibilities such as the stock market is like a roller coaster because it is made of metal. Lakoff and Johnson [| 1980] make the case that everyday language is filled with such analogies and metaphors. An A] program that is unable to grasp analogy will be difficult to talk to and, consequently, difficult to teach. Thus, analogical reasoning is an important factor in learning by advice taking. It is also important to learning in problem-solving. Humans often solve problems by making analogies to things they already understand how to do. This process is more complex than storing macro-operators (as discussed in Section 17.4.2) because the old problem might be quite difterent from the new problem on the surface. The difficuity comes in determining what things are similar and what things are not. Two methods of analogical problem solving that have been studied in Al are transformational and derivational analogy. 17.8.1 Transformational Analogy Suppose you are asked to prove a theorem in plane geometry. You might look for a previous theorem that is very similar and copy _| New _ eraviously its proof, making substitutions when necessary. The idea is to Problem Problem transform a solution to a previous problem into a solution for the current problem. Figure 17.19 shows this process. An example of transformational analogy is shown in Fig. 17.20 [Solution | Solution [Anderson and Kline, 1979]. The program has seen proofs about New ete - points and line segments; for example, it knows a