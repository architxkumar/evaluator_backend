ses a node with the smallest number of neighbours in the constraint graph, and removes it and the edges emanating from it. Before proceeding further, however, it connects the parents of the node just selected. MinInducedWidth (G (V ,, ., Vyl, 5)) 10 () 2 for k n downto 1 3 lowestDegree RemoveLowestDegreeNode (G) 4 ECEUV ((p, g) (p, lowestDegree) E and (lowestDegree, g) E 5 E EU ((qg, p) (g, lowestDegree) E and (lowestDegree, p) E 6 Eee ( , y) x lowestDegree or y lowestDegree 7 O cons(lowestDegree, 0) 8 return 0 FIGURE 9.30 The algorithm MininducedWiadth is like the algorithm MinWidth in Fig. 9.28, except that while removing the selected node from the graph it connects its parents with edges. Observe that we have added two pairs (p, q) and (q, p) for every new edge for simplicity. Figure 9.31 shows the ordering produced by the algorithm MinInducedWidth on the constraint graph depicted in Figure 9.29. Observe that the induced width on this ordering ABCEFDG is three, which is lower than taking a minimum width ordering and then connecting the parents. Width 0 1 2 2 1 2 2 Induced Width 0 1 2 3 2 2 2 FIGURE 9.31 The induced width of the ordering produced by the algorithm MininducedWidth on the graph of Fig. 9.29 is three. Another algorithm that has been experimentally shown to be better than the MininducedWiadth algorithm is the MinFill algorithm. The MinFill algorithm selects that node to be placed in the reverse order for which the number of edges needed to connect all its parents is the minimum. 9.6 Algorithm Backtracking The constraint propagation methods described above are directed towards shrinking the space in which one searches for a solution. It is possible to enforce consistency to the extent that finding a solution can be done in one pass over the variables in a backtrack free manner, selecting an allowed value for each variable. But such reasoning has a computational cost that may become prohibitive. At the other end is the conceptually simple search algorith