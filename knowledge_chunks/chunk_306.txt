, demonstrates that even in simple problems in the blocks world, the subgoals may not be serializable (Sussman, 1975). That is, there is no ordering of subgoals where when each of the subgoals is solved individually, the goal is solved as a consequence. The progress of the GSP on Sussman s Anomaly is illustrated in Figure 7.10. We can observe that neither serialization of the two predicates will result in success. In both cases, the goal predicate achieved later undoes the one solved earlier. We have tackled this problem by adding an extra check for the entire conjunct. The algorithm will, therefore, realize that the goal has not been achieved and attempt the problem again, from the new state it is in. From here, it will find a solution in both cases. However, with this extra check we have created another problem. If the goal is inconsistent then the algorithm may never terminate. For example, if the goal were to be on(A, B) A on(B, C) A on(C, A), the algorithm will go into an infinite loop. o pickup(B) stack(B, C) Co) The Given State y unstack(B, C) putdown(B) unstack(C, A) First achieve on(B, C) unstack(C, A) putdown(C) putdown(C) pickup(A) pickup(A) stack(A, B) stack(A, B) q LB Co - Then achieve on(A, B) B es First achieve on(A, B) unstack(A, B) He putdown(A) Cc pickup(B) CC stack(B, C) The Goal State Then achieve on(B, C) Figure 7.10 Neither order in Sussman s Anomaly solves the problem. In the blocks world, the extra check works. This is because in this domain, any state is reachable from any other state. If this were not the case then the GSP algorithm would have run into problems. Consider, for example, planning in the culinary domain, where the actions are mostly irreversible. A planner, for example, may need to do some actions in a particular order. If it commits to a wrong set of actions then it would need to be able to go back to the choice point and choose another action. Thus for completeness, backtracking in the backward phase would be necessary. We ca